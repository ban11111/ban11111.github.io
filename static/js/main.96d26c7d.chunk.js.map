{"version":3,"sources":["api/index.ts","stores/root.ts","api/req.ts","containers/demo/demo.js","routes/index.tsx","App.tsx","index.tsx"],"names":["request","wrapSend","requestFunc","type","a","res","data","response","success","info","msg","status","setTimeout","sessionStorage","clear","window","location","replace","err_msg","Api","down","download","url","body","post","responseType","uploadAudio","payload","this","http","getAPI","common","baseURL","headers","Token","getItem","axios","create","createRequest","demo","props","rec","Recorder","bitRate","sampleRate","disableEnvInFix","onProcess","buffers","powerLevel","bufferDuration","bufferSampleRate","enterLoading","index","setState","loadings","newLoadings","uploadFile","e","formData","FormData","append","api","then","resp","console","log","uploadFile2","blob","duration","recStart","call","IsOpen","start","set","state","t","open","clearTimeout","isUserNotAllow","audioType","target","value","stop","close","audioSrc","loading","onClick","controlAudio","recStop","name","id","onChange","changeScheme","Component","LoginContainer","lazy","Routes","path","component","React","browserHistory","createBrowserHistory","routingStore","RouterStore","history","syncHistoryWithStore","App","fallback","RootStore","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.96d26c7d.chunk.js","sourcesContent":["// 放所有 http 请求\nimport {AxiosInstance} from 'axios'\nimport {ReqType, wrapSend, Response, createRequest} from \"./req\";\n\n\n\nexport class Api {\n    request: AxiosInstance  // 普通请求\n    down: AxiosInstance     // 下载请求\n\n    constructor(request: ReqType) {\n        this.request = request.http\n        this.down = request.down\n    }\n\n    private download = async <T = any>(url = '', body: any = {}) => {\n        const res = await wrapSend<T>(() => {\n            return this.request.post<Response>(url, body, {responseType: 'blob'})\n        }, 'down')\n        return res\n    }\n\n    private post = async <T = any>(url = '', body?: any) => {\n        const res = await wrapSend<T>(() => {\n            return this.request.post<Response>(url, body)\n        })\n        return res\n    }\n\n    // 上传音频文件\n    uploadAudio = (payload: any) => {\n        return this.post(`/api/upload`, payload)\n    }\n}\n\nconst getAPI = (request: ReqType) => new Api(request)\n\nexport default getAPI(createRequest())","class Root {}\n\nexport default new Root()\n","import axios, {AxiosInstance, AxiosPromise} from \"axios\";\r\n\r\n\r\nexport interface ReqType {\r\n    http: AxiosInstance\r\n    down: AxiosInstance\r\n}\r\n\r\nexport interface Response {\r\n    success: boolean\r\n    msg?: string\r\n    data: any\r\n}\r\n\r\nexport interface Res<T> {\r\n    success: boolean\r\n    info: string\r\n    data?: T\r\n}\r\n\r\ntype requestFun = () => AxiosPromise<Response>\r\n\r\nexport const createRequest = (): ReqType => {\r\n    const common = {\r\n        baseURL: '',\r\n        headers: {\r\n            'Content-Type': 'application/json',\r\n            Token: sessionStorage.getItem('token')\r\n        }\r\n    }\r\n    // 设置请求拦截，在请求头中添加产品名称\r\n    const instance = axios.create(common)\r\n    return {\r\n        http: instance,\r\n        down: axios.create({ ...common, responseType: 'blob' })\r\n    }\r\n}\r\n\r\n\r\nexport const wrapSend = async <T>(requestFunc: requestFun, type?: string): Promise<Res<T>> => {\r\n    let response\r\n    try {\r\n        const res = await requestFunc()\r\n        const {data} = res\r\n        response = {\r\n            success: type ? true : data.success,\r\n            info: data.msg,\r\n            data: type ? data : data.data\r\n        }\r\n    } catch (err) {\r\n        const {data} = err.response\r\n        if (err.response.status === 403) {\r\n            setTimeout(() => {\r\n                sessionStorage.clear()\r\n                window.location.replace('/login')\r\n            }, 2000)\r\n            return {\r\n                info: 'Your login information is invalid, please login again!',\r\n                success: false\r\n            }\r\n        }\r\n        response = {\r\n            success: data.success,\r\n            info: data.err_msg,\r\n            data: data\r\n        }\r\n    }\r\n    return response\r\n}","import React, {Component} from \"react\";\r\nimport \"./index.css\";\r\n// import AudioAnalyser from \"react-audio-analyser\"\r\nimport 'antd/dist/antd.css';\r\nimport {Button} from 'antd';\r\nimport api from '../../api'\r\n\r\nimport Recorder from 'recorder-core'\r\nimport 'recorder-core/src/engine/mp3'\r\nimport 'recorder-core/src/engine/mp3-engine'\r\n\r\n// const audioType = \"audio/mp3\"\r\n\r\nexport default class demo extends Component {\r\n    constructor(props) {\r\n        super(props)\r\n        this.state = {\r\n            status: \"\",\r\n            loadings: [],\r\n            rec: null,\r\n        }\r\n    }\r\n\r\n    rec = Recorder({\r\n        type: 'mp3',\r\n        bitRate: 128,\r\n        sampleRate: 16000,\r\n        disableEnvInFix: false,\r\n        onProcess: function (buffers, powerLevel, bufferDuration, bufferSampleRate) {\r\n\r\n        }\r\n    })\r\n\r\n    componentDidMount() {\r\n        const t = setTimeout(function () {\r\n            console.log(\"无法录音：权限请求被忽略（超时假装手动点击了确认对话框）\", 1);\r\n        }, 8000);\r\n\r\n        console.log(\"正在打开录音，请求麦克风权限...\");\r\n        this.rec.open(function () {\r\n            clearTimeout(t);\r\n            console.log(\"已打开录音，可以点击开始了\", 2);\r\n\r\n            //rec.start() 此处可以立即开始录音，但不建议这样编写，因为open是一个延迟漫长的操作，通过两次用户操作来分别调用open和start是推荐的最佳流程\r\n        }, function (msg, isUserNotAllow) {//用户拒绝未授权或不支持\r\n            clearTimeout(t);\r\n            console.log((isUserNotAllow ? \"UserNotAllow，\" : \"\") + \"无法录音:\" + msg, 1);\r\n        });\r\n    }\r\n\r\n    controlAudio(status) {\r\n        this.setState({\r\n            status\r\n        })\r\n    }\r\n\r\n    changeScheme(e) {\r\n        this.setState({\r\n            audioType: e.target.value\r\n        })\r\n    }\r\n\r\n    enterLoading = index => {\r\n        this.setState(({loadings}) => {\r\n            const newLoadings = [...loadings];\r\n            newLoadings[index] = true;\r\n\r\n            return {\r\n                loadings: newLoadings,\r\n            };\r\n        });\r\n        setTimeout(() => {\r\n            this.setState(({loadings}) => {\r\n                const newLoadings = [...loadings];\r\n                newLoadings[index] = false;\r\n\r\n                return {\r\n                    loadings: newLoadings,\r\n                    status: 'inactive',\r\n                };\r\n            });\r\n        }, 5000);\r\n    };\r\n\r\n    uploadFile = (e) => {\r\n        const formData = new FormData()\r\n        formData.append('record', e)\r\n        api.uploadAudio(formData).then(resp => {\r\n            console.log('resp', resp)\r\n        })\r\n    }\r\n\r\n    uploadFile2 = (blob, duration) => {\r\n        const formData = new FormData()\r\n        formData.append('record', blob, duration + '.mp3')\r\n        api.uploadAudio(formData).then(resp => {\r\n            console.log('resp', resp)\r\n        })\r\n    }\r\n\r\n    recStart = (call) => {\r\n        call || (call = function (msg) {\r\n            msg && console.log(msg, 1);\r\n        });\r\n        if (this.rec && Recorder.IsOpen()) {\r\n            this.rec.start();\r\n            const set = this.rec.set;\r\n            console.log(\"录制中：\" + set.type + \" \" + set.sampleRate + \"hz \" + set.bitRate + \"kbps\");\r\n        } else {\r\n            call(\"未打开录音\")\r\n        }\r\n    }\r\n\r\n    recStop() {\r\n        this.rec.stop((blob, duration) => {\r\n            this.rec.close();//释放录音资源，当然可以不释放，后面可以连续调用start；但不释放时系统或浏览器会一直提示在录音，最佳操作是录完就close掉\r\n            this.uploadFile2(blob, duration)\r\n            this.rec = null;\r\n        }, (msg) => {\r\n            console.log(\"录音失败:\" + msg, 1);\r\n            this.rec.close();//可以通过stop方法的第3个参数来自动调用close\r\n            this.rec = null;\r\n        });\r\n    }\r\n\r\n    render() {\r\n        const {status, audioSrc, audioType, loadings} = this.state;\r\n        // console.log(\"src:\", audioSrc)\r\n        // const audioProps = {\r\n        //     audioType,\r\n        //     // audioOptions: {sampleRate: 30000}, // 设置输出音频采样率\r\n        //     status,\r\n        //     audioSrc,\r\n        //     timeslice: 1000, // timeslice（https://developer.mozilla.org/en-US/docs/Web/API/MediaRecorder/start#Parameters）\r\n        //     startCallback: (e) => {\r\n        //         console.log(\"succ start\", e)\r\n        //     },\r\n        //     pauseCallback: (e) => {\r\n        //         console.log(\"succ pause\", e)\r\n        //     },\r\n        //     stopCallback: (e) => {\r\n        //         this.setState({\r\n        //             audioSrc: window.URL.createObjectURL(e)\r\n        //         })\r\n        //         console.log(\"succ stop\", this.state.audioSrc, e)\r\n        //         this.uploadFile(e)\r\n        //         console.log(\"upload file over\")\r\n        //     },\r\n        //     onRecordCallback: (e) => {\r\n        //         console.log(\"recording\", e)\r\n        //     },\r\n        //     errorCallback: (err) => {\r\n        //         console.log(\"error\", err)\r\n        //     }\r\n        // }\r\n        return (\r\n            <div>\r\n                {/*<AudioAnalyser {...audioProps}>*/}\r\n                {/*    <div className=\"btn-box\">*/}\r\n                {/*        {status !== \"recording\" && <Button type=\"primary\" onClick={() => this.controlAudio(\"start\")}>*/}\r\n                {/*            Click me!*/}\r\n                {/*        </Button>}*/}\r\n                {/*        {status !== \"recording\" &&*/}\r\n                {/*        <i className=\"iconfont icon-start\" title=\"开始\"*/}\r\n                {/*           onClick={() => this.controlAudio(\"recording\")}>?</i>}*/}\r\n                {/*        {status === \"recording\" &&*/}\r\n                {/*        <i className=\"iconfont icon-pause\" title=\"暂停\"*/}\r\n                {/*           onClick={() => this.controlAudio(\"paused\")}>!</i>}*/}\r\n                {/*        <i className=\"iconfont icon-stop\" title=\"停止\"*/}\r\n                {/*           onClick={() => this.controlAudio(\"inactive\")}>||</i>*/}\r\n                {/*    </div>*/}\r\n                {/*</AudioAnalyser>*/}\r\n                <Button type=\"primary\" loading={loadings[1]} onClick={() => {\r\n                    this.enterLoading(1);\r\n                    this.controlAudio(\"recording\")\r\n                }}>\r\n                    Old\r\n                </Button>\r\n                <Button type=\"primary\" loading={loadings[2]} onClick={() => {\r\n                    this.enterLoading(2);\r\n                    this.recStart();\r\n                }}>\r\n                    New Start\r\n                </Button>\r\n                <Button type=\"primary\" loading={loadings[3]} onClick={() => {\r\n                    this.enterLoading(3);\r\n                    this.recStop();\r\n                }}>\r\n                    New Stop\r\n                </Button>\r\n                <p>choose output type</p>\r\n                <select name=\"\" id=\"\" onChange={(e) => this.changeScheme(e)} value={audioType}>\r\n                    <option value=\"audio/webm\">audio/webm（default）</option>\r\n                    <option value=\"audio/wav\">audio/wav</option>\r\n                    <option value=\"audio/mp3\">audio/mp3</option>\r\n                </select>\r\n            </div>);\r\n    }\r\n}\r\n","import React, {lazy} from 'react'\r\nimport {Route, Switch, Redirect} from 'react-router-dom'\r\n// todo\r\nimport demo from 'containers/demo/demo'\r\n\r\nconst LoginContainer = lazy(() => import('containers/login'))\r\n\r\nexport class Routes extends React.Component<any> {\r\n    render() {\r\n        return (\r\n            <>\r\n                <Switch>\r\n                    {/*<Redirect exact={true} from=\"/\" to=\"/login\" />*/}\r\n                    <Route path=\"/\" component={demo}/>\r\n                    <Route path=\"/login\" component={LoginContainer}/>\r\n                </Switch>\r\n            </>\r\n        )\r\n    }\r\n}\r\n\r\nexport default Routes\r\n","import React, { Suspense } from 'react'\r\nimport { createBrowserHistory } from 'history'\r\nimport { Provider } from 'mobx-react'\r\nimport { RouterStore, syncHistoryWithStore } from 'mobx-react-router'\r\nimport RootStore from './stores/root'\r\nimport { Route, Router } from 'react-router-dom'\r\nimport Routes from './routes'\r\nconst browserHistory = createBrowserHistory()\r\nconst routingStore = new RouterStore()\r\nconst history = syncHistoryWithStore(browserHistory, routingStore)\r\n\r\nclass App extends React.Component {\r\n  public render() {\r\n    return (\r\n      <Suspense fallback={<div>Loading...</div>}>\r\n        <Provider {...RootStore}>\r\n          <Router history={history}>\r\n            <Route component={Routes} />\r\n          </Router>\r\n        </Provider>\r\n      </Suspense>\r\n    )\r\n  }\r\n}\r\n\r\nexport default App\r\n","import React from 'react'\nimport ReactDOM from 'react-dom'\nimport './index.scss'\nimport './normalize.css'\nimport App from './App'\n\nReactDOM.render(<App />, document.getElementById('root'))\n"],"sourceRoot":""}