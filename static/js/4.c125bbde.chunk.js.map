{"version":3,"sources":["containers/login/utils.ts","containers/login/index.tsx"],"names":["formItemLayout","labelCol","span","wrapperCol","formTailLayout","offset","create","name","props","useState","isCheck","obj","changeObj","getFieldDecorator","form","Item","utils","label","rules","required","message","placeholder","checked","onChange","e","target","validateFields","force","type","onClick","preventDefault","err","values","console","log"],"mappings":"4MAAaA,EAAiB,CAC5BC,SAAU,CAAEC,KAAM,GAClBC,WAAY,CAAED,KAAM,IAGTE,EAAiB,CAC5BH,SAAU,CAAEC,KAAM,GAClBC,WAAY,CAAED,KAAM,EAAGG,OAAQ,ICoDlB,cAAKC,OAAO,CAAEC,KAAM,gBAApB,EAvDc,SAACC,GAAgB,IAAD,EAClBC,mBAAS,CAAEF,KAAM,GAAIG,SAAS,IADZ,mBACpCC,EADoC,KAC/BC,EAD+B,KAgBnCC,EAAsBL,EAAMM,KAA5BD,kBACR,OACE,6BACE,6BACE,sBAAME,KAAN,iBAAeC,EAAf,CAAqCC,MAAM,SACxCJ,EAAkB,WAAY,CAC7BK,MAAO,CACL,CACEC,UAAU,EACVC,QAAS,4BAJdP,CAOE,uBAAOQ,YAAY,6BAExB,sBAAMN,KAAN,iBAAeC,EAAf,CAAqCC,MAAM,aACxCJ,EAAkB,WAAY,CAC7BK,MAAO,CACL,CACEC,UAAU,EACVC,QAAS,gCAJdP,CAOE,uBAAOQ,YAAY,iCAExB,sBAAMN,KAASC,EACb,uBAAUM,QAASX,EAAID,QAASa,SA9BnB,SAACC,GACpBZ,EAAU,eAAKD,EAAN,CAAWD,QAASc,EAAEC,OAAOH,WACtCd,EAAMM,KAAKY,eAAe,CAAC,YAAa,CAAEC,OAAO,MA4B3C,yBAIF,sBAAMZ,KAASC,EACb,uBAAQY,KAAK,UAAUC,QA3CV,SAACL,GACpBA,EAAEM,iBACFtB,EAAMM,KAAKY,gBAAe,SAACK,EAAUC,GAC9BD,GACHE,QAAQC,IAAI,4BAA6BF,QAuCvC","file":"static/js/4.c125bbde.chunk.js","sourcesContent":["export const formItemLayout = {\n  labelCol: { span: 4 },\n  wrapperCol: { span: 8 }\n}\n\nexport const formTailLayout = {\n  labelCol: { span: 4 },\n  wrapperCol: { span: 8, offset: 4 }\n}\n","import React, { useState } from 'react'\r\nimport { Form, Input, Button, Checkbox } from 'antd'\r\nimport * as utils from './utils'\r\n\r\nconst Login: React.FC<any> = (props: any) => {\r\n  const [obj, changeObj] = useState({ name: '', isCheck: false })\r\n\r\n  const handleSubmit = (e: any) => {\r\n    e.preventDefault()\r\n    props.form.validateFields((err: any, values: any) => {\r\n      if (!err) {\r\n        console.log('Received values of form: ', values)\r\n      }\r\n    })\r\n  }\r\n  const handleChange = (e: any) => {\r\n    changeObj({ ...obj, isCheck: e.target.checked })\r\n    props.form.validateFields(['nickname'], { force: true })\r\n  }\r\n\r\n  const { getFieldDecorator } = props.form\r\n  return (\r\n    <div>\r\n      <div>\r\n        <Form.Item {...utils.formItemLayout} label=\"Name\">\r\n          {getFieldDecorator('username', {\r\n            rules: [\r\n              {\r\n                required: true,\r\n                message: 'Please input your name'\r\n              }\r\n            ]\r\n          })(<Input placeholder=\"Please input your name\" />)}\r\n        </Form.Item>\r\n        <Form.Item {...utils.formItemLayout} label=\"Nickname\">\r\n          {getFieldDecorator('nickname', {\r\n            rules: [\r\n              {\r\n                required: true,\r\n                message: 'Please input your nickname'\r\n              }\r\n            ]\r\n          })(<Input placeholder=\"Please input your nickname\" />)}\r\n        </Form.Item>\r\n        <Form.Item {...utils.formTailLayout}>\r\n          <Checkbox checked={obj.isCheck} onChange={handleChange}>\r\n            Nickname is required\r\n          </Checkbox>\r\n        </Form.Item>\r\n        <Form.Item {...utils.formTailLayout}>\r\n          <Button type=\"primary\" onClick={handleSubmit}>\r\n            Check\r\n          </Button>\r\n        </Form.Item>\r\n      </div>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default Form.create({ name: 'normal_login' })(Login)\r\n"],"sourceRoot":""}