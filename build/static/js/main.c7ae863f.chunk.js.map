{"version":3,"sources":["api/index.ts","api/req.ts","stores/root.ts","global/storage.tsx","containers/info/index.tsx","containers/demo/index.js","containers/finish/index.jsx","components/layouts/DashboardLayout/NavBar/NavItem.js","components/layouts/DashboardLayout/NavBar/index.js","components/Logo.js","components/layouts/DashboardLayout/TopBar.js","components/layouts/DashboardLayout/index.js","components/Page.js","containers/admin/dashboard/Sales.js","containers/admin/dashboard/TasksProgress.js","containers/admin/dashboard/TotalCustomers.js","containers/admin/dashboard/TotalProfit.js","containers/admin/dashboard/TrafficByDevice.js","containers/admin/dashboard/index.js","containers/admin/users/Results.js","utils/getInitials.js","containers/admin/users/Toolbar.js","containers/admin/users/index.js","containers/admin/settings/Settings.js","containers/admin/settings/index.js","containers/admin/papers/data.js","containers/admin/papers/editor/editor.js","containers/admin/papers/result.js","containers/admin/papers/index.js","containers/admin/users/detail/const.js","containers/admin/users/detail/index.js","containers/instruction/index.js","routes/index.tsx","App.tsx","index.tsx"],"names":["request","wrapSend","requestFunc","type","a","res","data","response","success","info","status","setTimeout","sessionStorage","clear","window","location","replace","statusText","Api","down","download","url","body","post","responseType","signUp","payload","signIn","getBasicInfo","uploadAudio","adminLogin","queryPapers","addPaper","editPaper","QueryUsers","QueryAnswers","querySettings","updateSetting","this","http","getAPI","common","baseURL","headers","Token","getItem","axios","create","createRequest","storageSet","key","obj","setItem","JSON","stringify","Copyright","Typography","variant","color","align","Link","href","Date","getFullYear","useStyles","makeStyles","theme","createStyles","paper","marginTop","spacing","display","flexDirection","alignItems","avatar","margin","backgroundColor","palette","primary","light","form","width","submit","InfoPage","props","classes","useState","email","name","chinese_class","hks_level","ethnic_background","userInfo","setUserInfo","needSignUp","setNeedSignUp","onEdit","l","e","newUserInfo","currentTarget","value","Container","component","maxWidth","CssBaseline","className","Avatar","Box","Grid","container","item","xs","TextField","required","fullWidth","id","label","autoComplete","autoFocus","onChange","Button","onClick","api","then","resp","user","history","push","toast","error","user_not_exist","mt","Word","styled","Paper","fontSize","fontFamily","fontWeight","justifyContent","ValidationTextField","withStyles","root","borderColor","borderWidth","borderLeftWidth","padding","Progress","MobileStepper","flexGrow","defaultAudioConf","bitRate","sampleRate","Index","renderVisualization","style","height","uid","setState","audioConf","global_setting","wordIndex","progress_index","words","current_paper","split","RegExp","paper_info","paper_name","paper_version","version","paper_id","interval","begin","wave","Recorder","WaveView","elem","console","log","state","beginTime","moment","uploadFile","blob","duration","next","formData","FormData","append","input","recStart","rec","disableEnvInFix","onProcess","buffers","powerLevel","bufferDuration","bufferSampleRate","length","open","clearTimeout","timeoutFn","start","set","msg","isUserNotAllow","mouseDown","document","onmouseup","touchUp","recStop","translationRef","current","lastChild","firstChild","focus","touchDown","playAndStop","refs","audioControl","play","onNext","audioBlob","URL","revokeObjectURL","src","reRenderTimer","translation","concat","onClickBack","updateAudioConf","renderCountDown","isPlaying","size","strokeWidth","colors","green","A200","blue","red","onComplete","totalElapsedTime","remainingTime","React","createRef","flattenedObj","parse","storageGet","close","stop","createObjectURL","currentWord","recording","float","ref","IconButton","onMouseDown","onTouchStart","onTouchEnd","onContextMenu","preventDefault","Mic","MicNone","steps","position","activeStep","nextButton","diff","ThemeProvider","direction","KeyboardArrowLeft","KeyboardArrowRight","backButton","disabled","Component","Finish","paddingTop","paddingBottom","button","text","secondary","typography","fontWeightMedium","letterSpacing","textTransform","icon","marginRight","title","active","main","NavItem","Icon","rest","ListItem","clsx","disableGutters","activeClassName","RouterLink","to","items","BarChartIcon","UsersIcon","BookIcon","SettingsIcon","mobileDrawer","desktopDrawer","top","cursor","NavBar","onMobileClose","openMobile","useLocation","useEffect","pathname","content","p","Divider","List","map","Hidden","lgUp","Drawer","anchor","onClose","mdDown","defaultProps","Logo","alt","TopBar","onMobileNavOpen","notifications","AppBar","elevation","Badge","badgeContent","background","dark","overflow","wrapper","flex","breakpoints","up","paddingLeft","contentContainer","DashboardLayout","isMobileNavOpen","setMobileNavOpen","components","Page","forwardRef","children","Helmet","Sales","useTheme","datasets","indigo","grey","labels","options","animation","cornerRadius","layout","legend","maintainAspectRatio","responsive","scales","xAxes","barThickness","maxBarThickness","barPercentage","categoryPercentage","ticks","fontColor","gridLines","drawBorder","yAxes","beginAtZero","min","borderDash","borderDashOffset","divider","zeroLineBorderDash","zeroLineBorderDashOffset","zeroLineColor","tooltips","default","bodyFontColor","enabled","footerFontColor","intersect","mode","titleFontColor","Card","CardHeader","action","endIcon","CardContent","orange","TasksProgress","justify","gutterBottom","LinearProgress","differenceIcon","differenceValue","TotalCustomers","TotalProfit","TrafficByDevice","white","hoverBorderColor","cutoutPercentage","devices","LaptopMacIcon","TabletIcon","PhoneIcon","textAlign","minHeight","Dashboard","lg","sm","xl","md","Results","users","selectedCustomerIds","setSelectedCustomerIds","limit","setLimit","page","setPage","handleReview","minWidth","Table","TableHead","TableRow","TableCell","Checkbox","checked","indeterminate","event","newSelectedCustomerIds","target","customer","TableBody","slice","hover","selected","indexOf","selectedIndex","handleSelectOne","v","toUpperCase","join","getInitials","createdAt","format","ButtonGroup","TablePagination","count","onChangePage","newPage","onChangeRowsPerPage","rowsPerPage","rowsPerPageOptions","importButton","exportButton","Toolbar","InputProps","startAdornment","InputAdornment","SvgIcon","placeholder","Users","setUsers","defaultSettings","BitRate","SampleRate","SettingsContent","settings","setSettings","updated","setUpdated","popOpen","setPopOpen","handleClose","handleChange","subheader","InputLabel","Select","labelId","MenuItem","InputLabelProps","shrink","prevState","Dialog","aria-labelledby","aria-describedby","DialogTitle","DialogContent","DialogContentText","DialogActions","Settings","created_at","TextArea","flexWrap","chip","marginLeft","Editor","setWords","setInterval","onClickExit","marginBottom","defaultValue","parseInt","autoSize","refreshPaper","datas","editProps","setEditProps","onClickEditExit","handleEditClicked","dataIndex","index","Papers","papers","setPapers","activePaper","setActivePaper","addNew","setAddNew","getPapers","active_paper","columns","render","controls","Detail","req","pop","answers","setAnswers","dataSource","InstructionPage","recordable","setRecordable","AdminLogin","lazy","Routes","exact","from","path","DemoPage","FinishPage","browserHistory","createBrowserHistory","routingStore","RouterStore","syncHistoryWithStore","App","fallback","autoClose","hideProgressBar","newestOnTop","closeOnClick","rtl","pauseOnFocusLoss","draggable","pauseOnHover","RootStore","ReactDOM","getElementById"],"mappings":"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","file":"static/js/main.c7ae863f.chunk.js","sourcesContent":["// 放所有 http 请求\r\nimport { AxiosInstance } from 'axios'\r\nimport { createRequest, ReqType, Response, wrapSend } from './req'\r\n\r\nexport class Api {\r\n  request: AxiosInstance // 普通请求\r\n  down: AxiosInstance // 下载请求\r\n\r\n  constructor(request: ReqType) {\r\n    this.request = request.http\r\n    this.down = request.down\r\n  }\r\n\r\n  private download = async <T = any>(url = '', body: any = {}) => {\r\n    return await wrapSend<T>(() => {\r\n      return this.request.post<Response>(url, body, { responseType: 'blob' })\r\n    }, 'down')\r\n  }\r\n\r\n  private post = async <T = any>(url = '', body?: any) => {\r\n    return await wrapSend<T>(() => {\r\n      return this.request.post<Response>(url, body)\r\n    })\r\n  }\r\n\r\n  // 用户注册\r\n  signUp = (payload: any) => {\r\n    return this.post(`/api/v1/sign_up`, payload)\r\n  }\r\n\r\n  // 用户登录\r\n  signIn = (payload: any) => {\r\n    return this.post(`/api/v1/sign_in`, payload)\r\n  }\r\n\r\n  // 获取做题基本信息\r\n  getBasicInfo = (payload: any) => {\r\n    return this.post(`/api/v1/get_basic_info`, payload)\r\n  }\r\n\r\n  // 上传音频文件\r\n  uploadAudio = (payload: any) => {\r\n    return this.post(`/api/v1/upload`, payload)\r\n  }\r\n\r\n  // =====  admin  =====\r\n  adminLogin = (payload: any) => {\r\n    return this.post(`/api/v1/admin/login`, payload)\r\n  }\r\n\r\n  queryPapers = () => {\r\n    return this.post(`/api/v1/admin/query_papers`)\r\n  }\r\n\r\n  addPaper = (payload: any) => {\r\n    return this.post(`/api/v1/admin/add_paper`, payload)\r\n  }\r\n\r\n  editPaper = (payload: any) => {\r\n    return this.post(`/api/v1/admin/edit_paper`, payload)\r\n  }\r\n\r\n  QueryUsers = () => {\r\n    return this.post(`/api/v1/admin/query_users`)\r\n  }\r\n\r\n  QueryAnswers = (payload: any) => {\r\n    return this.post(`/api/v1/admin/query_answers`, payload)\r\n  }\r\n\r\n  querySettings = () => {\r\n    return this.post(`/api/v1/admin/query_settings`)\r\n  }\r\n\r\n  updateSetting = (payload: any) => {\r\n    return this.post(`/api/v1/admin/update_setting`, payload)\r\n  }\r\n}\r\n\r\nconst getAPI = (request: ReqType) => new Api(request)\r\n\r\nexport default getAPI(createRequest())\r\n","import axios, { AxiosInstance, AxiosPromise } from 'axios'\r\n\r\nexport interface ReqType {\r\n  http: AxiosInstance\r\n  down: AxiosInstance\r\n}\r\n\r\nexport interface Response {\r\n  success: boolean\r\n  info?: string\r\n  data: any\r\n}\r\n\r\nexport interface Res<T> {\r\n  success: boolean\r\n  info?: string\r\n  data?: T\r\n}\r\n\r\ntype requestFun = () => AxiosPromise<Response>\r\n\r\nexport const createRequest = (): ReqType => {\r\n  const common = {\r\n    baseURL: '',\r\n    headers: {\r\n      'Content-Type': 'application/json',\r\n      Token: sessionStorage.getItem('token')\r\n    }\r\n  }\r\n  const instance = axios.create(common)\r\n  return {\r\n    http: instance,\r\n    down: axios.create({ ...common, responseType: 'blob' })\r\n  }\r\n}\r\n\r\nexport const wrapSend = async <T>(requestFunc: requestFun, type?: string): Promise<Res<T>> => {\r\n  let response\r\n  try {\r\n    const res = await requestFunc()\r\n    const { data } = res\r\n    response = {\r\n      success: type ? true : data.success,\r\n      info: data.info,\r\n      data: type ? data : data.data\r\n    }\r\n  } catch (err) {\r\n    const { data } = err.response\r\n    if (err.response.status === 403) {\r\n      setTimeout(() => {\r\n        sessionStorage.clear()\r\n        window.location.replace('/admin/login')\r\n      }, 2000)\r\n      return {\r\n        info: 'Your login information is invalid, please login again!',\r\n        success: false\r\n      }\r\n    }\r\n    if (err.response.status === 400) {\r\n      return {\r\n        success: data.success,\r\n        info: data.info,\r\n        data: data\r\n      }\r\n    }\r\n    response = {\r\n      success: data.success,\r\n      info: err.response.status + ' ' + err.response.statusText,\r\n      data: data\r\n    }\r\n  }\r\n  return response\r\n}\r\n","class Root {}\r\n\r\nexport default new Root()\r\n","export const KeyUserInfo = 'user_info'\r\nexport const KeyAdminToken = 'token'\r\n\r\nexport const storageSet = (key: string, obj: object) => {\r\n  sessionStorage.setItem(key, JSON.stringify(obj))\r\n}\r\n\r\nexport const storageGet = (key: string): object | null => {\r\n  const flattenedObj = sessionStorage.getItem(key)\r\n  if (!flattenedObj) {\r\n    return null\r\n  }\r\n  return JSON.parse(flattenedObj)\r\n}\r\n","import React, { ChangeEvent, useState } from 'react'\r\nimport Avatar from '@material-ui/core/Avatar'\r\nimport Button from '@material-ui/core/Button'\r\nimport CssBaseline from '@material-ui/core/CssBaseline'\r\nimport TextField from '@material-ui/core/TextField'\r\nimport Link from '@material-ui/core/Link'\r\nimport Grid from '@material-ui/core/Grid'\r\nimport Box from '@material-ui/core/Box'\r\nimport HeadsetMicOutlinedIcon from '@material-ui/icons/HeadsetMicOutlined'\r\nimport Typography from '@material-ui/core/Typography'\r\nimport { createStyles, makeStyles, Theme } from '@material-ui/core/styles'\r\nimport Container from '@material-ui/core/Container'\r\nimport api from 'api'\r\nimport { toast } from 'react-toastify'\r\nimport { KeyUserInfo, storageSet } from 'global/storage'\r\n\r\n// 本页面逻辑, 先登录(只用填email), 如果账户不存在则展示注册逻辑\r\n\r\nfunction Copyright() {\r\n  return (\r\n    <Typography variant=\"body2\" color=\"textSecondary\" align=\"center\">\r\n      {'Copyright © '}\r\n      <Link color=\"inherit\" href=\"https://material-ui.com/\">\r\n        Your Website\r\n      </Link>{' '}\r\n      {new Date().getFullYear()}\r\n      {'.'}\r\n    </Typography>\r\n  )\r\n}\r\n\r\nconst useStyles = makeStyles((theme: Theme) =>\r\n  createStyles({\r\n    paper: {\r\n      marginTop: theme.spacing(8),\r\n      display: 'flex',\r\n      flexDirection: 'column',\r\n      alignItems: 'center'\r\n    },\r\n    avatar: {\r\n      margin: theme.spacing(1),\r\n      backgroundColor: theme.palette.primary.light\r\n    },\r\n    form: {\r\n      width: '100%', // Fix IE 11 issue.\r\n      marginTop: theme.spacing(3)\r\n    },\r\n    submit: {\r\n      margin: theme.spacing(3, 0, 2)\r\n    }\r\n  })\r\n)\r\n\r\ninterface UserInfo {\r\n  email: string // 先简单粗暴, 直接用email当做唯一识别字段\r\n  name: string\r\n  chinese_class: string\r\n  hks_level: string\r\n  ethnic_background: string\r\n}\r\n\r\ntype label = 'email' | 'name' | 'chinese_class' | 'hks_level' | 'ethnic_background'\r\n\r\nexport default function InfoPage(props: any) {\r\n  const classes = useStyles()\r\n  const [userInfo, setUserInfo] = useState({\r\n    email: '',\r\n    name: '',\r\n    chinese_class: '',\r\n    hks_level: '',\r\n    ethnic_background: ''\r\n  })\r\n  const [needSignUp, setNeedSignUp] = useState(false)\r\n\r\n  const onEdit = (l: label) => (e: ChangeEvent<HTMLInputElement>) => {\r\n    const newUserInfo: UserInfo = userInfo\r\n    newUserInfo[l] = e.currentTarget.value\r\n    setUserInfo(newUserInfo)\r\n  }\r\n\r\n  const signUp = () => {\r\n    api.signUp(userInfo).then(resp => {\r\n      if (!resp.success) {\r\n        toast.error('🚀' + resp.info)\r\n      } else {\r\n        storageSet(KeyUserInfo, resp.data.user) // 这里后端直接回传完整用户信息\r\n        props.history.push('/instruction')\r\n      }\r\n    })\r\n  }\r\n\r\n  const signIn = () => {\r\n    api.signIn({ email: userInfo.email }).then(resp => {\r\n      if (!resp.success) {\r\n        // 根据返回值判断, 如果是用户不存在, 则转为注册页面\r\n        toast.error('🚀' + resp.info)\r\n      } else {\r\n        if (resp.data.user_not_exist) {\r\n          setNeedSignUp(true)\r\n        } else {\r\n          toast.info('🦄 welcome ' + resp.data.user.name)\r\n          storageSet(KeyUserInfo, resp.data.user) // 这里后端直接回传完整用户信息\r\n          props.history.push('/instruction')\r\n        }\r\n      }\r\n    })\r\n  }\r\n\r\n  return (\r\n    <Container component=\"main\" maxWidth=\"xs\">\r\n      <CssBaseline />\r\n      <div className={classes.paper}>\r\n        <Avatar className={classes.avatar}>\r\n          <HeadsetMicOutlinedIcon />\r\n        </Avatar>\r\n        <Typography component=\"h1\" variant=\"h5\">\r\n          Chinese Character Reading Test\r\n        </Typography>\r\n        {/*<Typography component=\"h3\" variant=\"subtitle1\" style={{ color: 'grey' }}>*/}\r\n        {/*  Instructions: xxxx*/}\r\n        {/*</Typography>*/}\r\n        <Box className={classes.form}>\r\n          <Grid container spacing={2}>\r\n            <Grid item xs={12}>\r\n              <TextField\r\n                variant=\"outlined\"\r\n                required\r\n                fullWidth\r\n                id=\"email\"\r\n                label=\"Email Address\"\r\n                name=\"email\"\r\n                autoComplete=\"email\"\r\n                autoFocus\r\n                onChange={onEdit('email')}\r\n              >\r\n                {userInfo.email}\r\n              </TextField>\r\n            </Grid>\r\n            {needSignUp && (\r\n              <>\r\n                <Grid item xs={12}>\r\n                  <TextField\r\n                    name=\"name\"\r\n                    variant=\"outlined\"\r\n                    required\r\n                    fullWidth\r\n                    id=\"name\"\r\n                    label=\"Name\"\r\n                    autoComplete=\"name\"\r\n                    onChange={onEdit('name')}\r\n                  >\r\n                    {userInfo.name}\r\n                  </TextField>\r\n                </Grid>\r\n                <Grid item xs={12}>\r\n                  <TextField\r\n                    variant=\"outlined\"\r\n                    required\r\n                    fullWidth\r\n                    id=\"chineseClass\"\r\n                    label=\"Chinese Class\"\r\n                    name=\"chineseClass\"\r\n                    onChange={onEdit('chinese_class')}\r\n                  >\r\n                    {userInfo.chinese_class}\r\n                  </TextField>\r\n                </Grid>\r\n                <Grid item xs={12}>\r\n                  <TextField\r\n                    variant=\"outlined\"\r\n                    required\r\n                    fullWidth\r\n                    id=\"hksLevel\"\r\n                    label=\"HSK Level\"\r\n                    name=\"hksLevel\"\r\n                    onChange={onEdit('hks_level')}\r\n                  >\r\n                    {userInfo.hks_level}\r\n                  </TextField>\r\n                </Grid>\r\n                <Grid item xs={12}>\r\n                  <TextField\r\n                    variant=\"outlined\"\r\n                    required\r\n                    fullWidth\r\n                    id=\"ethnicBackground\"\r\n                    label=\" Ethnic Background (Kinh/Hoa/...)\"\r\n                    name=\"ethnicBackground\"\r\n                    onChange={onEdit('ethnic_background')}\r\n                  >\r\n                    {userInfo.ethnic_background}\r\n                  </TextField>\r\n                </Grid>\r\n              </>\r\n            )}\r\n          </Grid>\r\n          <Button\r\n            type=\"submit\"\r\n            fullWidth\r\n            variant=\"contained\"\r\n            color=\"primary\"\r\n            className={classes.submit}\r\n            onClick={needSignUp ? signUp : signIn}\r\n          >\r\n            {needSignUp ? 'sign up' : 'sign in'}\r\n          </Button>\r\n          {/*<Grid container justify=\"flex-end\">*/}\r\n          {/*  <Grid item>*/}\r\n          {/*    <Link*/}\r\n          {/*      href=\"/instruction\"*/}\r\n          {/*      variant=\"body2\"*/}\r\n          {/*      onClick={() => {*/}\r\n          {/*        storageSet(KeyUserInfo, userInfo)*/}\r\n          {/*      }}*/}\r\n          {/*    >*/}\r\n          {/*      临时转到instruction页面*/}\r\n          {/*    </Link>*/}\r\n          {/*  </Grid>*/}\r\n          {/*</Grid>*/}\r\n        </Box>\r\n      </div>\r\n      <Box mt={5}>\r\n        <Copyright />\r\n      </Box>\r\n    </Container>\r\n  )\r\n}\r\n","import React, { Component } from 'react'\r\nimport './index.css'\r\nimport api from '../../api'\r\nimport Recorder from 'recorder-core'\r\nimport 'recorder-core/src/engine/mp3'\r\nimport 'recorder-core/src/engine/mp3-engine'\r\nimport 'recorder-core/src/extensions/waveview'\r\nimport { styled, ThemeProvider, withStyles } from '@material-ui/core/styles'\r\nimport { blue, green, red } from '@material-ui/core/colors'\r\nimport { CountdownCircleTimer } from 'react-countdown-circle-timer'\r\nimport { Button, Container, Grid, Paper, MobileStepper, TextField, IconButton } from '@material-ui/core'\r\nimport { KeyboardArrowLeft, KeyboardArrowRight, Mic, MicNone } from '@material-ui/icons'\r\nimport { KeyUserInfo, storageGet } from '../../global/storage'\r\nimport { toast } from 'react-toastify'\r\nimport moment from 'moment'\r\n\r\nconst Word = styled(Paper)({\r\n  fontSize: 'xxx-large',\r\n  fontFamily: 'cursive',\r\n  fontWeight: 'bold',\r\n  display: 'flex',\r\n  alignItems: 'center',\r\n  justifyContent: 'center'\r\n})\r\n\r\nconst ValidationTextField = withStyles({\r\n  root: {\r\n    marginTop: 15,\r\n    '& input:valid + fieldset': {\r\n      borderColor: 'green',\r\n      borderWidth: 2\r\n    },\r\n    '& input:invalid + fieldset': {\r\n      borderColor: 'lightBlue',\r\n      borderWidth: 2\r\n    },\r\n    '& input:valid:focus + fieldset': {\r\n      borderLeftWidth: 6,\r\n      padding: '4px !important' // override inline-style\r\n    }\r\n  }\r\n})(TextField)\r\n\r\nconst Progress = styled(MobileStepper)({\r\n  root: {\r\n    maxWidth: 400,\r\n    flexGrow: 1\r\n  }\r\n})\r\n\r\nconst defaultAudioConf = {\r\n  bitRate: 128, // kbps\r\n  sampleRate: 16000 // hz\r\n}\r\n\r\nexport default class Index extends Component {\r\n  constructor(props) {\r\n    super(props)\r\n    this.state = {\r\n      rec: null,\r\n      begin: false,\r\n      status: 'init',\r\n      audioBlob: null,\r\n      src: '',\r\n      input: '',\r\n      audioConf: defaultAudioConf,\r\n      wordIndex: 0,\r\n      words: [' '],\r\n      translation: [], // translation:[\"翻译\"]\r\n      reRenderTimer: false,\r\n      paper_info: {\r\n        paper_name: '',\r\n        paper_version: '',\r\n        paper_id: 0,\r\n        interval: 10 // 秒\r\n      }\r\n    }\r\n    this.translationRef = React.createRef()\r\n    this.rec = Recorder({\r\n      type: 'mp3',\r\n      bitRate: defaultAudioConf.bitRate,\r\n      sampleRate: defaultAudioConf.sampleRate,\r\n      disableEnvInFix: false,\r\n      onProcess: (buffers, powerLevel, bufferDuration, bufferSampleRate) => {\r\n        this.wave.input(buffers[buffers.length - 1], powerLevel, bufferSampleRate) //输入音频数据，更新显示波形\r\n      }\r\n    })\r\n    this.userInfo = storageGet(KeyUserInfo)\r\n  }\r\n\r\n  renderVisualization = () => {\r\n    return <div style={{ height: '50px' }} className=\"wave-box\" />\r\n  }\r\n\r\n  getBasicInfo = () => {\r\n    api.getBasicInfo({ uid: this.userInfo.id }).then(res => {\r\n      if (!res.success) {\r\n        toast.error(res.info)\r\n      } else {\r\n        this.setState(\r\n          {\r\n            audioConf: {\r\n              bitRate: res.data.global_setting['BitRate'], // kbps\r\n              sampleRate: res.data.global_setting['SampleRate'] // hz\r\n            },\r\n            wordIndex: res.data.progress_index + 1,\r\n            // eslint-disable-next-line no-control-regex\r\n            words: res.data.current_paper.words.split(RegExp('[ \\t\\n]+')),\r\n            paper_info: {\r\n              paper_name: res.data.current_paper.name,\r\n              paper_version: res.data.current_paper.version,\r\n              paper_id: res.data.current_paper.id,\r\n              interval: res.data.current_paper.interval\r\n            },\r\n            begin: true\r\n          },\r\n          () => {\r\n            this.wave = Recorder.WaveView({ elem: '.wave-box' })\r\n            console.log('progress?????', res.data.progress_index + 1, this.state.wordIndex)\r\n          }\r\n        )\r\n        this.beginTime = moment() // 用于计算每道题耗时\r\n      }\r\n    })\r\n  }\r\n\r\n  componentDidMount() {\r\n    if (this.userInfo == null) {\r\n      this.props.history.push('/info')\r\n      return\r\n    }\r\n    this.getBasicInfo()\r\n    this.rec.open(\r\n      () => {\r\n        this.wave = Recorder.WaveView({ elem: '.wave-box' }) // 创建wave对象\r\n        this.rec.close()\r\n      },\r\n      (msg, isUserNotAllow) => {\r\n        isUserNotAllow //用户拒绝未授权或不支持\r\n          ? toast.error('please allow the mic permission, refresh or restart the browser')\r\n          : toast.error('your device or web browser do not support audio recording, msg:' + msg)\r\n      }\r\n    )\r\n  }\r\n\r\n  uploadFile = (blob, duration, next) => {\r\n    const formData = new FormData()\r\n    if (blob) {\r\n      formData.append('record', blob, duration + '.mp3') // fileName 不重要,服务端自己设置文件名\r\n    }\r\n    formData.append('file_ext', 'mp3')\r\n    formData.append('paper_name', this.state.paper_info.paper_name)\r\n    formData.append('paper_version', this.state.paper_info.paper_version)\r\n    formData.append('paper_id', this.state.paper_info.paper_id + '')\r\n    formData.append('uid', this.userInfo.id)\r\n    formData.append('word_index', this.state.wordIndex)\r\n    formData.append('word', this.state.words[this.state.wordIndex])\r\n    formData.append('translation', this.state.input)\r\n    formData.append('duration', duration)\r\n    api.uploadAudio(formData).then(resp => {\r\n      if (!resp.success) {\r\n        toast.error(resp.info + ' -- if you cant go to next word, try refresh the page')\r\n      } else {\r\n        next()\r\n      }\r\n    })\r\n  }\r\n\r\n  recStart = () => {\r\n    this.rec = Recorder({\r\n      type: 'mp3',\r\n      bitRate: this.state.audioConf.bitRate,\r\n      sampleRate: this.state.audioConf.sampleRate,\r\n      disableEnvInFix: false,\r\n      onProcess: (buffers, powerLevel, bufferDuration, bufferSampleRate) => {\r\n        this.wave.input(buffers[buffers.length - 1], powerLevel, bufferSampleRate) //输入音频数据，更新显示波形\r\n      }\r\n    })\r\n    this.rec.open(\r\n      () => {\r\n        clearTimeout(this.timeoutFn)\r\n        this.rec.start()\r\n        const set = this.rec.set\r\n        console.log('录制中：' + set.type + ' ' + set.sampleRate + 'hz ' + set.bitRate + 'kbps')\r\n      },\r\n      (msg, isUserNotAllow) => {\r\n        clearTimeout(this.timeoutFn)\r\n        console.log((isUserNotAllow ? 'UserNotAllow，' : '') + '无法录音:' + msg, 1)\r\n      }\r\n    )\r\n  }\r\n\r\n  mouseDown = () => {\r\n    this.setState({ status: 'recording' })\r\n    this.recStart()\r\n    document.onmouseup = this.touchUp\r\n  }\r\n\r\n  touchUp = () => {\r\n    this.setState({ status: 'stopped' }, () => {\r\n      document.onmouseup = null\r\n    })\r\n    this.recStop()\r\n    this.translationRef.current.lastChild.firstChild.focus()\r\n  }\r\n\r\n  touchDown = () => {\r\n    this.setState({ status: 'recording' })\r\n    this.recStart()\r\n  }\r\n\r\n  recStop() {\r\n    this.rec.stop(\r\n      (blob, duration) => {\r\n        this.rec.close() // 释放录音资源，当然可以不释放，后面可以连续调用start；但不释放时手机端播放音频有杂音\r\n        console.log('audio duration: ', duration)\r\n        this.setState({ audioBlob: blob, src: window.URL.createObjectURL(blob) })\r\n      },\r\n      msg => {\r\n        console.log('录音失败:' + msg, 1)\r\n        this.rec.close() //可以通过stop方法的第3个参数来自动调用close\r\n      }\r\n    )\r\n  }\r\n\r\n  playAndStop = () => {\r\n    this.refs.audioControl.play()\r\n  }\r\n\r\n  onNext = duration => () => {\r\n    this.uploadFile(this.state.audioBlob, duration, () => {\r\n      window.URL.revokeObjectURL(this.state.src) // 清除 dataUrl\r\n      if (this.state.wordIndex >= this.state.words.length - 1) {\r\n        this.props.history.push('/finish')\r\n        return\r\n      }\r\n      this.setState(\r\n        {\r\n          wordIndex: this.state.wordIndex + 1,\r\n          reRenderTimer: true,\r\n          translation: this.state.translation.concat(this.state.input),\r\n          blob: null,\r\n          src: '',\r\n          input: ''\r\n        },\r\n        () => {\r\n          this.beginTime = moment() // 用于计算每道题耗时\r\n          this.setState({ reRenderTimer: false })\r\n        }\r\n      )\r\n    })\r\n  }\r\n\r\n  onClickBack = () => {\r\n    // if (this.state.wordIndex <= 0) {\r\n    //   return\r\n    // }\r\n    // this.setState({ wordIndex: this.state.wordIndex - 1, reRenderTimer: true }, () => {\r\n    //   this.setState({ reRenderTimer: false })\r\n    // })\r\n  }\r\n\r\n  updateAudioConf = (sampleRate, bitRate) => {\r\n    this.setState({ audioConf: { sampleRate: sampleRate, bitRate: bitRate } })\r\n  }\r\n\r\n  renderCountDown = wordIndex => {\r\n    // return <></>\r\n    return (\r\n      <CountdownCircleTimer\r\n        isPlaying={true}\r\n        duration={this.state.paper_info.interval}\r\n        size={60}\r\n        strokeWidth={8}\r\n        colors={[\r\n          [green.A200, 0.33],\r\n          [blue['300'], 0.33],\r\n          [red['500'], 0.34]\r\n        ]}\r\n        onComplete={totalElapsedTime => {\r\n          console.log(totalElapsedTime, wordIndex, 'on complete')\r\n          this.onNext(this.state.paper_info.interval * 1000)()\r\n        }}\r\n      >\r\n        {({ remainingTime }) => {\r\n          return <div style={{ fontSize: 'xx-large' }}>{remainingTime}</div>\r\n        }}\r\n      </CountdownCircleTimer>\r\n    )\r\n  }\r\n\r\n  render() {\r\n    const { begin, status, src, words, wordIndex, reRenderTimer } = this.state\r\n    const currentWord = words[wordIndex]\r\n    const recording = status === 'recording'\r\n    if (!begin) {\r\n      return this.renderVisualization()\r\n    }\r\n    return (\r\n      <Container maxWidth=\"sm\" className=\"demo-page\">\r\n        <Grid container spacing={2} alignItems={'center'}>\r\n          <Grid item xs={12} style={{ display: 'flex', justifyContent: 'center' }}>\r\n            {!reRenderTimer && this.renderCountDown(wordIndex)}\r\n          </Grid>\r\n          <Grid item xs={12}>\r\n            <div>\r\n              <Word>{currentWord}</Word>\r\n            </div>\r\n          </Grid>\r\n          {/*<Grid item xs={2}>*/}\r\n          {/*  <Fab*/}\r\n          {/*    className=\"nocopy\"*/}\r\n          {/*    variant=\"extended\"*/}\r\n          {/*    onMouseDown={this.mouseDown}*/}\r\n          {/*    onTouchStart={this.touchDown}*/}\r\n          {/*    onTouchEnd={this.touchUp}*/}\r\n          {/*    onContextMenu={e => {*/}\r\n          {/*      e.preventDefault()*/}\r\n          {/*    }}*/}\r\n          {/*    size=\"medium\"*/}\r\n          {/*    color={recording ? 'default' : 'primary'}*/}\r\n          {/*  >*/}\r\n          {/*    {recording ? 'Hold' : 'Hold'}*/}\r\n          {/*  </Fab>*/}\r\n          {/*</Grid>*/}\r\n          <Grid item xs={10}>\r\n            {this.renderVisualization()}\r\n          </Grid>\r\n          <Grid item xs={2}>\r\n            <Button color=\"secondary\" variant=\"contained\" onClick={this.playAndStop} style={{ float: 'right' }}>\r\n              Play\r\n            </Button>\r\n          </Grid>\r\n          <audio ref=\"audioControl\" src={src} />\r\n          <Grid item xs={12} style={{ display: 'flex', justifyContent: 'center' }}>\r\n            <IconButton\r\n              className=\"nocopy\"\r\n              variant=\"extended\"\r\n              onMouseDown={this.mouseDown}\r\n              onTouchStart={this.touchDown}\r\n              onTouchEnd={this.touchUp}\r\n              onContextMenu={e => {\r\n                e.preventDefault()\r\n              }}\r\n              size=\"medium\"\r\n              color={recording ? 'default' : 'primary'}\r\n            >\r\n              {recording ? <Mic /> : <MicNone />}\r\n            </IconButton>\r\n          </Grid>\r\n\r\n          <Grid item xs={12}>\r\n            <ValidationTextField\r\n              ref={this.translationRef}\r\n              label=\"Input translation here\"\r\n              fullWidth\r\n              required\r\n              autoComplete=\"off\"\r\n              variant=\"outlined\"\r\n              id=\"validation-outlined-input\"\r\n              value={this.state.input}\r\n              onChange={e => {\r\n                this.setState({ input: e.currentTarget.value })\r\n              }}\r\n            />\r\n          </Grid>\r\n          <Grid item xs={12}>\r\n            <Progress\r\n              variant=\"progress\"\r\n              steps={words.length}\r\n              position=\"static\"\r\n              activeStep={wordIndex}\r\n              nextButton={\r\n                <Button size=\"small\" onClick={this.onNext(moment().diff(this.beginTime, 'milliseconds'))}>\r\n                  {wordIndex < words.length - 1 ? 'Next' : 'Finish'}\r\n                  {ThemeProvider.direction === 'rtl' ? <KeyboardArrowLeft /> : <KeyboardArrowRight />}\r\n                </Button>\r\n              }\r\n              backButton={\r\n                <Button size=\"small\" onClick={this.onClickBack} disabled={wordIndex === 0}>\r\n                  {ThemeProvider.direction === 'rtl' ? <KeyboardArrowRight /> : <KeyboardArrowLeft />}\r\n                  Back\r\n                </Button>\r\n              }\r\n            />\r\n          </Grid>\r\n        </Grid>\r\n      </Container>\r\n    )\r\n  }\r\n}\r\n","import React from 'react'\r\nimport { Container, Typography } from '@material-ui/core'\r\n\r\nconst Finish = () => {\r\n  return (\r\n    <Container>\r\n      <Typography component=\"h1\" variant=\"h1\">\r\n        The End, Thank you !\r\n      </Typography>\r\n    </Container>\r\n  )\r\n}\r\n\r\nexport default Finish\r\n","import React from 'react'\r\nimport { NavLink as RouterLink } from 'react-router-dom'\r\nimport clsx from 'clsx'\r\nimport PropTypes from 'prop-types'\r\nimport { Button, ListItem, makeStyles } from '@material-ui/core'\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n  item: {\r\n    display: 'flex',\r\n    paddingTop: 0,\r\n    paddingBottom: 0\r\n  },\r\n  button: {\r\n    color: theme.palette.text.secondary,\r\n    fontWeight: theme.typography.fontWeightMedium,\r\n    justifyContent: 'flex-start',\r\n    letterSpacing: 0,\r\n    padding: '10px 8px',\r\n    textTransform: 'none',\r\n    width: '100%'\r\n  },\r\n  icon: {\r\n    marginRight: theme.spacing(1)\r\n  },\r\n  title: {\r\n    marginRight: 'auto'\r\n  },\r\n  active: {\r\n    color: theme.palette.primary.main,\r\n    '& $title': {\r\n      fontWeight: theme.typography.fontWeightMedium\r\n    },\r\n    '& $icon': {\r\n      color: theme.palette.primary.main\r\n    }\r\n  }\r\n}))\r\n\r\nconst NavItem = ({ className, href, icon: Icon, title, ...rest }) => {\r\n  const classes = useStyles()\r\n\r\n  return (\r\n    <ListItem className={clsx(classes.item, className)} disableGutters {...rest}>\r\n      <Button activeClassName={classes.active} className={classes.button} component={RouterLink} to={href}>\r\n        {Icon && <Icon className={classes.icon} size=\"20\" />}\r\n        <span className={classes.title}>{title}</span>\r\n      </Button>\r\n    </ListItem>\r\n  )\r\n}\r\n\r\nNavItem.propTypes = {\r\n  className: PropTypes.string,\r\n  href: PropTypes.string,\r\n  icon: PropTypes.elementType,\r\n  title: PropTypes.string\r\n}\r\n\r\nexport default NavItem\r\n","import React, { useEffect } from 'react'\r\nimport { Link as RouterLink } from 'react-router-dom'\r\nimport PropTypes from 'prop-types'\r\nimport { Avatar, Box, Divider, Drawer, Hidden, List, Typography, makeStyles } from '@material-ui/core'\r\nimport {\r\n  BarChart as BarChartIcon,\r\n  Settings as SettingsIcon,\r\n  Users as UsersIcon,\r\n  BookOpen as BookIcon\r\n} from 'react-feather'\r\nimport NavItem from './NavItem'\r\nimport { useLocation } from 'react-router'\r\n\r\nconst user = {\r\n  avatar: '/static/images/avatars/avatar_6.png',\r\n  jobTitle: \"yep, that's me\",\r\n  name: 'The Admin'\r\n}\r\n\r\nconst items = [\r\n  {\r\n    href: '/admin/dashboard',\r\n    icon: BarChartIcon,\r\n    title: 'Dashboard'\r\n  },\r\n  {\r\n    href: '/admin/users',\r\n    icon: UsersIcon,\r\n    title: 'Users'\r\n  },\r\n  {\r\n    href: '/admin/papers',\r\n    icon: BookIcon,\r\n    title: 'Papers'\r\n  },\r\n  {\r\n    href: '/admin/settings',\r\n    icon: SettingsIcon,\r\n    title: 'Settings'\r\n  }\r\n]\r\n\r\nconst useStyles = makeStyles(() => ({\r\n  mobileDrawer: {\r\n    width: 256\r\n  },\r\n  desktopDrawer: {\r\n    width: 256,\r\n    top: 64,\r\n    height: 'calc(100% - 64px)'\r\n  },\r\n  avatar: {\r\n    cursor: 'pointer',\r\n    width: 64,\r\n    height: 64\r\n  }\r\n}))\r\n\r\nconst NavBar = ({ onMobileClose, openMobile }) => {\r\n  const classes = useStyles()\r\n  const location = useLocation()\r\n\r\n  useEffect(() => {\r\n    if (openMobile && onMobileClose) {\r\n      onMobileClose()\r\n    }\r\n    // eslint-disable-next-line react-hooks/exhaustive-deps\r\n  }, [location.pathname])\r\n\r\n  const content = (\r\n    <Box height=\"100%\" display=\"flex\" flexDirection=\"column\">\r\n      <Box alignItems=\"center\" display=\"flex\" flexDirection=\"column\" p={2}>\r\n        <Avatar className={classes.avatar} component={RouterLink} src={user.avatar} to=\"/admin/dashboard\" />\r\n        <Typography className={classes.name} color=\"textPrimary\" variant=\"h5\">\r\n          {user.name}\r\n        </Typography>\r\n        <Typography color=\"textSecondary\" variant=\"body2\">\r\n          {user.jobTitle}\r\n        </Typography>\r\n      </Box>\r\n      <Divider />\r\n      <Box p={2}>\r\n        <List>\r\n          {items.map(item => (\r\n            <NavItem href={item.href} key={item.title} title={item.title} icon={item.icon} />\r\n          ))}\r\n        </List>\r\n      </Box>\r\n      <Box flexGrow={1} />\r\n    </Box>\r\n  )\r\n\r\n  return (\r\n    <>\r\n      <Hidden lgUp>\r\n        <Drawer\r\n          anchor=\"left\"\r\n          classes={{ paper: classes.mobileDrawer }}\r\n          onClose={onMobileClose}\r\n          open={openMobile}\r\n          variant=\"temporary\"\r\n        >\r\n          {content}\r\n        </Drawer>\r\n      </Hidden>\r\n      <Hidden mdDown>\r\n        <Drawer anchor=\"left\" classes={{ paper: classes.desktopDrawer }} open variant=\"persistent\">\r\n          {content}\r\n        </Drawer>\r\n      </Hidden>\r\n    </>\r\n  )\r\n}\r\n\r\nNavBar.propTypes = {\r\n  onMobileClose: PropTypes.func,\r\n  openMobile: PropTypes.bool\r\n}\r\n\r\nNavBar.defaultProps = {\r\n  onMobileClose: () => {},\r\n  openMobile: false\r\n}\r\n\r\nexport default NavBar\r\n","import React from 'react'\r\n\r\nconst Logo = props => {\r\n  return <img alt=\"Logo\" src=\"/static/logo.svg\" {...props} />\r\n}\r\n\r\nexport default Logo\r\n","import React, { useState } from 'react'\r\nimport { Link as RouterLink } from 'react-router-dom'\r\nimport clsx from 'clsx'\r\nimport PropTypes from 'prop-types'\r\nimport { AppBar, Badge, Box, Hidden, IconButton, Toolbar, makeStyles } from '@material-ui/core'\r\nimport MenuIcon from '@material-ui/icons/Menu'\r\nimport NotificationsIcon from '@material-ui/icons/NotificationsOutlined'\r\nimport InputIcon from '@material-ui/icons/Input'\r\nimport Logo from 'components/Logo'\r\n\r\nconst useStyles = makeStyles(() => ({\r\n  root: {},\r\n  avatar: {\r\n    width: 60,\r\n    height: 60\r\n  }\r\n}))\r\n\r\nconst TopBar = ({ className, onMobileNavOpen, ...rest }) => {\r\n  const classes = useStyles()\r\n  const [notifications] = useState([])\r\n\r\n  return (\r\n    <AppBar className={clsx(classes.root, className)} elevation={0} {...rest}>\r\n      <Toolbar>\r\n        <RouterLink to=\"/\">\r\n          <Logo />\r\n        </RouterLink>\r\n        <Box flexGrow={1} />\r\n        <Hidden mdDown>\r\n          <IconButton color=\"inherit\">\r\n            <Badge badgeContent={notifications.length} color=\"primary\" variant=\"dot\">\r\n              <NotificationsIcon />\r\n            </Badge>\r\n          </IconButton>\r\n          <IconButton color=\"inherit\">\r\n            <InputIcon />\r\n          </IconButton>\r\n        </Hidden>\r\n        <Hidden lgUp>\r\n          <IconButton color=\"inherit\" onClick={onMobileNavOpen}>\r\n            <MenuIcon />\r\n          </IconButton>\r\n        </Hidden>\r\n      </Toolbar>\r\n    </AppBar>\r\n  )\r\n}\r\n\r\nTopBar.propTypes = {\r\n  className: PropTypes.string,\r\n  onMobileNavOpen: PropTypes.func\r\n}\r\n\r\nexport default TopBar\r\n","import React, { useState } from 'react'\r\nimport { makeStyles } from '@material-ui/core'\r\nimport NavBar from './NavBar'\r\nimport TopBar from './TopBar'\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n  root: {\r\n    backgroundColor: theme.palette.background.dark,\r\n    display: 'flex',\r\n    height: '100%',\r\n    overflow: 'hidden',\r\n    width: '100%'\r\n  },\r\n  wrapper: {\r\n    display: 'flex',\r\n    flex: '1 1 auto',\r\n    overflow: 'hidden',\r\n    paddingTop: 64,\r\n    [theme.breakpoints.up('lg')]: {\r\n      paddingLeft: 256\r\n    }\r\n  },\r\n  contentContainer: {\r\n    display: 'flex',\r\n    flex: '1 1 auto',\r\n    overflow: 'hidden'\r\n  },\r\n  content: {\r\n    flex: '1 1 auto',\r\n    height: '100%',\r\n    overflow: 'auto'\r\n  }\r\n}))\r\n\r\nconst DashboardLayout = props => {\r\n  const classes = useStyles()\r\n  const [isMobileNavOpen, setMobileNavOpen] = useState(false)\r\n\r\n  return (\r\n    <div className={classes.root}>\r\n      <TopBar onMobileNavOpen={() => setMobileNavOpen(true)} />\r\n      <NavBar onMobileClose={() => setMobileNavOpen(false)} openMobile={isMobileNavOpen} />\r\n      <div className={classes.wrapper}>\r\n        <div className={classes.contentContainer}>\r\n          <div className={classes.content}>\r\n            <props.components {...props} />\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default DashboardLayout\r\n","import React, { forwardRef } from 'react'\r\nimport { Helmet } from 'react-helmet'\r\nimport PropTypes from 'prop-types'\r\n\r\nconst Page = forwardRef(({ children, title = '', ...rest }, ref) => {\r\n  return (\r\n    <div ref={ref} {...rest}>\r\n      <Helmet>\r\n        <title>{title}</title>\r\n      </Helmet>\r\n      {children}\r\n    </div>\r\n  )\r\n})\r\n\r\nPage.propTypes = {\r\n  children: PropTypes.node.isRequired,\r\n  title: PropTypes.string\r\n}\r\n\r\nexport default Page\r\n","import React from 'react'\r\nimport { Bar } from 'react-chartjs-2'\r\nimport { Box, Button, Card, CardContent, CardHeader, Divider, useTheme, makeStyles, colors } from '@material-ui/core'\r\nimport ArrowDropDownIcon from '@material-ui/icons/ArrowDropDown'\r\nimport ArrowRightIcon from '@material-ui/icons/ArrowRight'\r\n\r\nconst useStyles = makeStyles(() => ({\r\n  root: {}\r\n}))\r\n\r\nconst Sales = props => {\r\n  const classes = useStyles()\r\n  const theme = useTheme()\r\n\r\n  const data = {\r\n    datasets: [\r\n      {\r\n        backgroundColor: colors.indigo[500],\r\n        data: [18, 5, 19, 27, 29, 19, 20],\r\n        label: 'This year'\r\n      },\r\n      {\r\n        backgroundColor: colors.grey[200],\r\n        data: [11, 20, 12, 29, 30, 25, 13],\r\n        label: 'Last year'\r\n      }\r\n    ],\r\n    labels: ['1 Aug', '2 Aug', '3 Aug', '4 Aug', '5 Aug', '6 Aug']\r\n  }\r\n\r\n  const options = {\r\n    animation: false,\r\n    cornerRadius: 20,\r\n    layout: { padding: 0 },\r\n    legend: { display: false },\r\n    maintainAspectRatio: false,\r\n    responsive: true,\r\n    scales: {\r\n      xAxes: [\r\n        {\r\n          barThickness: 12,\r\n          maxBarThickness: 10,\r\n          barPercentage: 0.5,\r\n          categoryPercentage: 0.5,\r\n          ticks: {\r\n            fontColor: theme.palette.text.secondary\r\n          },\r\n          gridLines: {\r\n            display: false,\r\n            drawBorder: false\r\n          }\r\n        }\r\n      ],\r\n      yAxes: [\r\n        {\r\n          ticks: {\r\n            fontColor: theme.palette.text.secondary,\r\n            beginAtZero: true,\r\n            min: 0\r\n          },\r\n          gridLines: {\r\n            borderDash: [2],\r\n            borderDashOffset: [2],\r\n            color: theme.palette.divider,\r\n            drawBorder: false,\r\n            zeroLineBorderDash: [2],\r\n            zeroLineBorderDashOffset: [2],\r\n            zeroLineColor: theme.palette.divider\r\n          }\r\n        }\r\n      ]\r\n    },\r\n    tooltips: {\r\n      backgroundColor: theme.palette.background.default,\r\n      bodyFontColor: theme.palette.text.secondary,\r\n      borderColor: theme.palette.divider,\r\n      borderWidth: 1,\r\n      enabled: true,\r\n      footerFontColor: theme.palette.text.secondary,\r\n      intersect: false,\r\n      mode: 'index',\r\n      titleFontColor: theme.palette.text.primary\r\n    }\r\n  }\r\n\r\n  return (\r\n    <Card className={classes.root}>\r\n      <CardHeader\r\n        action={\r\n          <Button endIcon={<ArrowDropDownIcon />} size=\"small\" variant=\"text\">\r\n            Last 7 days\r\n          </Button>\r\n        }\r\n        title=\"Latest Sales\"\r\n      />\r\n      <Divider />\r\n      <CardContent>\r\n        <Box height={400} position=\"relative\">\r\n          <Bar data={data} options={options} />\r\n        </Box>\r\n      </CardContent>\r\n      <Divider />\r\n      <Box display=\"flex\" justifyContent=\"flex-end\" p={2}>\r\n        <Button\r\n          color=\"primary\"\r\n          endIcon={<ArrowRightIcon />}\r\n          size=\"small\"\r\n          variant=\"text\"\r\n          onClick={() => {\r\n            props.history.push('/admin/papers')\r\n          }}\r\n        >\r\n          Overview\r\n        </Button>\r\n      </Box>\r\n    </Card>\r\n  )\r\n}\r\n\r\n// Sales.propTypes = {\r\n//   className: PropTypes.string\r\n// }\r\n\r\nexport default Sales\r\n","import React from 'react'\r\nimport clsx from 'clsx'\r\nimport PropTypes from 'prop-types'\r\nimport { Avatar, Box, Card, CardContent, Grid, LinearProgress, Typography, makeStyles, colors } from '@material-ui/core'\r\nimport InsertChartIcon from '@material-ui/icons/InsertChartOutlined'\r\n\r\nconst useStyles = makeStyles(() => ({\r\n  root: {\r\n    height: '100%'\r\n  },\r\n  avatar: {\r\n    backgroundColor: colors.orange[600],\r\n    height: 56,\r\n    width: 56\r\n  }\r\n}))\r\n\r\nconst TasksProgress = ({ className, ...rest }) => {\r\n  const classes = useStyles()\r\n\r\n  return (\r\n    <Card className={clsx(classes.root, className)} {...rest}>\r\n      <CardContent>\r\n        <Grid container justify=\"space-between\" spacing={3}>\r\n          <Grid item>\r\n            <Typography color=\"textSecondary\" gutterBottom variant=\"h6\">\r\n              TASKS PROGRESS\r\n            </Typography>\r\n            <Typography color=\"textPrimary\" variant=\"h3\">\r\n              75.5%\r\n            </Typography>\r\n          </Grid>\r\n          <Grid item>\r\n            <Avatar className={classes.avatar}>\r\n              <InsertChartIcon />\r\n            </Avatar>\r\n          </Grid>\r\n        </Grid>\r\n        <Box mt={3}>\r\n          <LinearProgress value={75.5} variant=\"determinate\" />\r\n        </Box>\r\n      </CardContent>\r\n    </Card>\r\n  )\r\n}\r\n\r\nTasksProgress.propTypes = {\r\n  className: PropTypes.string\r\n}\r\n\r\nexport default TasksProgress\r\n","import React from 'react'\r\nimport clsx from 'clsx'\r\nimport PropTypes from 'prop-types'\r\nimport { Avatar, Box, Card, CardContent, Grid, Typography, colors, makeStyles } from '@material-ui/core'\r\nimport ArrowUpwardIcon from '@material-ui/icons/ArrowUpward'\r\nimport PeopleIcon from '@material-ui/icons/PeopleOutlined'\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n  root: {\r\n    height: '100%'\r\n  },\r\n  avatar: {\r\n    backgroundColor: colors.green[600],\r\n    height: 56,\r\n    width: 56\r\n  },\r\n  differenceIcon: {\r\n    color: colors.green[900]\r\n  },\r\n  differenceValue: {\r\n    color: colors.green[900],\r\n    marginRight: theme.spacing(1)\r\n  }\r\n}))\r\n\r\nconst TotalCustomers = ({ className, ...rest }) => {\r\n  const classes = useStyles()\r\n\r\n  return (\r\n    <Card className={clsx(classes.root, className)} {...rest}>\r\n      <CardContent>\r\n        <Grid container justify=\"space-between\" spacing={3}>\r\n          <Grid item>\r\n            <Typography color=\"textSecondary\" gutterBottom variant=\"h6\">\r\n              TOTAL CUSTOMERS\r\n            </Typography>\r\n            <Typography color=\"textPrimary\" variant=\"h3\">\r\n              1,600\r\n            </Typography>\r\n          </Grid>\r\n          <Grid item>\r\n            <Avatar className={classes.avatar}>\r\n              <PeopleIcon />\r\n            </Avatar>\r\n          </Grid>\r\n        </Grid>\r\n        <Box mt={2} display=\"flex\" alignItems=\"center\">\r\n          <ArrowUpwardIcon className={classes.differenceIcon} />\r\n          <Typography className={classes.differenceValue} variant=\"body2\">\r\n            16%\r\n          </Typography>\r\n          <Typography color=\"textSecondary\" variant=\"caption\">\r\n            Since last month\r\n          </Typography>\r\n        </Box>\r\n      </CardContent>\r\n    </Card>\r\n  )\r\n}\r\n\r\nTotalCustomers.propTypes = {\r\n  className: PropTypes.string\r\n}\r\n\r\nexport default TotalCustomers\r\n","import React from 'react'\r\nimport clsx from 'clsx'\r\nimport PropTypes from 'prop-types'\r\nimport { Avatar, Card, CardContent, Grid, Typography, makeStyles, colors } from '@material-ui/core'\r\nimport AttachMoneyIcon from '@material-ui/icons/AttachMoney'\r\n\r\nconst useStyles = makeStyles(() => ({\r\n  root: {\r\n    height: '100%'\r\n  },\r\n  avatar: {\r\n    backgroundColor: colors.indigo[600],\r\n    height: 56,\r\n    width: 56\r\n  }\r\n}))\r\n\r\nconst TotalProfit = ({ className, ...rest }) => {\r\n  const classes = useStyles()\r\n\r\n  return (\r\n    <Card className={clsx(classes.root, className)} {...rest}>\r\n      <CardContent>\r\n        <Grid container justify=\"space-between\" spacing={3}>\r\n          <Grid item>\r\n            <Typography color=\"textSecondary\" gutterBottom variant=\"h6\">\r\n              TOTAL PROFIT\r\n            </Typography>\r\n            <Typography color=\"textPrimary\" variant=\"h3\">\r\n              $23,200\r\n            </Typography>\r\n          </Grid>\r\n          <Grid item>\r\n            <Avatar className={classes.avatar}>\r\n              <AttachMoneyIcon />\r\n            </Avatar>\r\n          </Grid>\r\n        </Grid>\r\n      </CardContent>\r\n    </Card>\r\n  )\r\n}\r\n\r\nTotalProfit.propTypes = {\r\n  className: PropTypes.string\r\n}\r\n\r\nexport default TotalProfit\r\n","import React from 'react'\r\nimport clsx from 'clsx'\r\nimport PropTypes from 'prop-types'\r\nimport { Doughnut } from 'react-chartjs-2'\r\nimport {\r\n  Box,\r\n  Card,\r\n  CardContent,\r\n  CardHeader,\r\n  Divider,\r\n  Typography,\r\n  colors,\r\n  makeStyles,\r\n  useTheme\r\n} from '@material-ui/core'\r\nimport LaptopMacIcon from '@material-ui/icons/LaptopMac'\r\nimport PhoneIcon from '@material-ui/icons/Phone'\r\nimport TabletIcon from '@material-ui/icons/Tablet'\r\n\r\nconst useStyles = makeStyles(() => ({\r\n  root: {\r\n    height: '100%'\r\n  }\r\n}))\r\n\r\nconst TrafficByDevice = ({ className, ...rest }) => {\r\n  const classes = useStyles()\r\n  const theme = useTheme()\r\n\r\n  const data = {\r\n    datasets: [\r\n      {\r\n        data: [63, 15, 22],\r\n        backgroundColor: [colors.indigo[500], colors.red[600], colors.orange[600]],\r\n        borderWidth: 8,\r\n        borderColor: colors.common.white,\r\n        hoverBorderColor: colors.common.white\r\n      }\r\n    ],\r\n    labels: ['Desktop', 'Tablet', 'Mobile']\r\n  }\r\n\r\n  const options = {\r\n    animation: false,\r\n    cutoutPercentage: 80,\r\n    layout: { padding: 0 },\r\n    legend: {\r\n      display: false\r\n    },\r\n    maintainAspectRatio: false,\r\n    responsive: true,\r\n    tooltips: {\r\n      backgroundColor: theme.palette.background.default,\r\n      bodyFontColor: theme.palette.text.secondary,\r\n      borderColor: theme.palette.divider,\r\n      borderWidth: 1,\r\n      enabled: true,\r\n      footerFontColor: theme.palette.text.secondary,\r\n      intersect: false,\r\n      mode: 'index',\r\n      titleFontColor: theme.palette.text.primary\r\n    }\r\n  }\r\n\r\n  const devices = [\r\n    {\r\n      title: 'Desktop',\r\n      value: 63,\r\n      icon: LaptopMacIcon,\r\n      color: colors.indigo[500]\r\n    },\r\n    {\r\n      title: 'Tablet',\r\n      value: 15,\r\n      icon: TabletIcon,\r\n      color: colors.red[600]\r\n    },\r\n    {\r\n      title: 'Mobile',\r\n      value: 23,\r\n      icon: PhoneIcon,\r\n      color: colors.orange[600]\r\n    }\r\n  ]\r\n\r\n  return (\r\n    <Card className={clsx(classes.root, className)} {...rest}>\r\n      <CardHeader title=\"Traffic by Device\" />\r\n      <Divider />\r\n      <CardContent>\r\n        <Box height={300} position=\"relative\">\r\n          <Doughnut data={data} options={options} />\r\n        </Box>\r\n        <Box display=\"flex\" justifyContent=\"center\" mt={2}>\r\n          {devices.map(({ color, icon: Icon, title, value }) => (\r\n            <Box key={title} p={1} textAlign=\"center\">\r\n              <Icon color=\"action\" />\r\n              <Typography color=\"textPrimary\" variant=\"body1\">\r\n                {title}\r\n              </Typography>\r\n              <Typography style={{ color }} variant=\"h2\">\r\n                {value}%\r\n              </Typography>\r\n            </Box>\r\n          ))}\r\n        </Box>\r\n      </CardContent>\r\n    </Card>\r\n  )\r\n}\r\n\r\nTrafficByDevice.propTypes = {\r\n  className: PropTypes.string\r\n}\r\n\r\nexport default TrafficByDevice\r\n","import React from 'react'\r\nimport { Container, Grid, makeStyles } from '@material-ui/core'\r\nimport Page from 'components/Page'\r\nimport Sales from './Sales'\r\nimport TasksProgress from './TasksProgress'\r\nimport TotalCustomers from './TotalCustomers'\r\nimport TotalProfit from './TotalProfit'\r\nimport TrafficByDevice from './TrafficByDevice'\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n  root: {\r\n    backgroundColor: theme.palette.background.dark,\r\n    minHeight: '100%',\r\n    paddingBottom: theme.spacing(3),\r\n    paddingTop: theme.spacing(3)\r\n  }\r\n}))\r\n\r\nconst Dashboard = props => {\r\n  const classes = useStyles()\r\n\r\n  return (\r\n    <Page className={classes.root} title=\"Dashboard\">\r\n      <Container maxWidth={false}>\r\n        <Grid container spacing={3}>\r\n          <Grid item lg={4} sm={6} xl={4} xs={12}>\r\n            <TotalCustomers />\r\n          </Grid>\r\n          <Grid item lg={4} sm={6} xl={4} xs={12}>\r\n            <TasksProgress />\r\n          </Grid>\r\n          <Grid item lg={4} sm={6} xl={4} xs={12}>\r\n            <TotalProfit />\r\n          </Grid>\r\n          <Grid item lg={8} md={12} xl={9} xs={12}>\r\n            <Sales {...props} />\r\n          </Grid>\r\n          <Grid item lg={4} md={6} xl={3} xs={12}>\r\n            <TrafficByDevice />\r\n          </Grid>\r\n        </Grid>\r\n      </Container>\r\n    </Page>\r\n  )\r\n}\r\n\r\nexport default Dashboard\r\n","import React, { useState } from 'react'\r\nimport clsx from 'clsx'\r\nimport PropTypes from 'prop-types'\r\nimport moment from 'moment'\r\nimport PerfectScrollbar from 'react-perfect-scrollbar'\r\nimport {\r\n  Avatar,\r\n  Box,\r\n  Card,\r\n  Checkbox,\r\n  Table,\r\n  TableBody,\r\n  TableCell,\r\n  TableHead,\r\n  TablePagination,\r\n  TableRow,\r\n  Typography,\r\n  makeStyles,\r\n  ButtonGroup,\r\n  Button\r\n} from '@material-ui/core'\r\nimport getInitials from 'utils/getInitials'\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n  root: {},\r\n  avatar: {\r\n    marginRight: theme.spacing(2)\r\n  }\r\n}))\r\n\r\nconst Results = ({ className, users, history, ...rest }) => {\r\n  const classes = useStyles()\r\n  const [selectedCustomerIds, setSelectedCustomerIds] = useState([])\r\n  const [limit, setLimit] = useState(10)\r\n  const [page, setPage] = useState(0)\r\n\r\n  const handleSelectAll = event => {\r\n    let newSelectedCustomerIds\r\n\r\n    if (event.target.checked) {\r\n      newSelectedCustomerIds = users.map(customer => customer.id)\r\n    } else {\r\n      newSelectedCustomerIds = []\r\n    }\r\n\r\n    setSelectedCustomerIds(newSelectedCustomerIds)\r\n  }\r\n\r\n  const handleSelectOne = (event, id) => {\r\n    const selectedIndex = selectedCustomerIds.indexOf(id)\r\n    let newSelectedCustomerIds = []\r\n\r\n    if (selectedIndex === -1) {\r\n      newSelectedCustomerIds = newSelectedCustomerIds.concat(selectedCustomerIds, id)\r\n    } else if (selectedIndex === 0) {\r\n      newSelectedCustomerIds = newSelectedCustomerIds.concat(selectedCustomerIds.slice(1))\r\n    } else if (selectedIndex === selectedCustomerIds.length - 1) {\r\n      newSelectedCustomerIds = newSelectedCustomerIds.concat(selectedCustomerIds.slice(0, -1))\r\n    } else if (selectedIndex > 0) {\r\n      newSelectedCustomerIds = newSelectedCustomerIds.concat(\r\n        selectedCustomerIds.slice(0, selectedIndex),\r\n        selectedCustomerIds.slice(selectedIndex + 1)\r\n      )\r\n    }\r\n\r\n    setSelectedCustomerIds(newSelectedCustomerIds)\r\n  }\r\n\r\n  const handleLimitChange = event => {\r\n    setLimit(event.target.value)\r\n  }\r\n\r\n  const handlePageChange = (event, newPage) => {\r\n    setPage(newPage)\r\n  }\r\n\r\n  const handleReview = e => {\r\n    history.push('/admin/users/' + e.currentTarget.value)\r\n  }\r\n\r\n  return (\r\n    <Card className={clsx(classes.root, className)} {...rest}>\r\n      <PerfectScrollbar>\r\n        <Box minWidth={1050}>\r\n          <Table>\r\n            <TableHead>\r\n              <TableRow>\r\n                <TableCell padding=\"checkbox\">\r\n                  <Checkbox\r\n                    checked={selectedCustomerIds.length === users.length}\r\n                    color=\"primary\"\r\n                    indeterminate={selectedCustomerIds.length > 0 && selectedCustomerIds.length < users.length}\r\n                    onChange={handleSelectAll}\r\n                  />\r\n                </TableCell>\r\n                <TableCell>Name</TableCell>\r\n                <TableCell>Email</TableCell>\r\n                <TableCell>Chinese Class</TableCell>\r\n                <TableCell>HSK Level</TableCell>\r\n                <TableCell>Ethnic Background</TableCell>\r\n                <TableCell>Exam Result</TableCell>\r\n                <TableCell>RegisteredAt</TableCell>\r\n                <TableCell align=\"center\">Operation</TableCell>\r\n              </TableRow>\r\n            </TableHead>\r\n            <TableBody>\r\n              {users.slice(0, limit).map(user => (\r\n                <TableRow hover key={user.id} selected={selectedCustomerIds.indexOf(user.id) !== -1}>\r\n                  <TableCell padding=\"checkbox\">\r\n                    <Checkbox\r\n                      checked={selectedCustomerIds.indexOf(user.id) !== -1}\r\n                      onChange={event => handleSelectOne(event, user.id)}\r\n                      value=\"true\"\r\n                    />\r\n                  </TableCell>\r\n                  <TableCell>\r\n                    <Box alignItems=\"center\" display=\"flex\">\r\n                      <Avatar className={classes.avatar}>{getInitials(user.name)}</Avatar>\r\n                      <Typography color=\"textPrimary\" variant=\"body1\">\r\n                        {user.name}\r\n                      </Typography>\r\n                    </Box>\r\n                  </TableCell>\r\n                  <TableCell>{user.email}</TableCell>\r\n                  <TableCell>{user.chinese_class}</TableCell>\r\n                  <TableCell>{user.hks_level}</TableCell>\r\n                  <TableCell>{user.ethnic_background}</TableCell>\r\n                  <TableCell>{'这里展示做过哪些试卷？'}</TableCell>\r\n                  <TableCell>{moment(user.createdAt).format('DD/MM/YYYY')}</TableCell>\r\n                  <TableCell align=\"center\">\r\n                    <ButtonGroup size=\"small\">\r\n                      <Button color=\"primary\" onClick={handleReview} value={user.id}>\r\n                        review\r\n                      </Button>\r\n                      <Button color=\"secondary\">delete</Button>\r\n                    </ButtonGroup>\r\n                  </TableCell>\r\n                </TableRow>\r\n              ))}\r\n            </TableBody>\r\n          </Table>\r\n        </Box>\r\n      </PerfectScrollbar>\r\n      <TablePagination\r\n        component=\"div\"\r\n        count={users.length}\r\n        onChangePage={handlePageChange}\r\n        onChangeRowsPerPage={handleLimitChange}\r\n        page={page}\r\n        rowsPerPage={limit}\r\n        rowsPerPageOptions={[5, 10, 25]}\r\n      />\r\n    </Card>\r\n  )\r\n}\r\n\r\nResults.propTypes = {\r\n  className: PropTypes.string,\r\n  users: PropTypes.array.isRequired,\r\n  history: PropTypes.any\r\n}\r\n\r\nexport default Results\r\n","export default (name = '') =>\r\n  name\r\n    .replace(/\\s+/, ' ')\r\n    .split(' ')\r\n    .slice(0, 2)\r\n    .map(v => v && v[0].toUpperCase())\r\n    .join('')\r\n","import React from 'react'\r\nimport PropTypes from 'prop-types'\r\nimport clsx from 'clsx'\r\nimport { Box, Button, Card, CardContent, TextField, InputAdornment, SvgIcon, makeStyles } from '@material-ui/core'\r\nimport { Search as SearchIcon } from 'react-feather'\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n  root: {},\r\n  importButton: {\r\n    marginRight: theme.spacing(1)\r\n  },\r\n  exportButton: {\r\n    marginRight: theme.spacing(1)\r\n  }\r\n}))\r\n\r\nconst Toolbar = ({ className, ...rest }) => {\r\n  const classes = useStyles()\r\n\r\n  return (\r\n    <div className={clsx(classes.root, className)} {...rest}>\r\n      <Box display=\"flex\" justifyContent=\"flex-end\">\r\n        <Button color=\"primary\" variant=\"contained\">\r\n          Export Data\r\n        </Button>\r\n      </Box>\r\n      <Box mt={3}>\r\n        <Card>\r\n          <CardContent>\r\n            <Box maxWidth={500}>\r\n              <TextField\r\n                fullWidth\r\n                InputProps={{\r\n                  startAdornment: (\r\n                    <InputAdornment position=\"start\">\r\n                      <SvgIcon fontSize=\"small\" color=\"action\">\r\n                        <SearchIcon />\r\n                      </SvgIcon>\r\n                    </InputAdornment>\r\n                  )\r\n                }}\r\n                placeholder=\"Search user\"\r\n                variant=\"outlined\"\r\n              />\r\n            </Box>\r\n          </CardContent>\r\n        </Card>\r\n      </Box>\r\n    </div>\r\n  )\r\n}\r\n\r\nToolbar.propTypes = {\r\n  className: PropTypes.string\r\n}\r\n\r\nexport default Toolbar\r\n","import React, { useEffect, useState } from 'react'\r\nimport { Box, Container, makeStyles } from '@material-ui/core'\r\nimport Page from 'components/Page'\r\nimport Results from './Results'\r\nimport Toolbar from './Toolbar'\r\nimport api from '../../../api'\r\nimport { toast } from 'react-toastify'\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n  root: {\r\n    backgroundColor: theme.palette.background.dark,\r\n    minHeight: '100%',\r\n    paddingBottom: theme.spacing(3),\r\n    paddingTop: theme.spacing(3)\r\n  }\r\n}))\r\n\r\nconst Users = props => {\r\n  const classes = useStyles()\r\n  const [users, setUsers] = useState([])\r\n\r\n  const getUsers = () => {\r\n    api.QueryUsers().then(res => {\r\n      if (!res.success) {\r\n        toast.error(res.info)\r\n      } else {\r\n        setUsers(res.data)\r\n      }\r\n    })\r\n  }\r\n\r\n  useEffect(() => {\r\n    getUsers()\r\n  }, [])\r\n\r\n  return (\r\n    <Page className={classes.root} title=\"Customers\">\r\n      <Container maxWidth={false}>\r\n        <Toolbar />\r\n        <Box mt={3} style={{ minWidth: 1099 }}>\r\n          {/*// todo dont use another page, use sub component */}\r\n          <Results users={users} history={props.history} />\r\n        </Box>\r\n      </Container>\r\n    </Page>\r\n  )\r\n}\r\n\r\nexport default Users\r\n","import React, { useState, useEffect } from 'react'\r\nimport PropTypes from 'prop-types'\r\nimport clsx from 'clsx'\r\nimport {\r\n  Box,\r\n  Button,\r\n  Card,\r\n  CardContent,\r\n  CardHeader,\r\n  Divider,\r\n  TextField,\r\n  makeStyles,\r\n  Grid,\r\n  InputLabel,\r\n  Select,\r\n  MenuItem,\r\n  Dialog,\r\n  DialogTitle,\r\n  DialogContent,\r\n  DialogContentText,\r\n  DialogActions\r\n} from '@material-ui/core'\r\nimport api from '../../../api'\r\nimport { toast } from 'react-toastify'\r\n\r\nconst useStyles = makeStyles({\r\n  root: {}\r\n})\r\n\r\nconst defaultSettings = {\r\n  BitRate: 128,\r\n  SampleRate: 16000\r\n}\r\n\r\nconst SettingsContent = ({ className, ...rest }) => {\r\n  const classes = useStyles()\r\n  const [settings, setSettings] = useState(defaultSettings)\r\n  const [updated, setUpdated] = useState(false)\r\n  const [popOpen, setPopOpen] = useState(false)\r\n\r\n  const handleOpen = () => {\r\n    setPopOpen(true)\r\n  }\r\n  const handleClose = () => {\r\n    setPopOpen(false)\r\n  }\r\n\r\n  const handleChange = event => {\r\n    setSettings({\r\n      ...settings,\r\n      [event.target.name]: event.target.value\r\n    })\r\n  }\r\n\r\n  const getSetting = () => {\r\n    api.querySettings().then(res => {\r\n      if (!res.success) {\r\n        toast.error(res.info)\r\n      } else {\r\n        setSettings(res.data)\r\n      }\r\n    })\r\n  }\r\n\r\n  const updateSetting = () => {\r\n    api.updateSetting(settings).then(res => {\r\n      if (!res.success) {\r\n        toast.error(res.info)\r\n      } else {\r\n        toast.success('🎉 YAY, you did it! ✨')\r\n        setUpdated(prevState => !prevState)\r\n      }\r\n    })\r\n  }\r\n\r\n  const resetSetting = () => {\r\n    api.updateSetting(defaultSettings).then(res => {\r\n      if (!res.success) {\r\n        toast.error(res.info)\r\n      } else {\r\n        toast.success('🎉 YAY, you did it! ✨')\r\n        setUpdated(prevState => !prevState)\r\n        handleClose()\r\n      }\r\n    })\r\n  }\r\n\r\n  useEffect(() => {\r\n    getSetting()\r\n  }, [updated])\r\n\r\n  return (\r\n    <form className={clsx(classes.root, className)} {...rest}>\r\n      <Card>\r\n        <CardHeader subheader=\"tune audio config\" title=\"Audio Config\" />\r\n        <Divider />\r\n        <CardContent>\r\n          <Grid container>\r\n            <Grid item xs={4}>\r\n              <InputLabel>SampleRate</InputLabel>\r\n              <Select\r\n                labelId=\"demo-simple-select-label\"\r\n                id=\"demo-simple-select\"\r\n                name=\"SampleRate\"\r\n                fullWidth\r\n                value={settings.SampleRate}\r\n                onChange={handleChange}\r\n              >\r\n                <MenuItem value={8000}>8000</MenuItem>\r\n                <MenuItem value={11025}>11025</MenuItem>\r\n                <MenuItem value={16000}>16000</MenuItem>\r\n                <MenuItem value={22050}>22050</MenuItem>\r\n                <MenuItem value={24000}>24000</MenuItem>\r\n                <MenuItem value={44100}>44100</MenuItem>\r\n                <MenuItem value={48000}>44100</MenuItem>\r\n                <MenuItem value={50000}>50000</MenuItem>\r\n                <MenuItem value={96000}>96000</MenuItem>\r\n              </Select>\r\n            </Grid>\r\n            <Grid item xs={4} />\r\n            <Grid item xs={4}>\r\n              <InputLabel>BitRate</InputLabel>\r\n              <TextField\r\n                name=\"BitRate\"\r\n                type=\"number\"\r\n                InputLabelProps={{\r\n                  shrink: true\r\n                }}\r\n                fullWidth\r\n                variant=\"standard\"\r\n                value={settings.BitRate}\r\n                onChange={handleChange}\r\n              />\r\n            </Grid>\r\n          </Grid>\r\n        </CardContent>\r\n        <Divider />\r\n        {/*justifyContent=\"flex-end\"*/}\r\n        <Box display=\"flex\" justifyContent=\"space-between\" p={2}>\r\n          <Button color=\"secondary\" variant=\"contained\" onClick={handleOpen}>\r\n            Reset\r\n          </Button>\r\n          <Button color=\"primary\" variant=\"contained\" onClick={updateSetting}>\r\n            Update\r\n          </Button>\r\n          <Dialog\r\n            open={popOpen}\r\n            onClose={handleClose}\r\n            aria-labelledby=\"alert-dialog-title\"\r\n            aria-describedby=\"alert-dialog-description\"\r\n          >\r\n            <DialogTitle id=\"alert-dialog-title\">Do you confirm to proceed the reset?</DialogTitle>\r\n            <DialogContent>\r\n              <DialogContentText id=\"alert-dialog-description\">\r\n                The default value of SampleRate is 16000, BitRate is 128.\r\n              </DialogContentText>\r\n            </DialogContent>\r\n            <DialogActions>\r\n              <Button onClick={resetSetting} color=\"primary\">\r\n                Ok\r\n              </Button>\r\n              <Button onClick={handleClose} color=\"primary\">\r\n                Cancel\r\n              </Button>\r\n            </DialogActions>\r\n          </Dialog>\r\n        </Box>\r\n      </Card>\r\n    </form>\r\n  )\r\n}\r\n\r\nSettingsContent.propTypes = {\r\n  className: PropTypes.string\r\n}\r\n\r\nexport default SettingsContent\r\n","import React from 'react'\r\nimport { Box, Container, makeStyles } from '@material-ui/core'\r\nimport Page from 'components/Page'\r\nimport SettingsContent from './Settings'\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n  root: {\r\n    backgroundColor: theme.palette.background.dark,\r\n    minHeight: '100%',\r\n    paddingBottom: theme.spacing(3),\r\n    paddingTop: theme.spacing(3)\r\n  }\r\n}))\r\n\r\nconst Settings = () => {\r\n  const classes = useStyles()\r\n\r\n  return (\r\n    <Page className={classes.root} title=\"Settings\">\r\n      <Container maxWidth=\"lg\">\r\n        <Box mt={3}>\r\n          <SettingsContent />\r\n        </Box>\r\n      </Container>\r\n    </Page>\r\n  )\r\n}\r\n\r\nexport default Settings\r\n","export const columns = [\r\n  { field: 'id', sortable: false, width: 80 },\r\n  { field: 'createdAt', sortable: false, width: 100 },\r\n  { field: 'name', sortable: false, flex: 0.3 },\r\n  { field: 'words', sortable: false, flex: 1 }\r\n]\r\n\r\nexport const data = [\r\n  {\r\n    id: 1,\r\n    created_at: 1555016400000,\r\n    name: 'Paper for test',\r\n    words: '字1 字2 字3 字4 字5 字6'\r\n  },\r\n  {\r\n    id: 2,\r\n    created_at: 1555016400000,\r\n    name: 'Paper 1',\r\n    words: '字6 字5 字4 字3 字2 字1'\r\n  }\r\n]\r\n","import React, { useState } from 'react'\r\nimport {\r\n  Button,\r\n  Dialog,\r\n  DialogActions,\r\n  DialogContent,\r\n  DialogTitle,\r\n  Grid,\r\n  InputLabel,\r\n  makeStyles,\r\n  TextField\r\n} from '@material-ui/core'\r\nimport { toast } from 'react-toastify'\r\nimport api from 'api'\r\nimport { Input } from 'antd'\r\n\r\nconst { TextArea } = Input\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n  root: {\r\n    display: 'flex',\r\n    justifyContent: 'center',\r\n    flexWrap: 'wrap',\r\n    '& > *': {\r\n      margin: theme.spacing(0.5)\r\n    }\r\n  },\r\n  chip: {\r\n    margin: theme.spacing(0.5)\r\n  },\r\n  input: {\r\n    marginLeft: theme.spacing(1),\r\n    flex: 1\r\n  }\r\n}))\r\n\r\nconst Editor = props => {\r\n  const classes = useStyles()\r\n  const [words, setWords] = useState('') // {key:index, label:word}\r\n  const [interval, setInterval] = useState(0)\r\n\r\n  const onUpdateWords = () => {\r\n    api.editPaper({ ...props.data, words: words, interval: interval }).then(res => {\r\n      if (!res.success) {\r\n        toast.error(res.info)\r\n      } else {\r\n        toast.success('updated!')\r\n        props.refreshPaper()\r\n        props.onClickExit()\r\n      }\r\n    })\r\n  }\r\n\r\n  const onUpdateInterval = e => {\r\n    setInterval(parseInt(e.currentTarget.value))\r\n  }\r\n\r\n  // useEffect(() => {\r\n  //   if (props.data) {\r\n  //     setWords(props.data.words)\r\n  //   }\r\n  // }, [props.data])\r\n\r\n  const editWords = e => {\r\n    setWords(e.currentTarget.value)\r\n  }\r\n\r\n  // const handleAddWord = e => {\r\n  //   setWords(e.currentTarget.value)\r\n  // }\r\n  //\r\n  // const handleDeleteWord = chipToDelete => () => {\r\n  //   // setWords(words => words.filter((word, i) => i !== chipToDelete))\r\n  //   setWords(words =>\r\n  //     words\r\n  //       .split(' ')\r\n  //       .filter((word, i) => i !== chipToDelete)\r\n  //       .join(' ')\r\n  //   )\r\n  // }\r\n\r\n  return (\r\n    <Grid container>\r\n      <Grid item xs={12}>\r\n        <Dialog\r\n          maxWidth=\"md\"\r\n          fullWidth\r\n          open={props.open}\r\n          onClose={props.onClickExit}\r\n          aria-labelledby=\"alert-dialog-title\"\r\n          aria-describedby=\"alert-dialog-description\"\r\n        >\r\n          <DialogTitle id=\"alert-dialog-title\">\r\n            Id: {(props.data && props.data.id) || 0}; PaperName: {(props.data && props.data.name) || ''}\r\n          </DialogTitle>\r\n          <DialogContent className={classes.root}>\r\n            <Grid container>\r\n              <Grid item xs={2}>\r\n                <InputLabel>Interval (per/s)</InputLabel>\r\n              </Grid>\r\n              <Grid item xs={10} style={{ marginBottom: 20 }}>\r\n                <TextField\r\n                  type=\"number\"\r\n                  variant=\"standard\"\r\n                  defaultValue={props.data && props.data.interval}\r\n                  onChange={onUpdateInterval}\r\n                />\r\n              </Grid>\r\n              <Grid item xs={2}>\r\n                <InputLabel>Words</InputLabel>\r\n              </Grid>\r\n              <Grid item xs={10}>\r\n                <TextArea\r\n                  placeholder=\"you can edit words here\"\r\n                  autoSize\r\n                  defaultValue={props.data && props.data.words}\r\n                  onChange={editWords}\r\n                />\r\n              </Grid>\r\n            </Grid>\r\n\r\n            {/*{words.split(' ').map((word, i) => {*/}\r\n            {/*  return (*/}\r\n            {/*    <li key={i}>*/}\r\n            {/*      <Chip label={word} onDelete={handleDeleteWord(i)} className={classes.chip} />*/}\r\n            {/*    </li>*/}\r\n            {/*  )*/}\r\n            {/*})}*/}\r\n            {/*<li>*/}\r\n            {/*  <OutlinedInput className={classes.input} placeholder=\"Add here\" />*/}\r\n            {/*  <IconButton type=\"submit\">*/}\r\n            {/*    <Plus />*/}\r\n            {/*  </IconButton>*/}\r\n            {/*</li>*/}\r\n          </DialogContent>\r\n          <DialogActions>\r\n            <Button onClick={onUpdateWords} color=\"primary\">\r\n              Ok\r\n            </Button>\r\n            <Button onClick={props.onClickExit} color=\"primary\">\r\n              Cancel\r\n            </Button>\r\n          </DialogActions>\r\n        </Dialog>\r\n      </Grid>\r\n    </Grid>\r\n  )\r\n}\r\n\r\nexport default Editor\r\n","import React, { useState } from 'react'\r\nimport clsx from 'clsx'\r\nimport PropTypes from 'prop-types'\r\nimport moment from 'moment'\r\nimport PerfectScrollbar from 'react-perfect-scrollbar'\r\nimport {\r\n  Box,\r\n  Card,\r\n  Checkbox,\r\n  Table,\r\n  TableBody,\r\n  TableCell,\r\n  TableHead,\r\n  TablePagination,\r\n  TableRow,\r\n  makeStyles,\r\n  ButtonGroup,\r\n  Button\r\n} from '@material-ui/core'\r\nimport Editor from './editor/editor'\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n  root: {},\r\n  avatar: {\r\n    marginRight: theme.spacing(2)\r\n  }\r\n}))\r\n\r\nconst Results = ({ className, datas, refreshPaper, ...rest }) => {\r\n  const classes = useStyles()\r\n  const [selectedCustomerIds, setSelectedCustomerIds] = useState([])\r\n  const [limit, setLimit] = useState(10)\r\n  const [page, setPage] = useState(0)\r\n  const [editProps, setEditProps] = useState({ open: false, refreshPaper: refreshPaper })\r\n\r\n  const handleSelectAll = event => {\r\n    let newSelectedCustomerIds\r\n\r\n    if (event.target.checked) {\r\n      newSelectedCustomerIds = datas.map(customer => customer.id)\r\n    } else {\r\n      newSelectedCustomerIds = []\r\n    }\r\n\r\n    setSelectedCustomerIds(newSelectedCustomerIds)\r\n  }\r\n\r\n  const handleSelectOne = (event, id) => {\r\n    const selectedIndex = selectedCustomerIds.indexOf(id)\r\n    let newSelectedCustomerIds = []\r\n\r\n    if (selectedIndex === -1) {\r\n      newSelectedCustomerIds = newSelectedCustomerIds.concat(selectedCustomerIds, id)\r\n    } else if (selectedIndex === 0) {\r\n      newSelectedCustomerIds = newSelectedCustomerIds.concat(selectedCustomerIds.slice(1))\r\n    } else if (selectedIndex === selectedCustomerIds.length - 1) {\r\n      newSelectedCustomerIds = newSelectedCustomerIds.concat(selectedCustomerIds.slice(0, -1))\r\n    } else if (selectedIndex > 0) {\r\n      newSelectedCustomerIds = newSelectedCustomerIds.concat(\r\n        selectedCustomerIds.slice(0, selectedIndex),\r\n        selectedCustomerIds.slice(selectedIndex + 1)\r\n      )\r\n    }\r\n\r\n    setSelectedCustomerIds(newSelectedCustomerIds)\r\n  }\r\n\r\n  const handleLimitChange = event => {\r\n    setLimit(event.target.value)\r\n  }\r\n\r\n  const handlePageChange = (event, newPage) => {\r\n    setPage(newPage)\r\n  }\r\n\r\n  const onClickEditExit = () => {\r\n    setEditProps({ open: false })\r\n  }\r\n\r\n  const handleEditClicked = e => {\r\n    const dataIndex = e.currentTarget.value\r\n    setEditProps({ open: true, onClickExit: onClickEditExit, data: datas[dataIndex], refreshPaper: refreshPaper })\r\n  }\r\n\r\n  return (\r\n    <Card className={clsx(classes.root, className)} {...rest}>\r\n      <Editor {...editProps} />\r\n      <PerfectScrollbar>\r\n        <Box minWidth={1050}>\r\n          <Table>\r\n            <TableHead>\r\n              <TableRow>\r\n                <TableCell padding=\"checkbox\">\r\n                  <Checkbox\r\n                    checked={selectedCustomerIds.length === datas.length}\r\n                    color=\"primary\"\r\n                    indeterminate={selectedCustomerIds.length > 0 && selectedCustomerIds.length < datas.length}\r\n                    onChange={handleSelectAll}\r\n                  />\r\n                </TableCell>\r\n                <TableCell>Id</TableCell>\r\n                <TableCell>CreatedAt</TableCell>\r\n                <TableCell>Name</TableCell>\r\n                <TableCell>Interval(/s)</TableCell>\r\n                <TableCell>Words</TableCell>\r\n                <TableCell align=\"center\">Operation</TableCell>\r\n              </TableRow>\r\n            </TableHead>\r\n            <TableBody>\r\n              {datas.slice(0, limit).map((data, index) => (\r\n                <TableRow hover key={data.id} selected={selectedCustomerIds.indexOf(data.id) !== -1}>\r\n                  <TableCell padding=\"checkbox\">\r\n                    <Checkbox\r\n                      checked={selectedCustomerIds.indexOf(data.id) !== -1}\r\n                      onChange={event => handleSelectOne(event, data.id)}\r\n                      value=\"true\"\r\n                    />\r\n                  </TableCell>\r\n                  <TableCell>{data.id}</TableCell>\r\n                  <TableCell>{moment(data.created_at).format('YYYY-MM-DD hh:mm:ss')}</TableCell>\r\n                  <TableCell>{data.name}</TableCell>\r\n                  <TableCell>{data.interval}</TableCell>\r\n                  <TableCell>{data.words}</TableCell>\r\n                  <TableCell align=\"center\">\r\n                    <ButtonGroup size=\"small\">\r\n                      <Button color=\"primary\" onClick={handleEditClicked} value={index}>\r\n                        edit\r\n                      </Button>\r\n                      <Button color=\"primary\">publish</Button>\r\n                      <Button color=\"secondary\">delete</Button>\r\n                    </ButtonGroup>\r\n                  </TableCell>\r\n                </TableRow>\r\n              ))}\r\n            </TableBody>\r\n          </Table>\r\n        </Box>\r\n      </PerfectScrollbar>\r\n      <TablePagination\r\n        component=\"div\"\r\n        count={datas.length}\r\n        onChangePage={handlePageChange}\r\n        onChangeRowsPerPage={handleLimitChange}\r\n        page={page}\r\n        rowsPerPage={limit}\r\n        rowsPerPageOptions={[5, 10, 25]}\r\n      />\r\n    </Card>\r\n  )\r\n}\r\n\r\nResults.propTypes = {\r\n  className: PropTypes.string,\r\n  datas: PropTypes.array.isRequired\r\n}\r\n\r\nexport default Results\r\n","import React, { useState, useEffect } from 'react'\r\nimport { Box, Button, Container, makeStyles, Typography } from '@material-ui/core'\r\nimport { data } from './data'\r\nimport Page from 'components/Page'\r\nimport Result from './result'\r\nimport Editor from './editor/editor'\r\nimport api from 'api'\r\nimport { toast } from 'react-toastify'\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n  root: {\r\n    backgroundColor: theme.palette.background.dark,\r\n    minHeight: '100%',\r\n    paddingBottom: theme.spacing(3),\r\n    paddingTop: theme.spacing(3)\r\n  }\r\n}))\r\n\r\nconst Papers = () => {\r\n  const classes = useStyles()\r\n  const [papers, setPapers] = useState(data)\r\n  const [activePaper, setActivePaper] = useState(data[0])\r\n  const [addNew, setAddNew] = useState(false)\r\n\r\n  const getPapers = () => {\r\n    api.queryPapers().then(res => {\r\n      if (!res.success) {\r\n        toast.error(res.info)\r\n      } else {\r\n        setPapers(res.data.papers)\r\n        setActivePaper(res.data.active_paper)\r\n      }\r\n    })\r\n  }\r\n\r\n  useEffect(getPapers, [])\r\n\r\n  const Add = () => {\r\n    setAddNew(true)\r\n  }\r\n\r\n  const onClickX = () => {\r\n    setAddNew(false)\r\n  }\r\n\r\n  return (\r\n    <Page className={classes.root} title=\"Papers\">\r\n      <Container maxWidth={false}>\r\n        <Editor open={addNew} onClickExit={onClickX} />\r\n        <Box display=\"flex\" justifyContent=\"flex-end\">\r\n          <Button color=\"primary\" variant=\"contained\" onClick={Add}>\r\n            Add New Paper\r\n          </Button>\r\n        </Box>\r\n        <Box>\r\n          <Typography color=\"textPrimary\" variant=\"h5\">\r\n            Active Paper: id({activePaper.id}): {activePaper.name}\r\n          </Typography>\r\n        </Box>\r\n        <Box mt={3}>\r\n          <Result datas={papers} refreshPaper={getPapers} />\r\n        </Box>\r\n      </Container>\r\n    </Page>\r\n  )\r\n}\r\n\r\nexport default Papers\r\n","import React from 'react'\r\n\r\nconst p = { style: { margin: 8 } }\r\n\r\nexport const columns = [\r\n  {\r\n    title: 'Word',\r\n    dataIndex: 'word',\r\n    key: 'word',\r\n    render: text => <a>{text}</a>\r\n  },\r\n  {\r\n    title: 'Audio',\r\n    dataIndex: 'audio_url',\r\n    key: 'audio_url',\r\n    render: url => <a>{url ? 'yes' : 'no'}</a>\r\n  },\r\n  {\r\n    title: 'Translation',\r\n    dataIndex: 'translation',\r\n    key: 'translation'\r\n  },\r\n  {\r\n    title: 'Duration',\r\n    dataIndex: 'duration',\r\n    key: 'duration',\r\n    render: duration => <span>{duration / 1000}秒</span>\r\n  },\r\n  {\r\n    title: 'Action',\r\n    dataIndex: 'audio_url',\r\n    key: 'audio_url',\r\n    render: url => {\r\n      return <audio controls src={'/file/' + url} {...p} />\r\n    }\r\n  }\r\n]\r\n","import React, { useEffect, useState } from 'react'\r\nimport { Table } from 'antd'\r\nimport { columns } from './const'\r\nimport { toast } from 'react-toastify'\r\nimport api from 'api'\r\n\r\nconst Detail = props => {\r\n  const req = {\r\n    uid: parseInt(props.location.pathname.split('/').pop()),\r\n    paper_id: 1 // todo\r\n  }\r\n\r\n  const [answers, setAnswers] = useState([])\r\n\r\n  const getAnswers = () => {\r\n    api.QueryAnswers(req).then(res => {\r\n      if (!res.success) {\r\n        toast.error(res.info)\r\n      } else {\r\n        setAnswers(res.data)\r\n      }\r\n    })\r\n  }\r\n  // eslint-disable-next-line react-hooks/exhaustive-deps\r\n  useEffect(getAnswers, [])\r\n\r\n  return (\r\n    <>\r\n      <Table columns={columns} dataSource={answers} />\r\n    </>\r\n  )\r\n}\r\n\r\nexport default Detail\r\n","import React, { useEffect, useState } from 'react'\r\nimport Container from '@material-ui/core/Container'\r\nimport Typography from '@material-ui/core/Typography'\r\nimport Recorder from 'recorder-core'\r\nimport Button from '@material-ui/core/Button'\r\n\r\nconst defaultAudioConf = {\r\n  bitRate: 128, // kbps\r\n  sampleRate: 16000 // hz\r\n}\r\n\r\nconst InstructionPage = props => {\r\n  const [recordable, setRecordable] = useState(false)\r\n\r\n  const rec = Recorder({\r\n    type: 'mp3',\r\n    bitRate: defaultAudioConf.bitRate,\r\n    sampleRate: defaultAudioConf.sampleRate,\r\n    disableEnvInFix: false\r\n  })\r\n\r\n  useEffect(() => {\r\n    console.log('正在打开录音，请求麦克风权限...', props)\r\n    rec.open(\r\n      () => {\r\n        console.log('已打开录音，可以点击开始了')\r\n        rec.close()\r\n        setRecordable(true)\r\n      },\r\n      (msg, isUserNotAllow) => {\r\n        // 用户拒绝未授权或不支持\r\n        console.log((isUserNotAllow ? 'UserNotAllow，' : '') + '无法录音:' + msg)\r\n      }\r\n    )\r\n    // eslint-disable-next-line react-hooks/exhaustive-deps\r\n  }, [])\r\n\r\n  return (\r\n    <Container maxWidth=\"xs\">\r\n      <Typography component=\"h1\" variant=\"h5\">\r\n        Instructions:\r\n      </Typography>\r\n      <Typography component=\"span\" variant=\"body1\">\r\n        Please enable recording permission\r\n      </Typography>\r\n      <Button\r\n        fullWidth\r\n        disabled={!recordable}\r\n        variant=\"outlined\"\r\n        onClick={() => {\r\n          props.history.push('/demo')\r\n        }}\r\n      >\r\n        Agree And Proceed\r\n      </Button>\r\n    </Container>\r\n  )\r\n}\r\n\r\nexport default InstructionPage\r\n","import React, { lazy } from 'react'\r\nimport { Redirect, Route, Switch } from 'react-router-dom'\r\nimport InfoPage from 'containers/info'\r\nimport DemoPage from 'containers/demo'\r\nimport FinishPage from 'containers/finish'\r\nimport DashboardLayout from 'components/layouts/DashboardLayout'\r\nimport Dashboard from 'containers/admin/dashboard'\r\nimport Users from 'containers/admin/users'\r\nimport Settings from 'containers/admin/settings'\r\nimport Papers from 'containers/admin/papers'\r\nimport Detail from 'containers/admin/users/detail'\r\nimport InstructionPage from 'containers/instruction'\r\n\r\n// const LoginContainer = lazy(() => import('containers/login'))\r\nconst AdminLogin = lazy(() => import('containers/admin/login'))\r\n\r\nexport class Routes extends React.Component<any> {\r\n  render() {\r\n    return (\r\n      <>\r\n        <Switch>\r\n          <Redirect exact={true} from=\"/\" to=\"/info\" />\r\n          <Route path=\"/info\">\r\n            <InfoPage {...this.props} />\r\n          </Route>\r\n          <Route path=\"/instruction\">\r\n            <InstructionPage {...this.props} />\r\n          </Route>\r\n          <Route path=\"/demo\" component={DemoPage} />\r\n          <Route path=\"/finish\" component={FinishPage} />\r\n          <Redirect exact={true} from=\"/admin\" to=\"/admin/login\" />\r\n          <Route path=\"/admin/login\" component={AdminLogin} />\r\n          <Route path=\"/admin/dashboard\">\r\n            <DashboardLayout components={Dashboard} {...this.props} />\r\n          </Route>\r\n          <Route path=\"/admin/users\" exact>\r\n            <DashboardLayout components={Users} {...this.props} />\r\n          </Route>\r\n          <Route path=\"/admin/users/:uid\">\r\n            <DashboardLayout components={Detail} {...this.props} />\r\n          </Route>\r\n          <Route path=\"/admin/papers\">\r\n            <DashboardLayout components={Papers} {...this.props} />\r\n          </Route>\r\n          <Route path=\"/admin/settings\">\r\n            <DashboardLayout components={Settings} {...this.props} />\r\n          </Route>\r\n        </Switch>\r\n      </>\r\n    )\r\n  }\r\n}\r\n\r\nexport default Routes\r\n","import React, { Suspense } from 'react'\r\nimport { createBrowserHistory } from 'history'\r\nimport { Provider } from 'mobx-react'\r\nimport { RouterStore, syncHistoryWithStore } from 'mobx-react-router'\r\nimport RootStore from './stores/root'\r\nimport { Route, Router } from 'react-router-dom'\r\nimport Routes from './routes'\r\nimport CssBaseline from '@material-ui/core/CssBaseline'\r\nimport { ToastContainer } from 'react-toastify'\r\nimport 'react-toastify/dist/ReactToastify.css'\r\n\r\nconst browserHistory = createBrowserHistory()\r\nconst routingStore = new RouterStore()\r\nconst history = syncHistoryWithStore(browserHistory, routingStore)\r\n\r\nclass App extends React.Component {\r\n  public render() {\r\n    return (\r\n      <Suspense fallback={<div>Loading...</div>}>\r\n        <CssBaseline />\r\n        <ToastContainer\r\n          position=\"top-center\"\r\n          autoClose={5000}\r\n          hideProgressBar={false}\r\n          newestOnTop={false}\r\n          closeOnClick\r\n          rtl={false}\r\n          pauseOnFocusLoss\r\n          draggable\r\n          pauseOnHover\r\n        />\r\n        <Provider {...RootStore}>\r\n          <Router history={history}>\r\n            <Route component={Routes} />\r\n          </Router>\r\n        </Provider>\r\n      </Suspense>\r\n    )\r\n  }\r\n}\r\n\r\nexport default App\r\n","import React from 'react'\r\nimport ReactDOM from 'react-dom'\r\nimport './index.scss'\r\nimport './normalize.css'\r\nimport App from './App'\r\n\r\nReactDOM.render(<App />, document.getElementById('root'))\r\n"],"sourceRoot":""}