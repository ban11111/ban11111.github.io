{"version":3,"sources":["api/index.ts","api/req.ts","stores/root.ts","global/storage.tsx","containers/info/index.tsx","utils/emailCheck.js","containers/demo/index.js","containers/finish/index.jsx","components/layouts/DashboardLayout/NavBar/NavItem.js","components/layouts/DashboardLayout/NavBar/index.js","components/Logo.js","components/layouts/DashboardLayout/TopBar.js","components/layouts/DashboardLayout/index.js","components/Page.js","containers/admin/dashboard/Sales.js","containers/admin/dashboard/TasksProgress.js","containers/admin/dashboard/TotalCustomers.js","containers/admin/dashboard/TotalProfit.js","containers/admin/dashboard/TrafficByDevice.js","containers/admin/dashboard/index.js","containers/admin/users/Results.js","utils/getInitials.js","containers/admin/users/index.js","containers/admin/settings/Settings.js","containers/admin/settings/index.js","containers/admin/papers/data.js","containers/admin/papers/editor/editor.js","containers/admin/papers/result.js","containers/admin/papers/index.js","containers/admin/users/detail/const.js","containers/admin/users/detail/index.js","containers/instruction/index.js","routes/index.tsx","App.tsx","index.tsx"],"names":["request","wrapSend","requestFunc","type","a","res","data","response","success","info","status","setTimeout","sessionStorage","clear","window","location","replace","statusText","Api","down","download","url","body","post","responseType","signUp","payload","signIn","getBasicInfo","uploadAudio","adminLogin","queryPapers","addPaper","editPaper","QueryUsers","deleteUser","QueryAnswers","deleteAnswers","querySettings","updateSetting","this","http","getAPI","common","baseURL","headers","Token","getItem","axios","create","createRequest","storageSet","key","obj","setItem","JSON","stringify","Copyright","Typography","variant","color","align","Link","href","Date","getFullYear","useStyles","makeStyles","theme","createStyles","paper","marginTop","spacing","display","flexDirection","alignItems","avatar","margin","backgroundColor","palette","primary","light","form","width","submit","InfoPage","props","classes","useState","email","name","chinese_class","hks_level","ethnic_background","userInfo","setUserInfo","emailInvalid","setEmailInvalid","needSignUp","setNeedSignUp","onEdit","l","e","newUserInfo","currentTarget","value","test","Container","component","maxWidth","CssBaseline","className","Avatar","Box","Grid","container","item","xs","TextField","error","helperText","required","fullWidth","id","label","autoComplete","autoFocus","onChange","Button","onClick","toast","api","then","resp","user","history","push","user_not_exist","mt","Word","styled","Paper","fontSize","fontFamily","fontWeight","justifyContent","ValidationTextField","withStyles","root","borderColor","borderWidth","borderLeftWidth","padding","Progress","MobileStepper","flexGrow","defaultAudioConf","bitRate","sampleRate","Index","renderVisualization","style","height","uid","words","current_paper","split","RegExp","progress_index","length","setState","audioConf","global_setting","wordIndex","paper_info","paper_name","paper_version","version","paper_id","interval","begin","reRenderTimer","disableBodyScroll","recordButtonRef","current","wave","Recorder","WaveView","elem","beginTime","moment","uploadFile","blob","duration","next","formData","FormData","append","state","input","recStart","rec","disableEnvInFix","onProcess","buffers","powerLevel","bufferDuration","bufferSampleRate","open","start","set","console","log","msg","isUserNotAllow","mouseDown","recorded","document","onmouseup","mouseUp","recStop","warningPopUp","uploadLoop","translationRef","lastChild","firstChild","focus","touchUp","touchDown","playAndStop","audioPlayRef","play","timesUpTouchUp","onNext","timesUp","diff","uploadingLock","iv","setInterval","audioBlob","clearInterval","URL","revokeObjectURL","src","buttonDisabled","updateAudioConf","renderCountDown","isPlaying","size","strokeWidth","colors","green","A200","blue","red","onComplete","totalElapsedTime","remainingTime","renderWarningPopUp","Snackbar","anchorOrigin","vertical","horizontal","Alert","severity","createRef","flattenedObj","parse","storageGet","close","stop","createObjectURL","currentWord","recording","Backdrop","zIndex","CircularProgress","thickness","isMobile","IconButton","float","ref","onMouseDown","undefined","onTouchStart","onTouchEnd","onContextMenu","preventDefault","onMouseMove","position","bottom","border","steps","activeStep","nextButton","disabled","ThemeProvider","direction","Component","Finish","paddingTop","paddingBottom","button","text","secondary","typography","fontWeightMedium","letterSpacing","textTransform","icon","marginRight","title","active","main","NavItem","Icon","rest","ListItem","clsx","disableGutters","activeClassName","RouterLink","to","items","BarChartIcon","UsersIcon","BookIcon","SettingsIcon","mobileDrawer","desktopDrawer","top","cursor","NavBar","onMobileClose","openMobile","useLocation","useEffect","pathname","content","p","Divider","List","map","Hidden","lgUp","Drawer","anchor","onClose","mdDown","defaultProps","Logo","alt","TopBar","onMobileNavOpen","notifications","AppBar","elevation","Toolbar","Badge","badgeContent","background","dark","overflow","wrapper","flex","breakpoints","up","paddingLeft","contentContainer","DashboardLayout","isMobileNavOpen","setMobileNavOpen","components","Page","forwardRef","children","Helmet","Sales","useTheme","datasets","indigo","grey","labels","options","animation","cornerRadius","layout","legend","maintainAspectRatio","responsive","scales","xAxes","barThickness","maxBarThickness","barPercentage","categoryPercentage","ticks","fontColor","gridLines","drawBorder","yAxes","beginAtZero","min","borderDash","borderDashOffset","divider","zeroLineBorderDash","zeroLineBorderDashOffset","zeroLineColor","tooltips","default","bodyFontColor","enabled","footerFontColor","intersect","mode","titleFontColor","Card","CardHeader","action","endIcon","CardContent","orange","TasksProgress","justify","gutterBottom","LinearProgress","differenceIcon","differenceValue","TotalCustomers","TotalProfit","TrafficByDevice","white","hoverBorderColor","cutoutPercentage","devices","LaptopMacIcon","TabletIcon","PhoneIcon","textAlign","minHeight","Dashboard","lg","sm","xl","md","toolBar","marginBottom","columns","dataIndex","render","time","format","rowSelection","getCheckboxProps","Results","users","reload","filterUserName","setFilterUserName","deletePopInfo","setDeletePopInfo","handleReview","handleOpen","slice","v","toUpperCase","join","getInitials","ButtonGroup","handleClose","onSearchUser","InputProps","startAdornment","InputAdornment","SvgIcon","placeholder","minWidth","dataSource","filter","search","Dialog","DialogTitle","DialogContent","DialogContentText","DialogActions","warning","Users","setUsers","getUsers","defaultSettings","BitRate","SampleRate","SettingsContent","settings","setSettings","updated","setUpdated","popOpen","setPopOpen","handleChange","event","target","subheader","InputLabel","Select","labelId","MenuItem","InputLabelProps","shrink","prevState","aria-labelledby","aria-describedby","Settings","created_at","TextArea","flexWrap","chip","marginLeft","Editor","setWords","onClickExit","defaultValue","parseInt","autoSize","refreshPaper","datas","selectedCustomerIds","setSelectedCustomerIds","limit","setLimit","page","setPage","editProps","setEditProps","onClickEditExit","handleEditClicked","Table","TableHead","TableRow","TableCell","Checkbox","checked","indeterminate","newSelectedCustomerIds","customer","TableBody","index","hover","selected","indexOf","selectedIndex","concat","handleSelectOne","TablePagination","count","onChangePage","newPage","onChangeRowsPerPage","rowsPerPage","rowsPerPageOptions","Papers","papers","setPapers","activePaper","setActivePaper","addNew","setAddNew","getPapers","active_paper","controls","Detail","path","req","pop","answers","setAnswers","InstructionPage","recordable","setRecordable","AdminLogin","lazy","Routes","exact","from","DemoPage","FinishPage","React","browserHistory","createBrowserHistory","routingStore","RouterStore","syncHistoryWithStore","App","fallback","autoClose","hideProgressBar","newestOnTop","closeOnClick","rtl","pauseOnFocusLoss","draggable","pauseOnHover","RootStore","ReactDOM","getElementById"],"mappings":"6FAuFgBA,E,4DCnDHC,EAAQ,uCAAG,WAAUC,EAAyBC,GAAnC,qBAAAC,EAAA,+EAGFF,IAHE,OAGdG,EAHc,OAIZC,EAASD,EAATC,KACRC,EAAW,CACTC,UAASL,GAAcG,EAAKE,QAC5BC,KAAMH,EAAKG,KACXH,KAAMH,EAAOG,EAAOA,EAAKA,MARP,mDAWZA,EAAS,KAAIC,SAAbD,KACoB,MAAxB,KAAIC,SAASG,OAZG,wBAalBC,YAAW,WACTC,eAAeC,QACfC,OAAOC,SAASC,QAAQ,kBACvB,KAhBe,kBAiBX,CACLP,KAAM,yDACND,SAAS,IAnBO,WAsBQ,MAAxB,KAAID,SAASG,OAtBG,0CAuBX,CACLF,QAASF,EAAKE,QACdC,KAAMH,EAAKG,KACXH,KAAMA,IA1BU,QA6BpBC,EAAW,CACTC,QAASF,EAAKE,QACdC,KAAM,KAAIF,SAASG,OAAS,IAAM,KAAIH,SAASU,WAC/CX,KAAMA,GAhCY,iCAmCfC,GAnCe,yDAAH,wDDhCRW,EAIX,WAAYlB,GAAmB,IAAD,gCAH9BA,aAG8B,OAF9BmB,UAE8B,OAKtBC,SALsB,sBAKX,0CAAAhB,EAAA,6DAAgBiB,EAAhB,+BAAsB,GAAIC,EAA1B,+BAAsC,GAAtC,SACJrB,GAAY,WACvB,OAAO,EAAKD,QAAQuB,KAAeF,EAAKC,EAAM,CAAEE,aAAc,WAC7D,QAHc,mFALW,KAWtBD,KAXsB,sBAWf,0CAAAnB,EAAA,6DAAgBiB,EAAhB,+BAAsB,GAAIC,EAA1B,gCACArB,GAAY,WACvB,OAAO,EAAKD,QAAQuB,KAAeF,EAAKC,MAF7B,mFAXe,KAkB9BG,OAAS,SAACC,GACR,OAAO,EAAKH,KAAL,kBAA6BG,IAnBR,KAuB9BC,OAAS,SAACD,GACR,OAAO,EAAKH,KAAL,kBAA6BG,IAxBR,KA4B9BE,aAAe,SAACF,GACd,OAAO,EAAKH,KAAL,yBAAoCG,IA7Bf,KAiC9BG,YAAc,SAACH,GACb,OAAO,EAAKH,KAAL,iBAA4BG,IAlCP,KAsC9BI,WAAa,SAACJ,GACZ,OAAO,EAAKH,KAAL,sBAAiCG,IAvCZ,KA0C9BK,YAAc,WACZ,OAAO,EAAKR,KAAL,+BA3CqB,KA8C9BS,SAAW,SAACN,GACV,OAAO,EAAKH,KAAL,0BAAqCG,IA/ChB,KAkD9BO,UAAY,SAACP,GACX,OAAO,EAAKH,KAAL,2BAAsCG,IAnDjB,KAsD9BQ,WAAa,WACX,OAAO,EAAKX,KAAL,8BAvDqB,KA0D9BY,WAAa,SAACT,GACZ,OAAO,EAAKH,KAAL,4BAAuCG,IA3DlB,KA8D9BU,aAAe,SAACV,GACd,OAAO,EAAKH,KAAL,8BAAyCG,IA/DpB,KAkE9BW,cAAgB,SAACX,GACf,OAAO,EAAKH,KAAL,8BAAyCG,IAnEpB,KAsE9BY,cAAgB,WACd,OAAO,EAAKf,KAAL,iCAvEqB,KA0E9BgB,cAAgB,SAACb,GACf,OAAO,EAAKH,KAAL,+BAA0CG,IA1EjDc,KAAKxC,QAAUA,EAAQyC,KACvBD,KAAKrB,KAAOnB,EAAQmB,MA+ETuB,KAFC1C,EClEa,WAC3B,IAAM2C,EAAS,CACbC,QAAS,GACTC,QAAS,CACP,eAAgB,mBAChBC,MAAOlC,eAAemC,QAAQ,WAIlC,MAAO,CACLN,KAFeO,IAAMC,OAAON,GAG5BxB,KAAM6B,IAAMC,OAAN,eAAkBN,EAAlB,CAA0BnB,aAAc,WDyD5B0B,GAFe,IAAIhC,EAAIlB,K,iQErF9B,M,sLCCFmD,EAAa,SAACC,EAAaC,GACtCzC,eAAe0C,QAAQF,EAAKG,KAAKC,UAAUH,KCe7C,SAASI,IACP,OACE,kBAACC,EAAA,EAAD,CAAYC,QAAQ,QAAQC,MAAM,gBAAgBC,MAAM,UACrD,kBACD,kBAACC,EAAA,EAAD,CAAMF,MAAM,UAAUG,KAAK,4BAA3B,gBAEQ,KACP,IAAIC,MAAOC,cACX,KAKP,IAAMC,EAAYC,aAAW,SAACC,GAAD,OAC3BC,YAAa,CACXC,MAAO,CACLC,UAAWH,EAAMI,QAAQ,GACzBC,QAAS,OACTC,cAAe,SACfC,WAAY,UAEdC,OAAQ,CACNC,OAAQT,EAAMI,QAAQ,GACtBM,gBAAiBV,EAAMW,QAAQC,QAAQC,OAEzCC,KAAM,CACJC,MAAO,OACPZ,UAAWH,EAAMI,QAAQ,IAE3BY,OAAQ,CACNP,OAAQT,EAAMI,QAAQ,EAAG,EAAG,SAenB,SAASa,EAASC,GAC/B,IAAMC,EAAUrB,IAD2B,EAEXsB,mBAAS,CACvCC,MAAO,GACPC,KAAM,GACNC,cAAe,GACfC,UAAW,GACXC,kBAAmB,KAPsB,mBAEpCC,EAFoC,KAE1BC,EAF0B,OASHP,oBAAS,GATN,mBASpCQ,EAToC,KAStBC,EATsB,OAUPT,oBAAS,GAVF,mBAUpCU,EAVoC,KAUxBC,EAVwB,KAYrCC,EAAS,SAACC,GAAD,OAAc,SAACC,GAC5B,IC7EwBb,ED6ElBc,EAAwBT,EAC9BS,EAAYF,GAAKC,EAAEE,cAAcC,MACjCV,EAAYQ,GACF,UAANF,GACFJ,GCjFsBR,EDiFQa,EAAEE,cAAcC,OChFtC,8CACDC,KAAKjB,ODuHhB,OACE,kBAACkB,EAAA,EAAD,CAAWC,UAAU,OAAOC,SAAS,MACnC,kBAACC,EAAA,EAAD,MACA,yBAAKC,UAAWxB,EAAQjB,OACtB,kBAAC0C,EAAA,EAAD,CAAQD,UAAWxB,EAAQX,QACzB,kBAAC,IAAD,OAEF,kBAAClB,EAAA,EAAD,CAAYkD,UAAU,KAAKjD,QAAQ,MAAnC,kCAMA,kBAACsD,EAAA,EAAD,CAAKF,UAAWxB,EAAQL,MACtB,kBAACgC,EAAA,EAAD,CAAMC,WAAS,EAAC3C,QAAS,GACvB,kBAAC0C,EAAA,EAAD,CAAME,MAAI,EAACC,GAAI,IACb,kBAACC,EAAA,EAAD,CACEC,MAAOvB,EACPwB,WAAYxB,EAAe,wBAA0B,KACrDrC,QAAQ,WACR8D,UAAQ,EACRC,WAAS,EACTC,GAAG,QACHC,MAAM,gBACNlC,KAAK,QACLmC,aAAa,QACbC,WAAS,EACTC,SAAU3B,EAAO,UAEhBN,EAASL,QAGbS,GACC,oCACE,kBAACgB,EAAA,EAAD,CAAME,MAAI,EAACC,GAAI,IACb,kBAACC,EAAA,EAAD,CACE5B,KAAK,OACL/B,QAAQ,WACR8D,UAAQ,EACRC,WAAS,EACTC,GAAG,OACHC,MAAM,OACNC,aAAa,OACbE,SAAU3B,EAAO,SAEhBN,EAASJ,OAGd,kBAACwB,EAAA,EAAD,CAAME,MAAI,EAACC,GAAI,IACb,kBAACC,EAAA,EAAD,CACE3D,QAAQ,WACR8D,UAAQ,EACRC,WAAS,EACTC,GAAG,eACHC,MAAM,gBACNlC,KAAK,eACLqC,SAAU3B,EAAO,kBAEhBN,EAASH,gBAGd,kBAACuB,EAAA,EAAD,CAAME,MAAI,EAACC,GAAI,IACb,kBAACC,EAAA,EAAD,CACE3D,QAAQ,WACR8D,UAAQ,EACRC,WAAS,EACTC,GAAG,WACHC,MAAM,YACNlC,KAAK,WACLqC,SAAU3B,EAAO,cAEhBN,EAASF,YAGd,kBAACsB,EAAA,EAAD,CAAME,MAAI,EAACC,GAAI,IACb,kBAACC,EAAA,EAAD,CACE3D,QAAQ,WACR8D,UAAQ,EACRC,WAAS,EACTC,GAAG,mBACHC,MAAM,oCACNlC,KAAK,mBACLqC,SAAU3B,EAAO,sBAEhBN,EAASD,sBAMpB,kBAACmC,EAAA,EAAD,CACE7H,KAAK,SACLuH,WAAS,EACT/D,QAAQ,YACRC,MAAM,UACNmD,UAAWxB,EAAQH,OACnB6C,QAAS/B,EApIJ,WACTF,EACFkC,IAAMX,MAAM,2BAGdY,IAAI1G,OAAOqE,GAAUsC,MAAK,SAAAC,GACnBA,EAAK7H,SAGR2C,ED9FmB,YC8FKkF,EAAK/H,KAAKgI,MAClChD,EAAMiD,QAAQC,KAAK,iBAHnBN,IAAMX,MAAM,gBAAQc,EAAK5H,UAQhB,WACTuF,EACFkC,IAAMX,MAAM,2BAGdY,IAAIxG,OAAO,CAAE8D,MAAOK,EAASL,QAAS2C,MAAK,SAAAC,GACpCA,EAAK7H,QAIJ6H,EAAK/H,KAAKmI,eACZtC,GAAc,IAEd+B,IAAMzH,KAAK,wBAAgB4H,EAAK/H,KAAKgI,KAAK5C,MAC1CvC,EDlHiB,YCkHOkF,EAAK/H,KAAKgI,MAClChD,EAAMiD,QAAQC,KAAK,iBAPrBN,IAAMX,MAAM,gBAAQc,EAAK5H,WA+GpByF,EAAa,UAAY,aAiBhC,kBAACe,EAAA,EAAD,CAAKyB,GAAI,GACP,kBAACjF,EAAD,Q,uSE7MFkF,GAAOC,YAAOC,IAAPD,CAAc,CACzBE,SAAU,YACVC,WAAY,UACZC,WAAY,OACZvE,QAAS,OACTE,WAAY,SACZsE,eAAgB,WAGZC,GAAsBC,YAAW,CACrCC,KAAM,CACJ7E,UAAW,GACX,2BAA4B,CAC1B8E,YAAa,QACbC,YAAa,GAEf,6BAA8B,CAC5BD,YAAa,YACbC,YAAa,GAEf,iCAAkC,CAChCC,gBAAiB,EACjBC,QAAS,oBAbaL,CAgBzB7B,KAEGmC,GAAWb,YAAOc,IAAPd,CAAsB,CACrCQ,KAAM,CACJvC,SAAU,IACV8C,SAAU,KAIRC,GAAmB,CACvBC,QAAS,IACTC,WAAY,MAGOC,G,kDACnB,WAAYzE,GAAQ,IAAD,8BACjB,cAAMA,IAqCR0E,oBAAsB,WACpB,OAAO,yBAAKC,MAAO,CAAEC,OAAQ,QAAUnD,UAAU,cAvChC,EA0CnBnF,aAAe,WACbuG,IAAIvG,aAAa,CAAEuI,IAAK,EAAKrE,SAAS6B,KAAMS,MAAK,SAAA/H,GAC/C,GAAKA,EAAIG,QAEF,CAEL,IAAM4J,EAAQ/J,EAAIC,KAAK+J,cAAcD,MAAME,MAAMC,OAAO,aACxD,GAAIlK,EAAIC,KAAKkK,gBAAkBJ,EAAMK,OAAS,EAM5C,OALAvC,IAAMzH,KACJ,yIAGF,EAAK6E,MAAMiD,QAAQC,KAAK,WAG1B,EAAKkC,SACH,CACEC,UAAW,CACTd,QAASxJ,EAAIC,KAAKsK,eAAT,QACTd,WAAYzJ,EAAIC,KAAKsK,eAAT,YAEdC,UAAWxK,EAAIC,KAAKkK,eAAiB,EACrCJ,MAAOA,EACPU,WAAY,CACVC,WAAY1K,EAAIC,KAAK+J,cAAc3E,KACnCsF,cAAe3K,EAAIC,KAAK+J,cAAcY,QACtCC,SAAU7K,EAAIC,KAAK+J,cAAc1C,GACjCwD,SAAU9K,EAAIC,KAAK+J,cAAcc,UAEnCC,OAAO,EACPC,eAAe,IAEjB,WACE,EAAKX,SAAS,CAAEW,eAAe,IAC/BC,aAAkB,EAAKC,gBAAgBC,SACvC,EAAKC,KAAOC,IAASC,SAAS,CAAEC,KAAM,iBAG1C,EAAKC,UAAYC,YAnCjB5D,IAAMX,MAAMlH,EAAII,UA7CH,EAwGnBsL,WAAa,SAACC,EAAMC,EAAUC,GAC5B,IAAMC,EAAW,IAAIC,SACjBJ,GACFG,EAASE,OAAO,SAAUL,EAAMC,EAAW,QAE7CE,EAASE,OAAO,WAAY,OAC5BF,EAASE,OAAO,aAAc,EAAKC,MAAMxB,WAAWC,YACpDoB,EAASE,OAAO,gBAAiB,EAAKC,MAAMxB,WAAWE,eACvDmB,EAASE,OAAO,WAAY,EAAKC,MAAMxB,WAAWI,SAAW,IAC7DiB,EAASE,OAAO,MAAO,EAAKvG,SAAS6B,IACrCwE,EAASE,OAAO,aAAc,EAAKC,MAAMzB,WACzCsB,EAASE,OAAO,OAAQ,EAAKC,MAAMlC,MAAM,EAAKkC,MAAMzB,YACpDsB,EAASE,OAAO,cAAe,EAAKC,MAAMC,OAC1CJ,EAASE,OAAO,WAAYJ,GAC5B9D,IAAItG,YAAYsK,GAAU/D,MAAK,SAAAC,GACxBA,EAAK7H,QAGR0L,IAFAhE,IAAMX,MAAMc,EAAK5H,KAAO,8DAxHX,EA+HnB+L,SAAW,WACT,EAAKC,IAAMf,IAAS,CAClBvL,KAAM,MACN0J,QAAS,EAAKyC,MAAM3B,UAAUd,QAC9BC,WAAY,EAAKwC,MAAM3B,UAAUb,WACjC4C,iBAAiB,EACjBC,UAAW,SAACC,EAASC,EAAYC,EAAgBC,GAC/C,EAAKtB,KAAKc,MAAMK,EAAQA,EAAQnC,OAAS,GAAIoC,EAAYE,MAG7D,EAAKN,IAAIO,MACP,WACE,EAAKP,IAAIQ,QACT,IAAMC,EAAM,EAAKT,IAAIS,IACrBC,QAAQC,IAAI,2BAASF,EAAI/M,KAAO,IAAM+M,EAAIpD,WAAa,MAAQoD,EAAIrD,QAAU,WAE/E,SAACwD,EAAKC,GACJH,QAAQC,KAAKE,EAAiB,qBAAkB,IAAM,4BAAUD,EAAK,OAhJxD,EAoKnBE,UAAY,WACV,EAAKC,UAAW,EAChB,EAAK9C,SAAS,CAAEhK,OAAQ,cACxB,EAAK8L,WACLiB,SAASC,UAAY,EAAKC,SAxKT,EA2KnBA,QAAU,WACRF,SAASC,UAAY,KACrB,EAAKE,UAED,EAAKtB,MAAMuB,aACb,EAAKC,WAA4C,IAAjC,EAAKxB,MAAMxB,WAAWK,UAEtC,EAAK4C,eAAevC,QAAQwC,UAAUC,WAAWC,QAEnD,EAAKxD,SAAS,CAAEhK,OAAQ,UAAWmN,cAAc,KApLhC,EAuLnBM,QAAU,WACR,EAAKP,UAED,EAAKtB,MAAMuB,aACb,EAAKC,WAA4C,IAAjC,EAAKxB,MAAMxB,WAAWK,UAEtC,EAAK4C,eAAevC,QAAQwC,UAAUC,WAAWC,QAEnD,EAAKxD,SAAS,CAAEhK,OAAQ,UAAWmN,cAAc,KA/LhC,EAkMnBO,UAAY,WACV,EAAKZ,UAAW,EAChB,EAAK9C,SAAS,CAAEhK,OAAQ,cACxB,EAAK8L,YArMY,EAwMnB6B,YAAc,WACZ,EAAKC,aAAa9C,QAAQ+C,QAzMT,EA4MnBC,eAAiB,SAAAvC,GAAQ,OAAI,WAC3BwB,SAASC,UAAY,KACrB,EAAKI,WAAW7B,GAChB,EAAKvB,SAAS,CAAEhK,OAAQ,UAAWmN,cAAc,MA/MhC,EAkNnBY,OAAS,SAAAC,GAAO,OAAI,WAClB,IAAMzC,EAAWyC,EAA2C,IAAjC,EAAKpC,MAAMxB,WAAWK,SAAkBW,OAAS6C,KAAK,EAAK9C,UAAW,gBAC7F6C,GAAiC,cAAtB,EAAKpC,MAAM5L,QACxB+M,SAASC,UAAY,EAAKc,eAAevC,GACzC,EAAKvB,SAAS,CAAEmD,cAAc,IAC9B,EAAKD,WAEL,EAAKE,WAAW7B,KAzND,EA6NnB6B,WAAa,SAAA7B,GACX,EAAKvB,SAAS,CAAEkE,eAAe,IAC/B,IAAMC,EAAKC,aAAY,WACjB,EAAKtB,WAAa,EAAKuB,YAG3BC,cAAcH,GACd,EAAKrB,UAAW,EAChB,EAAKzB,WAAW,EAAKgD,UAAW9C,GAAU,WACxCnL,OAAOmO,IAAIC,gBAAgB,EAAK5C,MAAM6C,KAClC,EAAK7C,MAAMzB,WAAa,EAAKyB,MAAMlC,MAAMK,OAAS,EACpD,EAAKnF,MAAMiD,QAAQC,KAAK,YAG1B,EAAKuG,UAAY,KACjB,EAAKrE,SACH,CACEG,UAAW,EAAKyB,MAAMzB,UAAY,EAClCQ,eAAe,EACf8D,IAAK,GACL5C,MAAO,GACPqC,eAAe,EACfQ,gBAAgB,IAElB,WACE,EAAKvD,UAAYC,OACjB,EAAKpB,SAAS,CAAEW,eAAe,OAGnC1K,YAAW,WACT,EAAK+J,SAAS,CAAE0E,gBAAgB,MAC/B,YAEJ,MA9Pc,EAiQnBC,gBAAkB,SAACvF,EAAYD,GAC7B,EAAKa,SAAS,CAAEC,UAAW,CAAEb,WAAYA,EAAYD,QAASA,MAlQ7C,EAqQnByF,gBAAkB,SAAAzE,GAChB,OACE,kBAAC,uBAAD,CACE0E,WAAY,EAAKjD,MAAMsC,cACvB3C,SAAU,EAAKK,MAAMxB,WAAWK,SAChCqE,KAAM,GACNC,YAAa,EACbC,OAAQ,CACN,CAACC,IAAMC,KAAM,KACb,CAACC,IAAK,KAAQ,KACd,CAACC,IAAI,KAAQ,MAEfC,WAAY,SAAAC,GACV7C,QAAQC,IAAI4C,EAAkBnF,EAAW,eACzC,EAAK4D,QAAO,EAAZ,MAGD,YAAwB,IAArBwB,EAAoB,EAApBA,cAMF,OALsB,IAAlBA,GACFtP,YAAW,WACT,EAAK+J,SAAS,CAAE0E,gBAAgB,MAC/B,KAEE,yBAAKnF,MAAO,CAAEnB,SAAU,aAAemH,OA5RnC,EAkSnBC,mBAAqB,WACnB,OACE,kBAACC,EAAA,EAAD,CAAUnD,KAAM,EAAKV,MAAMuB,aAAcuC,aAAc,CAAEC,SAAU,MAAOC,WAAY,WACpF,kBAACC,GAAA,EAAD,CAAOC,SAAS,WAAhB,gEAnSJ,EAAKlE,MAAQ,CACXlB,OAAO,EACP1K,OAAQ,OACRyO,IAAK,GACL5C,MAAO,GACP5B,UAAWf,GACXiB,UAAW,EACXQ,eAAe,EACfjB,MAAO,CAAC,KACRyD,cAAc,EACde,eAAe,EACfQ,gBAAgB,EAChBtE,WAAY,CACVC,WAAY,GACZC,cAAe,GACfE,SAAU,EACVC,SAAU,KAGd,EAAKqC,UAAW,EAChB,EAAKuB,UAAY,KACjB,EAAKhB,eAAiB0C,sBACtB,EAAKnC,aAAemC,sBACpB,EAAKlF,gBAAkBkF,sBACvB,EAAKhE,IAAMf,IAAS,CAClBvL,KAAM,MACN0J,QAASD,GAAiBC,QAC1BC,WAAYF,GAAiBE,WAC7B4C,iBAAiB,EACjBC,UAAW,SAACC,EAASC,EAAYC,EAAgBC,GAC/C,EAAKtB,KAAKc,MAAMK,EAAQA,EAAQnC,OAAS,GAAIoC,EAAYE,MAG7D,EAAKjH,SHpGiB,SAAC1C,GACzB,IAAMsN,EAAe9P,eAAemC,QAAQK,GAC5C,OAAKsN,EAGEnN,KAAKoN,MAAMD,GAFT,KGiGSE,CH3GO,aGwEN,E,gEAqFE,IAAD,OACG,MAAjBpO,KAAKsD,UAITtD,KAAKZ,eACLY,KAAKiK,IAAIO,MACP,WACE,EAAKvB,KAAOC,IAASC,SAAS,CAAEC,KAAM,cACtC,EAAKa,IAAIoE,WAEX,SAACxD,EAAKC,GACJA,EACIpF,IAAMX,MAAM,mEACZW,IAAMX,MAAM,kEAAoE8F,OAZtF7K,KAAK8C,MAAMiD,QAAQC,KAAK,W,gCA8DjB,IAAD,OACRhG,KAAKiK,IAAIqE,MACP,SAAC9E,EAAMC,GACL,EAAKQ,IAAIoE,QACT1D,QAAQC,IAAI,mBAAoBnB,GAChC,EAAK8C,UAAY/C,EACjB,EAAKtB,SAAS,CAAEyE,IAAKrO,OAAOmO,IAAI8B,gBAAgB/E,QAElD,SAAAqB,GACEF,QAAQC,IAAI,4BAAUC,EAAK,GAC3B,EAAKZ,IAAIoE,a,+BA2IL,IAAD,SACwFrO,KAAK8J,MAA5FlB,EADD,EACCA,MAAO1K,EADR,EACQA,OAAQyO,EADhB,EACgBA,IAAK/E,EADrB,EACqBA,MAAOS,EAD5B,EAC4BA,UAAWQ,EADvC,EACuCA,cAAeuD,EADtD,EACsDA,cAAeQ,EADrE,EACqEA,eACtE4B,EAAc5G,EAAMS,GACpBoG,EAAuB,cAAXvQ,EAElB,OACE,kBAACiG,EAAA,EAAD,CAAWE,SAAS,KAAKE,UAAU,aACjC,kBAACmK,EAAA,EAAD,CAAUlE,MAAO5B,GAASwD,EAAe3E,MAAO,CAAEkH,OAAQ,OACxD,kBAACC,EAAA,EAAD,CAAkBxN,MAAM,UAAU4L,KAAM,IAAK6B,UAAW,KAEzD7O,KAAK0N,qBACN,kBAAChJ,EAAA,EAAD,CAAMC,WAAS,EAAC3C,QAAS,EAAGG,WAAY,UACtC,kBAACuC,EAAA,EAAD,CAAME,MAAI,EAACC,GAAI,IACb,0BAAM4C,MAAO,CAAErG,MAAO,QAAtB,qCACA,0BAAMqG,MAAO,CAAErG,MAAO,MAAOkF,SAAU,UAAYwI,YAAW,MAAQ,OAExE,kBAACpK,EAAA,EAAD,CAAME,MAAI,EAACC,GAAI,GAAI4C,MAAO,CAAExF,QAAS,OAAQwE,eAAgB,YACzDoC,GAAiB7I,KAAK8M,gBAAgBzE,IAE1C,kBAAC3D,EAAA,EAAD,CAAME,MAAI,EAACC,GAAI,IACb,6BACE,kBAACsB,GAAD,KAAOqI,KAGX,kBAAC9J,EAAA,EAAD,CAAME,MAAI,EAACC,GAAI,IACZ7E,KAAKwH,uBAER,kBAAC9C,EAAA,EAAD,CAAME,MAAI,EAACC,GAAI,GACb,kBAACkK,EAAA,EAAD,CAAY3N,MAAM,UAAUD,QAAQ,WAAWsE,QAASzF,KAAK6L,YAAapE,MAAO,CAAEuH,MAAO,UACxF,kBAAC,KAAD,CAAuBvH,MAAO,CAAEnB,SAAU,QAG9C,2BAAO2I,IAAKjP,KAAK8L,aAAca,IAAKA,IACpC,kBAACjI,EAAA,EAAD,CAAME,MAAI,EAACC,GAAI,IACb,kBAAC6B,GAAD,CACEuI,IAAKjP,KAAKuL,eACVnG,MAAM,yBACNF,WAAS,EACTD,UAAQ,EACRI,aAAa,MACblE,QAAQ,WACRgE,GAAG,4BACHlB,MAAOjE,KAAK8J,MAAMC,MAClBxE,SAAU,SAAAzB,GACR,EAAKoE,SAAS,CAAE6B,MAAOjG,EAAEE,cAAcC,YAI7C,kBAACS,EAAA,EAAD,CAAME,MAAI,EAACC,GAAI,GAAI4C,MAAO,CAAExF,QAAS,OAAQwE,eAAgB,WAC3D,kBAACsI,EAAA,EAAD,CACE5N,QAAQ,QACR8N,IAAKjP,KAAK+I,gBACVxE,UAAU,SACV2K,YAAaJ,iBAAWK,EAAYnP,KAAK+K,UACzCqE,aAAcpP,KAAK4L,UACnByD,WAAYrP,KAAK2L,QACjB2D,cAAe,SAAAxL,GACbA,EAAEyL,kBAEJC,YAAa,SAAA1L,GACXA,EAAEyL,kBAEJvC,KAAK,SACL5L,MAAOqN,EAAY,UAAY,UAC/BhH,MAAO,CAAEgI,SAAU,WAAYC,OAAQ,GAAIC,OAAQ,gBAEnD,kBAAC,KAAD,CAASlI,MAAO,CAAEnB,SAAU,QAGhC,kBAAC5B,EAAA,EAAD,CAAME,MAAI,EAACC,GAAI,GAAI4C,MAAO,CAAExF,QAAS,OAAQwE,eAAgB,WAE3D,kBAAChC,EAAA,EAAD,CAAKgL,SAAS,WAAWC,OAAQ,EAAGnL,UAAU,0BAA0B5B,MAAM,QAC5E,kBAACsE,GAAD,CACE9F,QAAQ,WACRyO,MAAOhI,EAAMK,OACbwH,SAAS,SACTI,WAAYxH,EACZyH,WACE,kBAACtK,EAAA,EAAD,CAAQwH,KAAK,QAAQvH,QAASzF,KAAKiM,SAAU8D,SAAUnD,GACpDvE,EAAYT,EAAMK,OAAS,EAAI,OAAS,SACZ,QAA5B+H,IAAcC,UAAsB,kBAAC,IAAD,MAAwB,kBAAC,KAAD,iB,GA3X9CC,aC1DpBC,GAVA,WACb,OACE,kBAAChM,EAAA,EAAD,KACE,kBAACjD,EAAA,EAAD,CAAYkD,UAAU,KAAKjD,QAAQ,MAAnC,0B,8HCAAO,GAAYC,aAAW,SAAAC,GAAK,MAAK,CACrCgD,KAAM,CACJ3C,QAAS,OACTmO,WAAY,EACZC,cAAe,GAEjBC,OAAQ,CACNlP,MAAOQ,EAAMW,QAAQgO,KAAKC,UAC1BhK,WAAY5E,EAAM6O,WAAWC,iBAC7BjK,eAAgB,aAChBkK,cAAe,EACf3J,QAAS,WACT4J,cAAe,OACfjO,MAAO,QAETkO,KAAM,CACJC,YAAalP,EAAMI,QAAQ,IAE7B+O,MAAO,CACLD,YAAa,QAEfE,OAAQ,CACN5P,MAAOQ,EAAMW,QAAQC,QAAQyO,KAC7B,WAAY,CACVzK,WAAY5E,EAAM6O,WAAWC,kBAE/B,UAAW,CACTtP,MAAOQ,EAAMW,QAAQC,QAAQyO,WAyBpBC,GApBC,SAAC,GAAqD,IAAnD3M,EAAkD,EAAlDA,UAAWhD,EAAuC,EAAvCA,KAAY4P,EAA2B,EAAjCN,KAAYE,EAAqB,EAArBA,MAAUK,EAAW,oDAC7DrO,EAAUrB,KAEhB,OACE,kBAAC2P,GAAA,EAAD,eAAU9M,UAAW+M,aAAKvO,EAAQ6B,KAAML,GAAYgN,gBAAc,GAAKH,GACrE,kBAAC5L,EAAA,EAAD,CAAQgM,gBAAiBzO,EAAQiO,OAAQzM,UAAWxB,EAAQuN,OAAQlM,UAAWqN,KAAYC,GAAInQ,GAC5F4P,GAAQ,kBAACA,EAAD,CAAM5M,UAAWxB,EAAQ8N,KAAM7D,KAAK,OAC7C,0BAAMzI,UAAWxB,EAAQgO,OAAQA,MChCnCjL,GACI,sCADJA,GAEM,iBAFNA,GAGE,YAGF6L,GAAQ,CACZ,CACEpQ,KAAM,mBACNsP,KAAMe,KACNb,MAAO,aAET,CACExP,KAAM,eACNsP,KAAMgB,KACNd,MAAO,SAET,CACExP,KAAM,gBACNsP,KAAMiB,KACNf,MAAO,UAET,CACExP,KAAM,kBACNsP,KAAMkB,KACNhB,MAAO,aAILrP,GAAYC,aAAW,iBAAO,CAClCqQ,aAAc,CACZrP,MAAO,KAETsP,cAAe,CACbtP,MAAO,IACPuP,IAAK,GACLxK,OAAQ,qBAEVtF,OAAQ,CACN+P,OAAQ,UACRxP,MAAO,GACP+E,OAAQ,QAIN0K,GAAS,SAAC,GAAmC,IAAjCC,EAAgC,EAAhCA,cAAeC,EAAiB,EAAjBA,WACzBvP,EAAUrB,KACVnD,EAAWgU,cAEjBC,qBAAU,WACJF,GAAcD,GAChBA,MAGD,CAAC9T,EAASkU,WAEb,IAAMC,EACJ,kBAACjO,EAAA,EAAD,CAAKiD,OAAO,OAAOzF,QAAQ,OAAOC,cAAc,UAC9C,kBAACuC,EAAA,EAAD,CAAKtC,WAAW,SAASF,QAAQ,OAAOC,cAAc,SAASyQ,EAAG,GAChE,kBAACnO,EAAA,EAAD,CAAQD,UAAWxB,EAAQX,OAAQgC,UAAWqN,KAAY9E,IAAK7G,GAAa4L,GAAG,qBAC/E,kBAACxQ,EAAA,EAAD,CAAYqD,UAAWxB,EAAQG,KAAM9B,MAAM,cAAcD,QAAQ,MAC9D2E,IAEH,kBAAC5E,EAAA,EAAD,CAAYE,MAAM,gBAAgBD,QAAQ,SACvC2E,KAGL,kBAAC8M,GAAA,EAAD,MACA,kBAACnO,EAAA,EAAD,CAAKkO,EAAG,GACN,kBAACE,GAAA,EAAD,KACGlB,GAAMmB,KAAI,SAAAlO,GAAI,OACb,kBAAC,GAAD,CAASrD,KAAMqD,EAAKrD,KAAMX,IAAKgE,EAAKmM,MAAOA,MAAOnM,EAAKmM,MAAOF,KAAMjM,EAAKiM,YAI/E,kBAACpM,EAAA,EAAD,CAAK0C,SAAU,KAInB,OACE,oCACE,kBAAC4L,GAAA,EAAD,CAAQC,MAAI,GACV,kBAACC,GAAA,EAAD,CACEC,OAAO,OACPnQ,QAAS,CAAEjB,MAAOiB,EAAQiP,cAC1BmB,QAASd,EACT7H,KAAM8H,EACNnR,QAAQ,aAEPuR,IAGL,kBAACK,GAAA,EAAD,CAAQK,QAAM,GACZ,kBAACH,GAAA,EAAD,CAAQC,OAAO,OAAOnQ,QAAS,CAAEjB,MAAOiB,EAAQkP,eAAiBzH,MAAI,EAACrJ,QAAQ,cAC3EuR,MAYXN,GAAOiB,aAAe,CACpBhB,cAAe,aACfC,YAAY,GAGCF,U,6FCtHAkB,GAJF,SAAAxQ,GACX,OAAO,uCAAKyQ,IAAI,OAAO5G,IAAI,oBAAuB7J,KCO9CpB,GAAYC,aAAW,iBAAO,CAClCiF,KAAM,GACNxE,OAAQ,CACNO,MAAO,GACP+E,OAAQ,QAwCG8L,GApCA,SAAC,GAA6C,IAA3CjP,EAA0C,EAA1CA,UAAWkP,EAA+B,EAA/BA,gBAAoBrC,EAAW,gDACpDrO,EAAUrB,KAD0C,EAElCsB,mBAAS,IAA1B0Q,EAFmD,oBAI1D,OACE,kBAACC,GAAA,EAAD,eAAQpP,UAAW+M,aAAKvO,EAAQ6D,KAAMrC,GAAYqP,UAAW,GAAOxC,GAClE,kBAACyC,GAAA,EAAD,KACE,kBAAC,KAAD,CAAYnC,GAAG,KACb,kBAAC,GAAD,OAEF,kBAACjN,EAAA,EAAD,CAAK0C,SAAU,IACf,kBAAC4L,GAAA,EAAD,CAAQK,QAAM,GACZ,kBAACrE,EAAA,EAAD,CAAY3N,MAAM,WAChB,kBAAC0S,GAAA,EAAD,CAAOC,aAAcL,EAAczL,OAAQ7G,MAAM,UAAUD,QAAQ,OACjE,kBAAC,KAAD,QAGJ,kBAAC4N,EAAA,EAAD,CAAY3N,MAAM,WAChB,kBAAC,KAAD,QAGJ,kBAAC2R,GAAA,EAAD,CAAQC,MAAI,GACV,kBAACjE,EAAA,EAAD,CAAY3N,MAAM,UAAUqE,QAASgO,GACnC,kBAAC,KAAD,WCpCN/R,GAAYC,aAAW,SAAAC,GAAK,MAAK,CACrCgF,KAAM,CACJtE,gBAAiBV,EAAMW,QAAQyR,WAAWC,KAC1ChS,QAAS,OACTyF,OAAQ,OACRwM,SAAU,SACVvR,MAAO,QAETwR,QAAQ,cACNlS,QAAS,OACTmS,KAAM,WACNF,SAAU,SACV9D,WAAY,IACXxO,EAAMyS,YAAYC,GAAG,MAAQ,CAC5BC,YAAa,MAGjBC,iBAAkB,CAChBvS,QAAS,OACTmS,KAAM,WACNF,SAAU,UAEZxB,QAAS,CACP0B,KAAM,WACN1M,OAAQ,OACRwM,SAAU,YAuBCO,GAnBS,SAAA3R,GACtB,IAAMC,EAAUrB,KADe,EAEasB,oBAAS,GAFtB,mBAExB0R,EAFwB,KAEPC,EAFO,KAI/B,OACE,yBAAKpQ,UAAWxB,EAAQ6D,MACtB,kBAAC,GAAD,CAAQ6M,gBAAiB,kBAAMkB,GAAiB,MAChD,kBAAC,GAAD,CAAQtC,cAAe,kBAAMsC,GAAiB,IAAQrC,WAAYoC,IAClE,yBAAKnQ,UAAWxB,EAAQoR,SACtB,yBAAK5P,UAAWxB,EAAQyR,kBACtB,yBAAKjQ,UAAWxB,EAAQ2P,SACtB,kBAAC5P,EAAM8R,WAAe9R,Q,UCzBnB+R,GAhBFC,sBAAW,WAAoC7F,GAAS,IAA1C8F,EAAyC,EAAzCA,SAAyC,IAA/BhE,aAA+B,MAAvB,GAAuB,EAAhBK,EAAgB,qCAClE,OACE,uCAAKnC,IAAKA,GAASmC,GACjB,kBAAC4D,GAAA,EAAD,KACE,+BAAQjE,IAETgE,M,oGCJDrT,GAAYC,aAAW,iBAAO,CAClCiF,KAAM,OAoHOqO,GAjHD,SAAAnS,GACZ,IAAMC,EAAUrB,KACVE,EAAQsT,eAERpX,EAAO,CACXqX,SAAU,CACR,CACE7S,gBAAiB4K,KAAOkI,OAAO,KAC/BtX,KAAM,CAAC,GAAI,EAAG,GAAI,GAAI,GAAI,GAAI,IAC9BsH,MAAO,aAET,CACE9C,gBAAiB4K,KAAOmI,KAAK,KAC7BvX,KAAM,CAAC,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,IAC/BsH,MAAO,cAGXkQ,OAAQ,CAAC,QAAS,QAAS,QAAS,QAAS,QAAS,UAGlDC,EAAU,CACdC,WAAW,EACXC,aAAc,GACdC,OAAQ,CAAE1O,QAAS,GACnB2O,OAAQ,CAAE1T,SAAS,GACnB2T,qBAAqB,EACrBC,YAAY,EACZC,OAAQ,CACNC,MAAO,CACL,CACEC,aAAc,GACdC,gBAAiB,GACjBC,cAAe,GACfC,mBAAoB,GACpBC,MAAO,CACLC,UAAWzU,EAAMW,QAAQgO,KAAKC,WAEhC8F,UAAW,CACTrU,SAAS,EACTsU,YAAY,KAIlBC,MAAO,CACL,CACEJ,MAAO,CACLC,UAAWzU,EAAMW,QAAQgO,KAAKC,UAC9BiG,aAAa,EACbC,IAAK,GAEPJ,UAAW,CACTK,WAAY,CAAC,GACbC,iBAAkB,CAAC,GACnBxV,MAAOQ,EAAMW,QAAQsU,QACrBN,YAAY,EACZO,mBAAoB,CAAC,GACrBC,yBAA0B,CAAC,GAC3BC,cAAepV,EAAMW,QAAQsU,YAKrCI,SAAU,CACR3U,gBAAiBV,EAAMW,QAAQyR,WAAWkD,QAC1CC,cAAevV,EAAMW,QAAQgO,KAAKC,UAClC3J,YAAajF,EAAMW,QAAQsU,QAC3B/P,YAAa,EACbsQ,SAAS,EACTC,gBAAiBzV,EAAMW,QAAQgO,KAAKC,UACpC8G,WAAW,EACXC,KAAM,QACNC,eAAgB5V,EAAMW,QAAQgO,KAAK/N,UAIvC,OACE,kBAACiV,GAAA,EAAD,CAAMlT,UAAWxB,EAAQ6D,MACvB,kBAAC8Q,GAAA,EAAD,CACEC,OACE,kBAACnS,EAAA,EAAD,CAAQoS,QAAS,kBAAC,KAAD,MAAuB5K,KAAK,QAAQ7L,QAAQ,QAA7D,eAIF4P,MAAM,iBAER,kBAAC6B,GAAA,EAAD,MACA,kBAACiF,GAAA,EAAD,KACE,kBAACpT,EAAA,EAAD,CAAKiD,OAAQ,IAAK+H,SAAS,YACzB,kBAAC,OAAD,CAAK3R,KAAMA,EAAMyX,QAASA,MAG9B,kBAAC3C,GAAA,EAAD,MACA,kBAACnO,EAAA,EAAD,CAAKxC,QAAQ,OAAOwE,eAAe,WAAWkM,EAAG,GAC/C,kBAACnN,EAAA,EAAD,CACEpE,MAAM,UACNwW,QAAS,kBAAC,KAAD,MACT5K,KAAK,QACL7L,QAAQ,OACRsE,QAAS,WACP3C,EAAMiD,QAAQC,KAAK,mBANvB,e,+BCjGFtE,GAAYC,aAAW,iBAAO,CAClCiF,KAAM,CACJc,OAAQ,QAEVtF,OAAQ,CACNE,gBAAiB4K,KAAO4K,OAAO,KAC/BpQ,OAAQ,GACR/E,MAAO,QAqCIoV,GAjCO,SAAC,GAA4B,IAA1BxT,EAAyB,EAAzBA,UAAc6M,EAAW,8BAC1CrO,EAAUrB,KAEhB,OACE,kBAAC+V,GAAA,EAAD,eAAMlT,UAAW+M,aAAKvO,EAAQ6D,KAAMrC,IAAgB6M,GAClD,kBAACyG,GAAA,EAAD,KACE,kBAACnT,EAAA,EAAD,CAAMC,WAAS,EAACqT,QAAQ,gBAAgBhW,QAAS,GAC/C,kBAAC0C,EAAA,EAAD,CAAME,MAAI,GACR,kBAAC1D,EAAA,EAAD,CAAYE,MAAM,gBAAgB6W,cAAY,EAAC9W,QAAQ,MAAvD,kBAGA,kBAACD,EAAA,EAAD,CAAYE,MAAM,cAAcD,QAAQ,MAAxC,UAIF,kBAACuD,EAAA,EAAD,CAAME,MAAI,GACR,kBAACJ,EAAA,EAAD,CAAQD,UAAWxB,EAAQX,QACzB,kBAAC,KAAD,SAIN,kBAACqC,EAAA,EAAD,CAAKyB,GAAI,GACP,kBAACgS,GAAA,EAAD,CAAgBjU,MAAO,KAAM9C,QAAQ,oB,0CChCzCO,GAAYC,aAAW,SAAAC,GAAK,MAAK,CACrCgF,KAAM,CACJc,OAAQ,QAEVtF,OAAQ,CACNE,gBAAiB4K,KAAOC,MAAM,KAC9BzF,OAAQ,GACR/E,MAAO,IAETwV,eAAgB,CACd/W,MAAO8L,KAAOC,MAAM,MAEtBiL,gBAAiB,CACfhX,MAAO8L,KAAOC,MAAM,KACpB2D,YAAalP,EAAMI,QAAQ,QA2ChBqW,GAvCQ,SAAC,GAA4B,IAA1B9T,EAAyB,EAAzBA,UAAc6M,EAAW,8BAC3CrO,EAAUrB,KAEhB,OACE,kBAAC+V,GAAA,EAAD,eAAMlT,UAAW+M,aAAKvO,EAAQ6D,KAAMrC,IAAgB6M,GAClD,kBAACyG,GAAA,EAAD,KACE,kBAACnT,EAAA,EAAD,CAAMC,WAAS,EAACqT,QAAQ,gBAAgBhW,QAAS,GAC/C,kBAAC0C,EAAA,EAAD,CAAME,MAAI,GACR,kBAAC1D,EAAA,EAAD,CAAYE,MAAM,gBAAgB6W,cAAY,EAAC9W,QAAQ,MAAvD,mBAGA,kBAACD,EAAA,EAAD,CAAYE,MAAM,cAAcD,QAAQ,MAAxC,UAIF,kBAACuD,EAAA,EAAD,CAAME,MAAI,GACR,kBAACJ,EAAA,EAAD,CAAQD,UAAWxB,EAAQX,QACzB,kBAAC,KAAD,SAIN,kBAACqC,EAAA,EAAD,CAAKyB,GAAI,EAAGjE,QAAQ,OAAOE,WAAW,UACpC,kBAAC,KAAD,CAAiBoC,UAAWxB,EAAQoV,iBACpC,kBAACjX,EAAA,EAAD,CAAYqD,UAAWxB,EAAQqV,gBAAiBjX,QAAQ,SAAxD,OAGA,kBAACD,EAAA,EAAD,CAAYE,MAAM,gBAAgBD,QAAQ,WAA1C,wB,qBC7CJO,GAAYC,aAAW,iBAAO,CAClCiF,KAAM,CACJc,OAAQ,QAEVtF,OAAQ,CACNE,gBAAiB4K,KAAOkI,OAAO,KAC/B1N,OAAQ,GACR/E,MAAO,QAkCI2V,GA9BK,SAAC,GAA4B,IAA1B/T,EAAyB,EAAzBA,UAAc6M,EAAW,8BACxCrO,EAAUrB,KAEhB,OACE,kBAAC+V,GAAA,EAAD,eAAMlT,UAAW+M,aAAKvO,EAAQ6D,KAAMrC,IAAgB6M,GAClD,kBAACyG,GAAA,EAAD,KACE,kBAACnT,EAAA,EAAD,CAAMC,WAAS,EAACqT,QAAQ,gBAAgBhW,QAAS,GAC/C,kBAAC0C,EAAA,EAAD,CAAME,MAAI,GACR,kBAAC1D,EAAA,EAAD,CAAYE,MAAM,gBAAgB6W,cAAY,EAAC9W,QAAQ,MAAvD,gBAGA,kBAACD,EAAA,EAAD,CAAYE,MAAM,cAAcD,QAAQ,MAAxC,YAIF,kBAACuD,EAAA,EAAD,CAAME,MAAI,GACR,kBAACJ,EAAA,EAAD,CAAQD,UAAWxB,EAAQX,QACzB,kBAAC,KAAD,Y,+DCfRV,GAAYC,aAAW,iBAAO,CAClCiF,KAAM,CACJc,OAAQ,YA8FG6Q,GA1FS,SAAC,GAA4B,IAA1BhU,EAAyB,EAAzBA,UAAc6M,EAAW,8BAC5CrO,EAAUrB,KACVE,EAAQsT,eAERpX,EAAO,CACXqX,SAAU,CACR,CACErX,KAAM,CAAC,GAAI,GAAI,IACfwE,gBAAiB,CAAC4K,KAAOkI,OAAO,KAAMlI,KAAOI,IAAI,KAAMJ,KAAO4K,OAAO,MACrEhR,YAAa,EACbD,YAAaqG,KAAO/M,OAAOqY,MAC3BC,iBAAkBvL,KAAO/M,OAAOqY,QAGpClD,OAAQ,CAAC,UAAW,SAAU,WAG1BC,EAAU,CACdC,WAAW,EACXkD,iBAAkB,GAClBhD,OAAQ,CAAE1O,QAAS,GACnB2O,OAAQ,CACN1T,SAAS,GAEX2T,qBAAqB,EACrBC,YAAY,EACZoB,SAAU,CACR3U,gBAAiBV,EAAMW,QAAQyR,WAAWkD,QAC1CC,cAAevV,EAAMW,QAAQgO,KAAKC,UAClC3J,YAAajF,EAAMW,QAAQsU,QAC3B/P,YAAa,EACbsQ,SAAS,EACTC,gBAAiBzV,EAAMW,QAAQgO,KAAKC,UACpC8G,WAAW,EACXC,KAAM,QACNC,eAAgB5V,EAAMW,QAAQgO,KAAK/N,UAIjCmW,EAAU,CACd,CACE5H,MAAO,UACP9M,MAAO,GACP4M,KAAM+H,KACNxX,MAAO8L,KAAOkI,OAAO,MAEvB,CACErE,MAAO,SACP9M,MAAO,GACP4M,KAAMgI,KACNzX,MAAO8L,KAAOI,IAAI,MAEpB,CACEyD,MAAO,SACP9M,MAAO,GACP4M,KAAMiI,KACN1X,MAAO8L,KAAO4K,OAAO,OAIzB,OACE,kBAACL,GAAA,EAAD,eAAMlT,UAAW+M,aAAKvO,EAAQ6D,KAAMrC,IAAgB6M,GAClD,kBAACsG,GAAA,EAAD,CAAY3G,MAAM,sBAClB,kBAAC6B,GAAA,EAAD,MACA,kBAACiF,GAAA,EAAD,KACE,kBAACpT,EAAA,EAAD,CAAKiD,OAAQ,IAAK+H,SAAS,YACzB,kBAAC,YAAD,CAAU3R,KAAMA,EAAMyX,QAASA,KAEjC,kBAAC9Q,EAAA,EAAD,CAAKxC,QAAQ,OAAOwE,eAAe,SAASP,GAAI,GAC7CyS,EAAQ7F,KAAI,gBAAG1R,EAAH,EAAGA,MAAa+P,EAAhB,EAAUN,KAAYE,EAAtB,EAAsBA,MAAO9M,EAA7B,EAA6BA,MAA7B,OACX,kBAACQ,EAAA,EAAD,CAAK7D,IAAKmQ,EAAO4B,EAAG,EAAGoG,UAAU,UAC/B,kBAAC5H,EAAD,CAAM/P,MAAM,WACZ,kBAACF,EAAA,EAAD,CAAYE,MAAM,cAAcD,QAAQ,SACrC4P,GAEH,kBAAC7P,EAAA,EAAD,CAAYuG,MAAO,CAAErG,SAASD,QAAQ,MACnC8C,EADH,aC3FRvC,GAAYC,aAAW,SAAAC,GAAK,MAAK,CACrCgF,KAAM,CACJtE,gBAAiBV,EAAMW,QAAQyR,WAAWC,KAC1C+E,UAAW,OACX3I,cAAezO,EAAMI,QAAQ,GAC7BoO,WAAYxO,EAAMI,QAAQ,QAgCfiX,GA5BG,SAAAnW,GAChB,IAAMC,EAAUrB,KAEhB,OACE,kBAAC,GAAD,CAAM6C,UAAWxB,EAAQ6D,KAAMmK,MAAM,aACnC,kBAAC5M,EAAA,EAAD,CAAWE,UAAU,GACnB,kBAACK,EAAA,EAAD,CAAMC,WAAS,EAAC3C,QAAS,GACvB,kBAAC0C,EAAA,EAAD,CAAME,MAAI,EAACsU,GAAI,EAAGC,GAAI,EAAGC,GAAI,EAAGvU,GAAI,IAClC,kBAAC,GAAD,OAEF,kBAACH,EAAA,EAAD,CAAME,MAAI,EAACsU,GAAI,EAAGC,GAAI,EAAGC,GAAI,EAAGvU,GAAI,IAClC,kBAAC,GAAD,OAEF,kBAACH,EAAA,EAAD,CAAME,MAAI,EAACsU,GAAI,EAAGC,GAAI,EAAGC,GAAI,EAAGvU,GAAI,IAClC,kBAAC,GAAD,OAEF,kBAACH,EAAA,EAAD,CAAME,MAAI,EAACsU,GAAI,EAAGG,GAAI,GAAID,GAAI,EAAGvU,GAAI,IACnC,kBAAC,GAAU/B,IAEb,kBAAC4B,EAAA,EAAD,CAAME,MAAI,EAACsU,GAAI,EAAGG,GAAI,EAAGD,GAAI,EAAGvU,GAAI,IAClC,kBAAC,GAAD,W,sHCfNnD,GAAYC,aAAW,SAAAC,GAAK,MAAK,CACrCgF,KAAM,GACNxE,OAAQ,CACN0O,YAAalP,EAAMI,QAAQ,IAE7BsX,QAAS,CACPC,aAAc3X,EAAMI,QAAQ,QAI1BwX,GAAU,CACd,CAAEzI,MAAO,OAAQ0I,UAAW,OAAQC,YAAQvK,GAC5C,CAAE4B,MAAO,QAAS0I,UAAW,SAC7B,CAAE1I,MAAO,gBAAiB0I,UAAW,iBACrC,CAAE1I,MAAO,YAAa0I,UAAW,aACjC,CAAE1I,MAAO,oBAAqB0I,UAAW,qBACzC,CACE1I,MAAO,cACP2I,OAAQ,WACN,MAAO,uEAGX,CACE3I,MAAO,eACP0I,UAAW,aACXC,OAAQ,SAAAC,GACN,OAAOrQ,KAAOqQ,GAAMC,OAAO,yBAG/B,CAAE7I,MAAO,YAAa0I,UAAW,KAAMC,YAAQvK,IAE3C0K,GAAe,CACnBC,iBAAkB,SAAAhU,GAAI,MAAK,CACzB6B,IAAK7B,EAAKX,MAyJC4U,GArJC,SAAC,GAAoD,IAAlDxV,EAAiD,EAAjDA,UAAWyV,EAAsC,EAAtCA,MAAOC,EAA+B,EAA/BA,OAAQlU,EAAuB,EAAvBA,QAAYqL,EAAW,yDAC5DrO,EAAUrB,KADkD,EAEtBsB,mBAAS,IAFa,mBAE3DkX,EAF2D,KAE3CC,EAF2C,OAGxBnX,mBAAS,GAHe,mBAG3DoX,EAH2D,KAG5CC,EAH4C,KAK5DC,EAAe,SAAAxW,GACnBiC,EAAQC,KAAK,gBAAkBlC,EAAEE,cAAcC,QAG3CsW,EAAa,SAAAzU,GAAI,OAAI,WACzBuU,EAAiBvU,KAGnB0T,GAAQ,GAAGE,OAAS,SAAAxW,GAClB,OACE,kBAACuB,EAAA,EAAD,CAAKtC,WAAW,SAASF,QAAQ,QAC/B,kBAACuC,EAAA,EAAD,CAAQD,UAAWxB,EAAQX,QC5EpB,eAACc,EAAD,uDAAQ,GAAR,OACbA,EACG1E,QAAQ,MAAO,KACfsJ,MAAM,KACN0S,MAAM,EAAG,GACT1H,KAAI,SAAA2H,GAAC,OAAIA,GAAKA,EAAE,GAAGC,iBACnBC,KAAK,IDsEkCC,CAAY1X,IAChD,kBAAChC,EAAA,EAAD,CAAYE,MAAM,cAAcD,QAAQ,SACrC+B,KAKTsW,GAAQ,GAAGE,OAAS,SAAA/R,GAClB,OACE,kBAACkT,GAAA,EAAD,CAAa7N,KAAK,SAChB,kBAACxH,EAAA,EAAD,CAAQpE,MAAM,UAAUqE,QAAS6U,EAAcrW,MAAO0D,GAAtD,UAGA,kBAACnC,EAAA,EAAD,CAAQpE,MAAM,YAAYqE,QAAS8U,EAAW5S,IAA9C,YAON,IAAMmT,EAAc,WAClBT,EAAiB,IA0BbU,EAAe,SAAAjX,GACnBqW,EAAkBrW,EAAEE,cAAcC,QAuCpC,OACE,oCAnCE,yBAAKM,UAAWxB,EAAQuW,SACtB,kBAAC7U,EAAA,EAAD,CAAKxC,QAAQ,OAAOwE,eAAe,YACjC,kBAACjB,EAAA,EAAD,CAAQpE,MAAM,UAAUD,QAAQ,aAAhC,gBAIF,kBAACsD,EAAA,EAAD,CAAKyB,GAAI,GACP,kBAACuR,GAAA,EAAD,KACE,kBAACI,GAAA,EAAD,KACE,kBAACpT,EAAA,EAAD,CAAKJ,SAAU,KACb,kBAACS,EAAA,EAAD,CACEI,WAAS,EACT8V,WAAY,CACVC,eACE,kBAACC,GAAA,EAAD,CAAgBzL,SAAS,SACvB,kBAAC0L,GAAA,EAAD,CAAS7U,SAAS,QAAQlF,MAAM,UAC9B,kBAAC,KAAD,SAKRga,YAAY,cACZja,QAAQ,WACR8C,MAAOiW,EACP3U,SAAUwV,SAatB,kBAACtD,GAAA,EAAD,eAAMlT,UAAW+M,aAAKvO,EAAQ6D,KAAMrC,IAAgB6M,GAClD,kBAAC3M,EAAA,EAAD,CAAK4W,SAAU,MACb,wBACExB,aAAY,cACVlc,KAAM,YACHkc,IAELL,QAASA,GACT8B,WAAYtB,EAAMuB,QAAO,SAAAtX,GACvB,OAA8C,IAAvCA,EAAMf,KAAKsY,OAAOtB,QAG7B,kBAACuB,GAAA,EAAD,CAAQjR,OAAQ4P,EAAejH,QAAS2H,GACtC,kBAACY,GAAA,EAAD,gCACA,kBAACC,GAAA,EAAD,KACE,kBAACC,GAAA,EAAD,+BACA,kBAACA,GAAA,EAAD,2EACA,kBAACA,GAAA,EAAD,8DAEF,kBAACC,GAAA,EAAD,KACE,kBAACrW,EAAA,EAAD,CAAQC,QA1EE,WACpBE,IAAI9F,cAAc,CAAE8H,IAAKyS,IAAiBxU,MAAK,SAAA/H,GACxCA,EAAIG,SAGP0H,IAAMoW,QAAQ,0DACdhB,KAHApV,IAAMX,MAAMlH,EAAII,UAuEsBmD,MAAM,aAAtC,kBAGA,kBAACoE,EAAA,EAAD,CAAQC,QAzFD,WACjBE,IAAIhG,WAAW,CAAEgI,IAAKyS,IAAiBxU,MAAK,SAAA/H,GACrCA,EAAIG,SAGP0H,IAAMoW,QAAQ,+CACd7B,IACAa,KAJApV,IAAMX,MAAMlH,EAAII,UAsFmBmD,MAAM,aAAnC,eAGA,kBAACoE,EAAA,EAAD,CAAQC,QAASqV,EAAa1Z,MAAM,WAApC,gBEzLRM,GAAYC,aAAW,SAAAC,GAAK,MAAK,CACrCgF,KAAM,CACJtE,gBAAiBV,EAAMW,QAAQyR,WAAWC,KAC1C+E,UAAW,OACX3I,cAAezO,EAAMI,QAAQ,GAC7BoO,WAAYxO,EAAMI,QAAQ,QAkCf+Z,GA9BD,SAAAjZ,GACZ,IAAMC,EAAUrB,KADK,EAEKsB,mBAAS,IAFd,mBAEdgX,EAFc,KAEPgC,EAFO,KAIfC,EAAW,WACftW,IAAIjG,aAAakG,MAAK,SAAA/H,GACfA,EAAIG,QAGPge,EAASne,EAAIC,MAFb4H,IAAMX,MAAMlH,EAAII,UAWtB,OAJAuU,qBAAU,WACRyJ,MACC,IAGD,kBAAC,GAAD,CAAM1X,UAAWxB,EAAQ6D,KAAMmK,MAAM,aACnC,kBAAC5M,EAAA,EAAD,CAAWE,UAAU,GACnB,kBAACI,EAAA,EAAD,CAAKyB,GAAI,EAAGuB,MAAO,CAAE4T,SAAU,OAE7B,kBAAC,GAAD,CAASrB,MAAOA,EAAOC,OAAQgC,EAAUlW,QAASjD,EAAMiD,c,8BCd5DrE,GAAYC,YAAW,CAC3BiF,KAAM,KAGFsV,GAAkB,CACtBC,QAAS,IACTC,WAAY,MAiJCC,GA9IS,SAAC,GAA4B,IAA1B9X,EAAyB,EAAzBA,UAAc6M,EAAW,8BAC5CrO,EAAUrB,KADkC,EAElBsB,mBAASkZ,IAFS,mBAE3CI,EAF2C,KAEjCC,EAFiC,OAGpBvZ,oBAAS,GAHW,mBAG3CwZ,EAH2C,KAGlCC,EAHkC,OAIpBzZ,oBAAS,GAJW,mBAI3C0Z,EAJ2C,KAIlCC,EAJkC,KAS5C7B,EAAc,WAClB6B,GAAW,IAGPC,EAAe,SAAAC,GACnBN,EAAY,gBACPD,EADM,gBAERO,EAAMC,OAAO5Z,KAAO2Z,EAAMC,OAAO7Y,UAyCtC,OAJAuO,qBAAU,WAhCR7M,IAAI7F,gBAAgB8F,MAAK,SAAA/H,GAClBA,EAAIG,QAGPue,EAAY1e,EAAIC,MAFhB4H,IAAMX,MAAMlH,EAAII,WAgCnB,CAACue,IAGF,wCAAMjY,UAAW+M,aAAKvO,EAAQ6D,KAAMrC,IAAgB6M,GAClD,kBAACqG,GAAA,EAAD,KACE,kBAACC,GAAA,EAAD,CAAYqF,UAAU,oBAAoBhM,MAAM,iBAChD,kBAAC6B,GAAA,EAAD,MACA,kBAACiF,GAAA,EAAD,KACE,kBAACnT,EAAA,EAAD,CAAMC,WAAS,GACb,kBAACD,EAAA,EAAD,CAAME,MAAI,EAACC,GAAI,GACb,kBAACmY,GAAA,EAAD,mBACA,kBAACC,GAAA,EAAD,CACEC,QAAQ,2BACR/X,GAAG,qBACHjC,KAAK,aACLgC,WAAS,EACTjB,MAAOqY,EAASF,WAChB7W,SAAUqX,GAEV,kBAACO,GAAA,EAAD,CAAUlZ,MAAO,KAAjB,QACA,kBAACkZ,GAAA,EAAD,CAAUlZ,MAAO,OAAjB,SACA,kBAACkZ,GAAA,EAAD,CAAUlZ,MAAO,MAAjB,SACA,kBAACkZ,GAAA,EAAD,CAAUlZ,MAAO,OAAjB,SACA,kBAACkZ,GAAA,EAAD,CAAUlZ,MAAO,MAAjB,SACA,kBAACkZ,GAAA,EAAD,CAAUlZ,MAAO,OAAjB,SACA,kBAACkZ,GAAA,EAAD,CAAUlZ,MAAO,MAAjB,SACA,kBAACkZ,GAAA,EAAD,CAAUlZ,MAAO,KAAjB,SACA,kBAACkZ,GAAA,EAAD,CAAUlZ,MAAO,MAAjB,WAGJ,kBAACS,EAAA,EAAD,CAAME,MAAI,EAACC,GAAI,IACf,kBAACH,EAAA,EAAD,CAAME,MAAI,EAACC,GAAI,GACb,kBAACmY,GAAA,EAAD,gBACA,kBAAClY,EAAA,EAAD,CACE5B,KAAK,UACLvF,KAAK,SACLyf,gBAAiB,CACfC,QAAQ,GAEVnY,WAAS,EACT/D,QAAQ,WACR8C,MAAOqY,EAASH,QAChB5W,SAAUqX,OAKlB,kBAAChK,GAAA,EAAD,MAEA,kBAACnO,EAAA,EAAD,CAAKxC,QAAQ,OAAOwE,eAAe,gBAAgBkM,EAAG,GACpD,kBAACnN,EAAA,EAAD,CAAQpE,MAAM,YAAYD,QAAQ,YAAYsE,QAnGnC,WACjBkX,GAAW,KAkGL,SAGA,kBAACnX,EAAA,EAAD,CAAQpE,MAAM,UAAUD,QAAQ,YAAYsE,QA9E9B,WACpBE,IAAI5F,cAAcuc,GAAU1W,MAAK,SAAA/H,GAC1BA,EAAIG,SAGP0H,IAAM1H,QAAQ,wCACdye,GAAW,SAAAa,GAAS,OAAKA,MAHzB5X,IAAMX,MAAMlH,EAAII,WA2Ed,UAGA,kBAACwd,GAAA,EAAD,CACEjR,KAAMkS,EACNvJ,QAAS2H,EACTyC,kBAAgB,qBAChBC,mBAAiB,4BAEjB,kBAAC9B,GAAA,EAAD,CAAavW,GAAG,sBAAhB,wCACA,kBAACwW,GAAA,EAAD,KACE,kBAACC,GAAA,EAAD,CAAmBzW,GAAG,4BAAtB,8DAIF,kBAAC0W,GAAA,EAAD,KACE,kBAACrW,EAAA,EAAD,CAAQC,QAnFC,WACnBE,IAAI5F,cAAcmc,IAAiBtW,MAAK,SAAA/H,GACjCA,EAAIG,SAGP0H,IAAM1H,QAAQ,wCACdye,GAAW,SAAAa,GAAS,OAAKA,KACzBxC,KAJApV,IAAMX,MAAMlH,EAAII,UAgFqBmD,MAAM,WAArC,MAGA,kBAACoE,EAAA,EAAD,CAAQC,QAASqV,EAAa1Z,MAAM,WAApC,gBC5JRM,GAAYC,aAAW,SAAAC,GAAK,MAAK,CACrCgF,KAAM,CACJtE,gBAAiBV,EAAMW,QAAQyR,WAAWC,KAC1C+E,UAAW,OACX3I,cAAezO,EAAMI,QAAQ,GAC7BoO,WAAYxO,EAAMI,QAAQ,QAkBfyb,GAdE,WACf,IAAM1a,EAAUrB,KAEhB,OACE,kBAAC,GAAD,CAAM6C,UAAWxB,EAAQ6D,KAAMmK,MAAM,YACnC,kBAAC5M,EAAA,EAAD,CAAWE,SAAS,MAClB,kBAACI,EAAA,EAAD,CAAKyB,GAAI,GACP,kBAAC,GAAD,UCdGpI,GAAO,CAClB,CACEqH,GAAI,EACJuY,WAAY,WACZxa,KAAM,iBACN0E,MAAO,mDAET,CACEzC,GAAI,EACJuY,WAAY,WACZxa,KAAM,UACN0E,MAAO,oD,2FCFH+V,I,gBAAAA,UAEFjc,GAAYC,aAAW,SAAAC,GAAK,MAAK,CACrCgF,KAAM,CACJ3E,QAAS,OACTwE,eAAgB,SAChBmX,SAAU,OACV,QAAS,CACPvb,OAAQT,EAAMI,QAAQ,MAG1B6b,KAAM,CACJxb,OAAQT,EAAMI,QAAQ,KAExB+H,MAAO,CACL+T,WAAYlc,EAAMI,QAAQ,GAC1BoS,KAAM,OAqHK2J,GAjHA,SAAAjb,GACb,IAAMC,EAAUrB,KADM,EAEIsB,mBAAS,IAFb,mBAEf4E,EAFe,KAERoW,EAFQ,OAGUhb,mBAAS,GAHnB,mBAGf2F,EAHe,KAGL2D,EAHK,KA6CtB,OACE,kBAAC5H,EAAA,EAAD,CAAMC,WAAS,GACb,kBAACD,EAAA,EAAD,CAAME,MAAI,EAACC,GAAI,IACb,kBAAC4W,GAAA,EAAD,CACEpX,SAAS,KACTa,WAAS,EACTsF,KAAM1H,EAAM0H,KACZ2I,QAASrQ,EAAMmb,YACfV,kBAAgB,qBAChBC,mBAAiB,4BAEjB,kBAAC9B,GAAA,EAAD,CAAavW,GAAG,sBAAhB,OACQrC,EAAMhF,MAAQgF,EAAMhF,KAAKqH,IAAO,EADxC,gBACyDrC,EAAMhF,MAAQgF,EAAMhF,KAAKoF,MAAS,IAE3F,kBAACyY,GAAA,EAAD,CAAepX,UAAWxB,EAAQ6D,MAChC,kBAAClC,EAAA,EAAD,CAAMC,WAAS,GACb,kBAACD,EAAA,EAAD,CAAME,MAAI,EAACC,GAAI,GACb,kBAACmY,GAAA,EAAD,0BAEF,kBAACtY,EAAA,EAAD,CAAME,MAAI,EAACC,GAAI,GAAI4C,MAAO,CAAE8R,aAAc,KACxC,kBAACzU,EAAA,EAAD,CACEnH,KAAK,SACLwD,QAAQ,WACR+c,aAAcpb,EAAMhF,MAAQgF,EAAMhF,KAAK6K,SACvCpD,SApDS,SAAAzB,GACvBwI,EAAY6R,SAASra,EAAEE,cAAcC,YAsD3B,kBAACS,EAAA,EAAD,CAAME,MAAI,EAACC,GAAI,GACb,kBAACmY,GAAA,EAAD,eAEF,kBAACtY,EAAA,EAAD,CAAME,MAAI,EAACC,GAAI,IACb,kBAAC8Y,GAAD,CACEvC,YAAY,0BACZgD,UAAQ,EACRF,aAAcpb,EAAMhF,MAAQgF,EAAMhF,KAAK8J,MACvCrC,SArDE,SAAAzB,GAChBka,EAASla,EAAEE,cAAcC,aAuEnB,kBAAC4X,GAAA,EAAD,KACE,kBAACrW,EAAA,EAAD,CAAQC,QA/FI,WACpBE,IAAIlG,UAAJ,gBAAmBqD,EAAMhF,KAAzB,CAA+B8J,MAAOA,EAAOe,SAAUA,KAAY/C,MAAK,SAAA/H,GACjEA,EAAIG,SAGP0H,IAAM1H,QAAQ,YACd8E,EAAMub,eACNvb,EAAMmb,eAJNvY,IAAMX,MAAMlH,EAAII,UA4FoBmD,MAAM,WAAtC,MAGA,kBAACoE,EAAA,EAAD,CAAQC,QAAS3C,EAAMmb,YAAa7c,MAAM,WAA1C,eCtHNM,GAAYC,aAAW,SAAAC,GAAK,MAAK,CACrCgF,KAAM,GACNxE,OAAQ,CACN0O,YAAalP,EAAMI,QAAQ,QAoIhB+X,GAhIC,SAAC,GAAiD,IAA/CxV,EAA8C,EAA9CA,UAAW+Z,EAAmC,EAAnCA,MAAOD,EAA4B,EAA5BA,aAAiBjN,EAAW,qDACzDrO,EAAUrB,KAD+C,EAETsB,mBAAS,IAFA,mBAExDub,EAFwD,KAEnCC,EAFmC,OAGrCxb,mBAAS,IAH4B,mBAGxDyb,EAHwD,KAGjDC,EAHiD,OAIvC1b,mBAAS,GAJ8B,mBAIxD2b,EAJwD,KAIlDC,EAJkD,OAK7B5b,mBAAS,CAAEwH,MAAM,EAAO6T,aAAcA,IALT,mBAKxDQ,EALwD,KAK7CC,EAL6C,KA+CzDC,EAAkB,WACtBD,EAAa,CAAEtU,MAAM,KAGjBwU,EAAoB,SAAAlb,GACxB,IAAM2V,EAAY3V,EAAEE,cAAcC,MAClC6a,EAAa,CAAEtU,MAAM,EAAMyT,YAAac,EAAiBjhB,KAAMwgB,EAAM7E,GAAY4E,aAAcA,KAGjG,OACE,kBAAC5G,GAAA,EAAD,eAAMlT,UAAW+M,aAAKvO,EAAQ6D,KAAMrC,IAAgB6M,GAClD,kBAAC,GAAWyN,GACZ,kBAAC,KAAD,KACE,kBAACpa,EAAA,EAAD,CAAK4W,SAAU,MACb,kBAAC4D,GAAA,EAAD,KACE,kBAACC,GAAA,EAAD,KACE,kBAACC,GAAA,EAAD,KACE,kBAACC,GAAA,EAAD,CAAWpY,QAAQ,YACjB,kBAACqY,GAAA,EAAD,CACEC,QAASf,EAAoBtW,SAAWqW,EAAMrW,OAC9C7G,MAAM,UACNme,cAAehB,EAAoBtW,OAAS,GAAKsW,EAAoBtW,OAASqW,EAAMrW,OACpF1C,SA9DM,SAAAsX,GACtB,IAAI2C,EAGFA,EADE3C,EAAMC,OAAOwC,QACUhB,EAAMxL,KAAI,SAAA2M,GAAQ,OAAIA,EAASta,MAE/B,GAG3BqZ,EAAuBgB,OAwDX,kBAACJ,GAAA,EAAD,WACA,kBAACA,GAAA,EAAD,kBACA,kBAACA,GAAA,EAAD,aACA,kBAACA,GAAA,EAAD,qBACA,kBAACA,GAAA,EAAD,cACA,kBAACA,GAAA,EAAD,CAAW/d,MAAM,UAAjB,eAGJ,kBAACqe,GAAA,EAAD,KACGpB,EAAM9D,MAAM,EAAGiE,GAAO3L,KAAI,SAAChV,EAAM6hB,GAAP,OACzB,kBAACR,GAAA,EAAD,CAAUS,OAAK,EAAChf,IAAK9C,EAAKqH,GAAI0a,UAAoD,IAA1CtB,EAAoBuB,QAAQhiB,EAAKqH,KACvE,kBAACia,GAAA,EAAD,CAAWpY,QAAQ,YACjB,kBAACqY,GAAA,EAAD,CACEC,SAAmD,IAA1Cf,EAAoBuB,QAAQhiB,EAAKqH,IAC1CI,SAAU,SAAAsX,GAAK,OAnEX,SAACA,EAAO1X,GAC9B,IAAM4a,EAAgBxB,EAAoBuB,QAAQ3a,GAC9Cqa,EAAyB,IAEN,IAAnBO,EACFP,EAAyBA,EAAuBQ,OAAOzB,EAAqBpZ,GACjD,IAAlB4a,EACTP,EAAyBA,EAAuBQ,OAAOzB,EAAoB/D,MAAM,IACxEuF,IAAkBxB,EAAoBtW,OAAS,EACxDuX,EAAyBA,EAAuBQ,OAAOzB,EAAoB/D,MAAM,GAAI,IAC5EuF,EAAgB,IACzBP,EAAyBA,EAAuBQ,OAC9CzB,EAAoB/D,MAAM,EAAGuF,GAC7BxB,EAAoB/D,MAAMuF,EAAgB,KAI9CvB,EAAuBgB,GAkDcS,CAAgBpD,EAAO/e,EAAKqH,KAC/ClB,MAAM,UAGV,kBAACmb,GAAA,EAAD,KAAYthB,EAAKqH,IACjB,kBAACia,GAAA,EAAD,KAAY9V,KAAOxL,EAAK4f,YAAY9D,OAAO,wBAC3C,kBAACwF,GAAA,EAAD,KAAYthB,EAAKoF,MACjB,kBAACkc,GAAA,EAAD,KAAYthB,EAAK6K,UACjB,kBAACyW,GAAA,EAAD,KAAYthB,EAAK8J,OACjB,kBAACwX,GAAA,EAAD,CAAW/d,MAAM,UACf,kBAACwZ,GAAA,EAAD,CAAa7N,KAAK,SAChB,kBAACxH,EAAA,EAAD,CAAQpE,MAAM,UAAUqE,QAASuZ,EAAmB/a,MAAO0b,GAA3D,QAGA,kBAACna,EAAA,EAAD,CAAQpE,MAAM,WAAd,WACA,kBAACoE,EAAA,EAAD,CAAQpE,MAAM,aAAd,oBAShB,kBAAC8e,GAAA,EAAD,CACE9b,UAAU,MACV+b,MAAO7B,EAAMrW,OACbmY,aAtEmB,SAACvD,EAAOwD,GAC/BzB,EAAQyB,IAsEJC,oBA3EoB,SAAAzD,GACxB6B,EAAS7B,EAAMC,OAAO7Y,QA2ElB0a,KAAMA,EACN4B,YAAa9B,EACb+B,mBAAoB,CAAC,EAAG,GAAI,QCxI9B9e,GAAYC,aAAW,SAAAC,GAAK,MAAK,CACrCgF,KAAM,CACJtE,gBAAiBV,EAAMW,QAAQyR,WAAWC,KAC1C+E,UAAW,OACX3I,cAAezO,EAAMI,QAAQ,GAC7BoO,WAAYxO,EAAMI,QAAQ,QAqDfye,GAjDA,WACb,IAAM1d,EAAUrB,KADG,EAESsB,mBAASlF,IAFlB,mBAEZ4iB,EAFY,KAEJC,EAFI,OAGmB3d,mBAASlF,GAAK,IAHjC,mBAGZ8iB,EAHY,KAGCC,EAHD,OAIS7d,oBAAS,GAJlB,mBAIZ8d,EAJY,KAIJC,EAJI,KAMbC,EAAY,WAChBrb,IAAIpG,cAAcqG,MAAK,SAAA/H,GAChBA,EAAIG,SAGP2iB,EAAU9iB,EAAIC,KAAK4iB,QACnBG,EAAehjB,EAAIC,KAAKmjB,eAHxBvb,IAAMX,MAAMlH,EAAII,UAQtBuU,oBAAUwO,EAAW,IAUrB,OACE,kBAAC,GAAD,CAAMzc,UAAWxB,EAAQ6D,KAAMmK,MAAM,UACnC,kBAAC5M,EAAA,EAAD,CAAWE,UAAU,GACnB,kBAAC,GAAD,CAAQmG,KAAMsW,EAAQ7C,YAPX,WACf8C,GAAU,MAON,kBAACtc,EAAA,EAAD,CAAKxC,QAAQ,OAAOwE,eAAe,YACjC,kBAACjB,EAAA,EAAD,CAAQpE,MAAM,UAAUD,QAAQ,YAAYsE,QAbxC,WACVsb,GAAU,KAYJ,kBAIF,kBAACtc,EAAA,EAAD,KACE,kBAACvD,EAAA,EAAD,CAAYE,MAAM,cAAcD,QAAQ,MAAxC,oBACoByf,EAAYzb,GADhC,MACuCyb,EAAY1d,OAGrD,kBAACuB,EAAA,EAAD,CAAKyB,GAAI,GACP,kBAAC,GAAD,CAAQoY,MAAOoC,EAAQrC,aAAc2C,QC1DzCrO,GAAI,CAAElL,MAAO,CAAEpF,OAAQ,IAEhBmX,GAAU,CACrB,CACEzI,MAAO,OACP0I,UAAW,OACX7Y,IAAK,OACL8Y,OAAQ,SAAAnJ,GAAI,OAAI,8BAAOA,KAEzB,CACEQ,MAAO,QACP0I,UAAW,YACX7Y,IAAK,YACL8Y,OAAQ,SAAA7a,GAAG,OAAI,8BAAOA,EAAM,MAAQ,QAEtC,CACEkS,MAAO,cACP0I,UAAW,cACX7Y,IAAK,eAEP,CACEmQ,MAAO,WACP0I,UAAW,WACX7Y,IAAK,WACL8Y,OAAQ,SAAAjQ,GAAQ,OAAI,8BAAOA,EAAW,IAAlB,YAEtB,CACEsH,MAAO,SACP0I,UAAW,YACX7Y,IAAK,YACL8Y,OAAQ,SAAA7a,GACN,OAAO,yCAAOqiB,UAAQ,EAACvU,IAAK,SAAW9N,GAAS8T,QCCvCwO,GA5BA,SAAAre,GACb,IAAMse,EAAOte,EAAMvE,SAASkU,SAAS3K,MAAM,KACrCuZ,EAAM,CACV1Z,IAAKwW,SAASiD,EAAKE,OACnB5Y,SAAU,GAJU,EAOQ1F,mBAAS,IAPjB,mBAOfue,EAPe,KAONC,EAPM,KAqBtB,OAFAhP,qBAVmB,WACjB7M,IAAI/F,aAAayhB,GAAKzb,MAAK,SAAA/H,GACpBA,EAAIG,QAGPwjB,EAAW3jB,EAAIC,MAFf4H,IAAMX,MAAMlH,EAAII,WAOA,IAGpB,oCACE,wBAAOub,QAASA,GAAS8B,WAAYiG,MCvBrCna,GACK,IADLA,GAEQ,KAmDCqa,GAhDS,SAAA3e,GAAU,IAAD,EACKE,oBAAS,GADd,mBACxB0e,EADwB,KACZC,EADY,KAGzB1X,EAAMf,IAAS,CACnBvL,KAAM,MACN0J,QAASD,GACTE,WAAYF,GACZ8C,iBAAiB,IAmBnB,OAhBAsI,qBAAU,WACR7H,QAAQC,IAAI,0FAAqB9H,GACjCmH,EAAIO,MACF,WACEG,QAAQC,IAAI,kFACZX,EAAIoE,QACJsT,GAAc,MAEhB,SAAC9W,EAAKC,GAEJH,QAAQC,KAAKE,EAAiB,qBAAkB,IAAM,4BAAUD,QAInE,IAGD,kBAAC1G,EAAA,EAAD,CAAWE,SAAS,MAClB,kBAACnD,EAAA,EAAD,CAAYkD,UAAU,KAAKjD,QAAQ,MAAnC,iBAGA,kBAACD,EAAA,EAAD,CAAYkD,UAAU,OAAOjD,QAAQ,SAArC,sCAGA,kBAACqE,EAAA,EAAD,CACEN,WAAS,EACT6K,UAAW2R,EACXvgB,QAAQ,WACRsE,QAAS,WACP3C,EAAMiD,QAAQC,KAAK,WALvB,uBC/BA4b,GAAaC,gBAAK,kBAAM,iCAuCfC,GArCf,uKAEI,OACE,oCACE,kBAAC,IAAD,KACE,kBAAC,IAAD,CAAUC,OAAO,EAAMC,KAAK,IAAItQ,GAAG,UACnC,kBAAC,IAAD,CAAO0P,KAAK,SACV,kBAACve,EAAa7C,KAAK8C,QAErB,kBAAC,IAAD,CAAOse,KAAK,gBACV,kBAAC,GAAoBphB,KAAK8C,QAE5B,kBAAC,IAAD,CAAOse,KAAK,QAAQhd,UAAW6d,KAC/B,kBAAC,IAAD,CAAOb,KAAK,UAAUhd,UAAW8d,KACjC,kBAAC,IAAD,CAAUH,OAAO,EAAMC,KAAK,SAAStQ,GAAG,iBACxC,kBAAC,IAAD,CAAO0P,KAAK,eAAehd,UAAWwd,KACtC,kBAAC,IAAD,CAAOR,KAAK,oBACV,kBAAC,GAAD,eAAiBxM,WAAYqE,IAAejZ,KAAK8C,SAEnD,kBAAC,IAAD,CAAOse,KAAK,eAAeW,OAAK,GAC9B,kBAAC,GAAD,eAAiBnN,WAAYmH,IAAW/b,KAAK8C,SAE/C,kBAAC,IAAD,CAAOse,KAAK,qBACV,kBAAC,GAAD,eAAiBxM,WAAYuM,IAAYnhB,KAAK8C,SAEhD,kBAAC,IAAD,CAAOse,KAAK,iBACV,kBAAC,GAAD,eAAiBxM,WAAY6L,IAAYzgB,KAAK8C,SAEhD,kBAAC,IAAD,CAAOse,KAAK,mBACV,kBAAC,GAAD,eAAiBxM,WAAY6I,IAAczd,KAAK8C,eA7B5D,GAA4Bqf,IAAMjS,WCL5BkS,I,OAAiBC,eACjBC,GAAe,IAAIC,cACnBxc,GAAUyc,+BAAqBJ,GAAgBE,IA4BtCG,G,uKAxBX,OACE,kBAAC,WAAD,CAAUC,SAAU,4CAClB,kBAACpe,EAAA,EAAD,MACA,kBAAC,IAAD,CACEmL,SAAS,aACTkT,UAAW,IACXC,iBAAiB,EACjBC,aAAa,EACbC,cAAY,EACZC,KAAK,EACLC,kBAAgB,EAChBC,WAAS,EACTC,cAAY,IAEd,kBAAC,IAAaC,EACZ,kBAAC,IAAD,CAAQpd,QAASA,IACf,kBAAC,IAAD,CAAO3B,UAAW0d,Y,GAlBZK,IAAMjS,WCTxBkT,IAAS1J,OAAO,kBAAC,GAAD,MAASzO,SAASoY,eAAe,W","file":"static/js/main.d06d227c.chunk.js","sourcesContent":["// 放所有 http 请求\r\nimport { AxiosInstance } from 'axios'\r\nimport { createRequest, ReqType, Response, wrapSend } from './req'\r\n\r\nexport class Api {\r\n  request: AxiosInstance // 普通请求\r\n  down: AxiosInstance // 下载请求\r\n\r\n  constructor(request: ReqType) {\r\n    this.request = request.http\r\n    this.down = request.down\r\n  }\r\n\r\n  private download = async <T = any>(url = '', body: any = {}) => {\r\n    return await wrapSend<T>(() => {\r\n      return this.request.post<Response>(url, body, { responseType: 'blob' })\r\n    }, 'down')\r\n  }\r\n\r\n  private post = async <T = any>(url = '', body?: any) => {\r\n    return await wrapSend<T>(() => {\r\n      return this.request.post<Response>(url, body)\r\n    })\r\n  }\r\n\r\n  // 用户注册\r\n  signUp = (payload: any) => {\r\n    return this.post(`/api/v1/sign_up`, payload)\r\n  }\r\n\r\n  // 用户登录\r\n  signIn = (payload: any) => {\r\n    return this.post(`/api/v1/sign_in`, payload)\r\n  }\r\n\r\n  // 获取做题基本信息\r\n  getBasicInfo = (payload: any) => {\r\n    return this.post(`/api/v1/get_basic_info`, payload)\r\n  }\r\n\r\n  // 上传音频文件\r\n  uploadAudio = (payload: any) => {\r\n    return this.post(`/api/v1/upload`, payload)\r\n  }\r\n\r\n  // =====  admin  =====\r\n  adminLogin = (payload: any) => {\r\n    return this.post(`/api/v1/admin/login`, payload)\r\n  }\r\n\r\n  queryPapers = () => {\r\n    return this.post(`/api/v1/admin/query_papers`)\r\n  }\r\n\r\n  addPaper = (payload: any) => {\r\n    return this.post(`/api/v1/admin/add_paper`, payload)\r\n  }\r\n\r\n  editPaper = (payload: any) => {\r\n    return this.post(`/api/v1/admin/edit_paper`, payload)\r\n  }\r\n\r\n  QueryUsers = () => {\r\n    return this.post(`/api/v1/admin/query_users`)\r\n  }\r\n\r\n  deleteUser = (payload: any) => {\r\n    return this.post(`/api/v1/admin/delete_user`, payload)\r\n  }\r\n\r\n  QueryAnswers = (payload: any) => {\r\n    return this.post(`/api/v1/admin/query_answers`, payload)\r\n  }\r\n\r\n  deleteAnswers = (payload: any) => {\r\n    return this.post(`/api/v1/admin/clear_answers`, payload)\r\n  }\r\n\r\n  querySettings = () => {\r\n    return this.post(`/api/v1/admin/query_settings`)\r\n  }\r\n\r\n  updateSetting = (payload: any) => {\r\n    return this.post(`/api/v1/admin/update_setting`, payload)\r\n  }\r\n}\r\n\r\nconst getAPI = (request: ReqType) => new Api(request)\r\n\r\nexport default getAPI(createRequest())\r\n","import axios, { AxiosInstance, AxiosPromise } from 'axios'\r\n\r\nexport interface ReqType {\r\n  http: AxiosInstance\r\n  down: AxiosInstance\r\n}\r\n\r\nexport interface Response {\r\n  success: boolean\r\n  info?: string\r\n  data: any\r\n}\r\n\r\nexport interface Res<T> {\r\n  success: boolean\r\n  info?: string\r\n  data?: T\r\n}\r\n\r\ntype requestFun = () => AxiosPromise<Response>\r\n\r\nexport const createRequest = (): ReqType => {\r\n  const common = {\r\n    baseURL: '',\r\n    headers: {\r\n      'Content-Type': 'application/json',\r\n      Token: sessionStorage.getItem('token')\r\n    }\r\n  }\r\n  const instance = axios.create(common)\r\n  return {\r\n    http: instance,\r\n    down: axios.create({ ...common, responseType: 'blob' })\r\n  }\r\n}\r\n\r\nexport const wrapSend = async <T>(requestFunc: requestFun, type?: string): Promise<Res<T>> => {\r\n  let response\r\n  try {\r\n    const res = await requestFunc()\r\n    const { data } = res\r\n    response = {\r\n      success: type ? true : data.success,\r\n      info: data.info,\r\n      data: type ? data : data.data\r\n    }\r\n  } catch (err) {\r\n    const { data } = err.response\r\n    if (err.response.status === 403) {\r\n      setTimeout(() => {\r\n        sessionStorage.clear()\r\n        window.location.replace('/admin/login')\r\n      }, 2000)\r\n      return {\r\n        info: 'Your login information is invalid, please login again!',\r\n        success: false\r\n      }\r\n    }\r\n    if (err.response.status === 400) {\r\n      return {\r\n        success: data.success,\r\n        info: data.info,\r\n        data: data\r\n      }\r\n    }\r\n    response = {\r\n      success: data.success,\r\n      info: err.response.status + ' ' + err.response.statusText,\r\n      data: data\r\n    }\r\n  }\r\n  return response\r\n}\r\n","class Root {}\r\n\r\nexport default new Root()\r\n","export const KeyUserInfo = 'user_info'\r\nexport const KeyAdminToken = 'token'\r\n\r\nexport const storageSet = (key: string, obj: object) => {\r\n  sessionStorage.setItem(key, JSON.stringify(obj))\r\n}\r\n\r\nexport const storageGet = (key: string): object | null => {\r\n  const flattenedObj = sessionStorage.getItem(key)\r\n  if (!flattenedObj) {\r\n    return null\r\n  }\r\n  return JSON.parse(flattenedObj)\r\n}\r\n","import React, { ChangeEvent, useState } from 'react'\r\nimport Avatar from '@material-ui/core/Avatar'\r\nimport Button from '@material-ui/core/Button'\r\nimport CssBaseline from '@material-ui/core/CssBaseline'\r\nimport TextField from '@material-ui/core/TextField'\r\nimport Link from '@material-ui/core/Link'\r\nimport Grid from '@material-ui/core/Grid'\r\nimport Box from '@material-ui/core/Box'\r\nimport HeadsetMicOutlinedIcon from '@material-ui/icons/HeadsetMicOutlined'\r\nimport Typography from '@material-ui/core/Typography'\r\nimport { createStyles, makeStyles, Theme } from '@material-ui/core/styles'\r\nimport Container from '@material-ui/core/Container'\r\nimport api from 'api'\r\nimport { toast } from 'react-toastify'\r\nimport { KeyUserInfo, storageSet } from 'global/storage'\r\nimport { IsValidEmail } from 'utils/emailCheck'\r\n\r\n// 本页面逻辑, 先登录(只用填email), 如果账户不存在则展示注册逻辑\r\n\r\nfunction Copyright() {\r\n  return (\r\n    <Typography variant=\"body2\" color=\"textSecondary\" align=\"center\">\r\n      {'Copyright © '}\r\n      <Link color=\"inherit\" href=\"https://material-ui.com/\">\r\n        Your Website\r\n      </Link>{' '}\r\n      {new Date().getFullYear()}\r\n      {'.'}\r\n    </Typography>\r\n  )\r\n}\r\n\r\nconst useStyles = makeStyles((theme: Theme) =>\r\n  createStyles({\r\n    paper: {\r\n      marginTop: theme.spacing(8),\r\n      display: 'flex',\r\n      flexDirection: 'column',\r\n      alignItems: 'center'\r\n    },\r\n    avatar: {\r\n      margin: theme.spacing(1),\r\n      backgroundColor: theme.palette.primary.light\r\n    },\r\n    form: {\r\n      width: '100%', // Fix IE 11 issue.\r\n      marginTop: theme.spacing(3)\r\n    },\r\n    submit: {\r\n      margin: theme.spacing(3, 0, 2)\r\n    }\r\n  })\r\n)\r\n\r\ninterface UserInfo {\r\n  email: string\r\n  name: string\r\n  chinese_class: string\r\n  hks_level: string\r\n  ethnic_background: string\r\n}\r\n\r\ntype label = 'email' | 'name' | 'chinese_class' | 'hks_level' | 'ethnic_background'\r\n\r\nexport default function InfoPage(props: any) {\r\n  const classes = useStyles()\r\n  const [userInfo, setUserInfo] = useState({\r\n    email: '',\r\n    name: '',\r\n    chinese_class: '',\r\n    hks_level: '',\r\n    ethnic_background: ''\r\n  })\r\n  const [emailInvalid, setEmailInvalid] = useState(false)\r\n  const [needSignUp, setNeedSignUp] = useState(false)\r\n\r\n  const onEdit = (l: label) => (e: ChangeEvent<HTMLInputElement>) => {\r\n    const newUserInfo: UserInfo = userInfo\r\n    newUserInfo[l] = e.currentTarget.value\r\n    setUserInfo(newUserInfo)\r\n    if (l === 'email') {\r\n      setEmailInvalid(!IsValidEmail(e.currentTarget.value))\r\n    }\r\n  }\r\n\r\n  const signUp = () => {\r\n    if (emailInvalid) {\r\n      toast.error('incorrect email address')\r\n      return\r\n    }\r\n    api.signUp(userInfo).then(resp => {\r\n      if (!resp.success) {\r\n        toast.error('🚀 ' + resp.info)\r\n      } else {\r\n        storageSet(KeyUserInfo, resp.data.user) // 这里后端直接回传完整用户信息\r\n        props.history.push('/instruction')\r\n      }\r\n    })\r\n  }\r\n\r\n  const signIn = () => {\r\n    if (emailInvalid) {\r\n      toast.error('incorrect email address')\r\n      return\r\n    }\r\n    api.signIn({ email: userInfo.email }).then(resp => {\r\n      if (!resp.success) {\r\n        // 根据返回值判断, 如果是用户不存在, 则转为注册页面\r\n        toast.error('🚀 ' + resp.info)\r\n      } else {\r\n        if (resp.data.user_not_exist) {\r\n          setNeedSignUp(true)\r\n        } else {\r\n          toast.info('🦄 welcome ' + resp.data.user.name)\r\n          storageSet(KeyUserInfo, resp.data.user) // 这里后端直接回传完整用户信息\r\n          props.history.push('/instruction')\r\n        }\r\n      }\r\n    })\r\n  }\r\n\r\n  return (\r\n    <Container component=\"main\" maxWidth=\"xs\">\r\n      <CssBaseline />\r\n      <div className={classes.paper}>\r\n        <Avatar className={classes.avatar}>\r\n          <HeadsetMicOutlinedIcon />\r\n        </Avatar>\r\n        <Typography component=\"h1\" variant=\"h5\">\r\n          Chinese Character Reading Test\r\n        </Typography>\r\n        {/*<Typography component=\"h3\" variant=\"subtitle1\" style={{ color: 'grey' }}>*/}\r\n        {/*  Instructions: xxxx*/}\r\n        {/*</Typography>*/}\r\n        <Box className={classes.form}>\r\n          <Grid container spacing={2}>\r\n            <Grid item xs={12}>\r\n              <TextField\r\n                error={emailInvalid}\r\n                helperText={emailInvalid ? 'Invalid Email Address' : null}\r\n                variant=\"outlined\"\r\n                required\r\n                fullWidth\r\n                id=\"email\"\r\n                label=\"Email Address\"\r\n                name=\"email\"\r\n                autoComplete=\"email\"\r\n                autoFocus\r\n                onChange={onEdit('email')}\r\n              >\r\n                {userInfo.email}\r\n              </TextField>\r\n            </Grid>\r\n            {needSignUp && (\r\n              <>\r\n                <Grid item xs={12}>\r\n                  <TextField\r\n                    name=\"name\"\r\n                    variant=\"outlined\"\r\n                    required\r\n                    fullWidth\r\n                    id=\"name\"\r\n                    label=\"Name\"\r\n                    autoComplete=\"name\"\r\n                    onChange={onEdit('name')}\r\n                  >\r\n                    {userInfo.name}\r\n                  </TextField>\r\n                </Grid>\r\n                <Grid item xs={12}>\r\n                  <TextField\r\n                    variant=\"outlined\"\r\n                    required\r\n                    fullWidth\r\n                    id=\"chineseClass\"\r\n                    label=\"Chinese Class\"\r\n                    name=\"chineseClass\"\r\n                    onChange={onEdit('chinese_class')}\r\n                  >\r\n                    {userInfo.chinese_class}\r\n                  </TextField>\r\n                </Grid>\r\n                <Grid item xs={12}>\r\n                  <TextField\r\n                    variant=\"outlined\"\r\n                    required\r\n                    fullWidth\r\n                    id=\"hksLevel\"\r\n                    label=\"HSK Level\"\r\n                    name=\"hksLevel\"\r\n                    onChange={onEdit('hks_level')}\r\n                  >\r\n                    {userInfo.hks_level}\r\n                  </TextField>\r\n                </Grid>\r\n                <Grid item xs={12}>\r\n                  <TextField\r\n                    variant=\"outlined\"\r\n                    required\r\n                    fullWidth\r\n                    id=\"ethnicBackground\"\r\n                    label=\" Ethnic Background (Kinh/Hoa/...)\"\r\n                    name=\"ethnicBackground\"\r\n                    onChange={onEdit('ethnic_background')}\r\n                  >\r\n                    {userInfo.ethnic_background}\r\n                  </TextField>\r\n                </Grid>\r\n              </>\r\n            )}\r\n          </Grid>\r\n          <Button\r\n            type=\"submit\"\r\n            fullWidth\r\n            variant=\"contained\"\r\n            color=\"primary\"\r\n            className={classes.submit}\r\n            onClick={needSignUp ? signUp : signIn}\r\n          >\r\n            {needSignUp ? 'sign up' : 'sign in'}\r\n          </Button>\r\n          {/*<Grid container justify=\"flex-end\">*/}\r\n          {/*  <Grid item>*/}\r\n          {/*    <Link*/}\r\n          {/*      href=\"/instruction\"*/}\r\n          {/*      variant=\"body2\"*/}\r\n          {/*      onClick={() => {*/}\r\n          {/*        storageSet(KeyUserInfo, userInfo)*/}\r\n          {/*      }}*/}\r\n          {/*    >*/}\r\n          {/*      临时转到instruction页面*/}\r\n          {/*    </Link>*/}\r\n          {/*  </Grid>*/}\r\n          {/*</Grid>*/}\r\n        </Box>\r\n      </div>\r\n      <Box mt={5}>\r\n        <Copyright />\r\n      </Box>\r\n    </Container>\r\n  )\r\n}\r\n","export const IsValidEmail = email => {\r\n  const reg = /^([a-z0-9_.-]+)@([\\da-z.]+)\\.([a-z.]{2,6})$/\r\n  return reg.test(email)\r\n}\r\n","import React, { Component, createRef } from 'react'\r\nimport './index.css'\r\nimport api from '../../api'\r\nimport Recorder from 'recorder-core'\r\nimport 'recorder-core/src/engine/mp3'\r\nimport 'recorder-core/src/engine/mp3-engine'\r\nimport 'recorder-core/src/extensions/waveview'\r\nimport { styled, ThemeProvider, withStyles } from '@material-ui/core/styles'\r\nimport { blue, green, red } from '@material-ui/core/colors'\r\nimport { CountdownCircleTimer } from 'react-countdown-circle-timer'\r\nimport Button from '@material-ui/core/Button'\r\nimport Container from '@material-ui/core/Container'\r\nimport Grid from '@material-ui/core/Grid'\r\nimport Paper from '@material-ui/core/Paper'\r\nimport MobileStepper from '@material-ui/core/MobileStepper'\r\nimport TextField from '@material-ui/core/TextField'\r\nimport IconButton from '@material-ui/core/IconButton'\r\nimport Snackbar from '@material-ui/core/Snackbar'\r\nimport Backdrop from '@material-ui/core/Backdrop'\r\nimport CircularProgress from '@material-ui/core/CircularProgress'\r\nimport KeyboardArrowLeft from '@material-ui/icons/KeyboardArrowLeft'\r\nimport KeyboardArrowRight from '@material-ui/icons/KeyboardArrowRight'\r\nimport MicNone from '@material-ui/icons/MicNone'\r\nimport PlayCircleOutlineIcon from '@material-ui/icons/PlayCircleOutline'\r\nimport { KeyUserInfo, storageGet } from '../../global/storage'\r\nimport { toast } from 'react-toastify'\r\nimport moment from 'moment'\r\nimport Alert from '@material-ui/lab/Alert'\r\nimport { disableBodyScroll } from 'body-scroll-lock'\r\nimport Box from '@material-ui/core/Box'\r\nimport { isMobile } from 'react-device-detect'\r\n\r\nconst Word = styled(Paper)({\r\n  fontSize: 'xxx-large',\r\n  fontFamily: 'cursive',\r\n  fontWeight: 'bold',\r\n  display: 'flex',\r\n  alignItems: 'center',\r\n  justifyContent: 'center'\r\n})\r\n\r\nconst ValidationTextField = withStyles({\r\n  root: {\r\n    marginTop: 15,\r\n    '& input:valid + fieldset': {\r\n      borderColor: 'green',\r\n      borderWidth: 2\r\n    },\r\n    '& input:invalid + fieldset': {\r\n      borderColor: 'lightBlue',\r\n      borderWidth: 2\r\n    },\r\n    '& input:valid:focus + fieldset': {\r\n      borderLeftWidth: 6,\r\n      padding: '4px !important' // override inline-style\r\n    }\r\n  }\r\n})(TextField)\r\n\r\nconst Progress = styled(MobileStepper)({\r\n  root: {\r\n    maxWidth: 400,\r\n    flexGrow: 1\r\n  }\r\n})\r\n\r\nconst defaultAudioConf = {\r\n  bitRate: 128, // kbps\r\n  sampleRate: 16000 // hz\r\n}\r\n\r\nexport default class Index extends Component {\r\n  constructor(props) {\r\n    super(props)\r\n    this.state = {\r\n      begin: false, // 测试开始标识， 在获取BasicInfo后置为true\r\n      status: 'init', // 录音状态\r\n      src: '', // 用于在当前字词 播放音频，给用户听\r\n      input: '', // 当前字词的翻译\r\n      audioConf: defaultAudioConf,\r\n      wordIndex: 0,\r\n      reRenderTimer: false,\r\n      words: [' '],\r\n      warningPopUp: false, // 如果长按不放到时间结束， 需要弹出提醒\r\n      uploadingLock: false, // 上传时锁定页面\r\n      buttonDisabled: false, // 用户按键防抖\r\n      paper_info: {\r\n        paper_name: '',\r\n        paper_version: '',\r\n        paper_id: 0,\r\n        interval: 10 // 秒\r\n      }\r\n    }\r\n    this.recorded = false // 用户标识当前字有没有录音过， 如果没有， 就不用了interval等待blob了\r\n    this.audioBlob = null // 因为音频生成有一定延时， 需要用interval轮询， 避免在低配机器上发生漏传\r\n    this.translationRef = createRef()\r\n    this.audioPlayRef = createRef()\r\n    this.recordButtonRef = createRef()\r\n    this.rec = Recorder({\r\n      type: 'mp3',\r\n      bitRate: defaultAudioConf.bitRate,\r\n      sampleRate: defaultAudioConf.sampleRate,\r\n      disableEnvInFix: false,\r\n      onProcess: (buffers, powerLevel, bufferDuration, bufferSampleRate) => {\r\n        this.wave.input(buffers[buffers.length - 1], powerLevel, bufferSampleRate) //输入音频数据，更新显示波形\r\n      }\r\n    })\r\n    this.userInfo = storageGet(KeyUserInfo)\r\n  }\r\n\r\n  renderVisualization = () => {\r\n    return <div style={{ height: '50px' }} className=\"wave-box\" />\r\n  }\r\n\r\n  getBasicInfo = () => {\r\n    api.getBasicInfo({ uid: this.userInfo.id }).then(res => {\r\n      if (!res.success) {\r\n        toast.error(res.info)\r\n      } else {\r\n        // eslint-disable-next-line no-control-regex\r\n        const words = res.data.current_paper.words.split(RegExp('[ \\t\\n]+'))\r\n        if (res.data.progress_index >= words.length - 1) {\r\n          toast.info(\r\n            \"you've already finished current test, please wait util the next test released, \" +\r\n              \"if there's any issue, please contact your teacher\"\r\n          )\r\n          this.props.history.push('/finish')\r\n          return\r\n        }\r\n        this.setState(\r\n          {\r\n            audioConf: {\r\n              bitRate: res.data.global_setting['BitRate'], // kbps\r\n              sampleRate: res.data.global_setting['SampleRate'] // hz\r\n            },\r\n            wordIndex: res.data.progress_index + 1,\r\n            words: words,\r\n            paper_info: {\r\n              paper_name: res.data.current_paper.name,\r\n              paper_version: res.data.current_paper.version,\r\n              paper_id: res.data.current_paper.id,\r\n              interval: res.data.current_paper.interval\r\n            },\r\n            begin: true,\r\n            reRenderTimer: true\r\n          },\r\n          () => {\r\n            this.setState({ reRenderTimer: false })\r\n            disableBodyScroll(this.recordButtonRef.current)\r\n            this.wave = Recorder.WaveView({ elem: '.wave-box' })\r\n          }\r\n        )\r\n        this.beginTime = moment() // 用于计算每道题耗时\r\n      }\r\n    })\r\n  }\r\n\r\n  componentDidMount() {\r\n    if (this.userInfo == null) {\r\n      this.props.history.push('/info')\r\n      return\r\n    }\r\n    this.getBasicInfo()\r\n    this.rec.open(\r\n      () => {\r\n        this.wave = Recorder.WaveView({ elem: '.wave-box' }) // 创建wave对象\r\n        this.rec.close()\r\n      },\r\n      (msg, isUserNotAllow) => {\r\n        isUserNotAllow //用户拒绝未授权或不支持\r\n          ? toast.error('please allow the mic permission, refresh or restart the browser')\r\n          : toast.error('your device or web browser do not support audio recording, msg:' + msg)\r\n      }\r\n    )\r\n  }\r\n\r\n  uploadFile = (blob, duration, next) => {\r\n    const formData = new FormData()\r\n    if (blob) {\r\n      formData.append('record', blob, duration + '.mp3') // fileName 不重要,服务端自己设置文件名\r\n    }\r\n    formData.append('file_ext', 'mp3')\r\n    formData.append('paper_name', this.state.paper_info.paper_name)\r\n    formData.append('paper_version', this.state.paper_info.paper_version)\r\n    formData.append('paper_id', this.state.paper_info.paper_id + '')\r\n    formData.append('uid', this.userInfo.id)\r\n    formData.append('word_index', this.state.wordIndex)\r\n    formData.append('word', this.state.words[this.state.wordIndex])\r\n    formData.append('translation', this.state.input)\r\n    formData.append('duration', duration)\r\n    api.uploadAudio(formData).then(resp => {\r\n      if (!resp.success) {\r\n        toast.error(resp.info + \" -- if you can't go to next word, try refresh the page\")\r\n      } else {\r\n        next()\r\n      }\r\n    })\r\n  }\r\n\r\n  recStart = () => {\r\n    this.rec = Recorder({\r\n      type: 'mp3',\r\n      bitRate: this.state.audioConf.bitRate,\r\n      sampleRate: this.state.audioConf.sampleRate,\r\n      disableEnvInFix: false,\r\n      onProcess: (buffers, powerLevel, bufferDuration, bufferSampleRate) => {\r\n        this.wave.input(buffers[buffers.length - 1], powerLevel, bufferSampleRate) //输入音频数据，更新显示波形\r\n      }\r\n    })\r\n    this.rec.open(\r\n      () => {\r\n        this.rec.start()\r\n        const set = this.rec.set\r\n        console.log('录制中：' + set.type + ' ' + set.sampleRate + 'hz ' + set.bitRate + 'kbps')\r\n      },\r\n      (msg, isUserNotAllow) => {\r\n        console.log((isUserNotAllow ? 'UserNotAllow，' : '') + '无法录音:' + msg, 1)\r\n      }\r\n    )\r\n  }\r\n\r\n  recStop() {\r\n    this.rec.stop(\r\n      (blob, duration) => {\r\n        this.rec.close() // 释放录音资源，当然可以不释放，后面可以连续调用start；但不释放时手机端播放音频有杂音\r\n        console.log('audio duration: ', duration)\r\n        this.audioBlob = blob\r\n        this.setState({ src: window.URL.createObjectURL(blob) })\r\n      },\r\n      msg => {\r\n        console.log('录音失败:' + msg, 1)\r\n        this.rec.close() //可以通过stop方法的第3个参数来自动调用close\r\n      }\r\n    )\r\n  }\r\n\r\n  mouseDown = () => {\r\n    this.recorded = true\r\n    this.setState({ status: 'recording' })\r\n    this.recStart()\r\n    document.onmouseup = this.mouseUp\r\n  }\r\n\r\n  mouseUp = () => {\r\n    document.onmouseup = null\r\n    this.recStop()\r\n    // 说明长按且超时了\r\n    if (this.state.warningPopUp) {\r\n      this.uploadLoop(this.state.paper_info.interval * 1000)\r\n    } else {\r\n      this.translationRef.current.lastChild.firstChild.focus()\r\n    }\r\n    this.setState({ status: 'stopped', warningPopUp: false })\r\n  }\r\n\r\n  touchUp = () => {\r\n    this.recStop()\r\n    // 说明长按且超时了\r\n    if (this.state.warningPopUp) {\r\n      this.uploadLoop(this.state.paper_info.interval * 1000)\r\n    } else {\r\n      this.translationRef.current.lastChild.firstChild.focus()\r\n    }\r\n    this.setState({ status: 'stopped', warningPopUp: false })\r\n  }\r\n\r\n  touchDown = () => {\r\n    this.recorded = true\r\n    this.setState({ status: 'recording' })\r\n    this.recStart()\r\n  }\r\n\r\n  playAndStop = () => {\r\n    this.audioPlayRef.current.play()\r\n  }\r\n\r\n  timesUpTouchUp = duration => () => {\r\n    document.onmouseup = null\r\n    this.uploadLoop(duration)\r\n    this.setState({ status: 'stopped', warningPopUp: false })\r\n  }\r\n\r\n  onNext = timesUp => () => {\r\n    const duration = timesUp ? this.state.paper_info.interval * 1000 : moment().diff(this.beginTime, 'milliseconds')\r\n    if (timesUp && this.state.status === 'recording') {\r\n      document.onmouseup = this.timesUpTouchUp(duration)\r\n      this.setState({ warningPopUp: true })\r\n      this.recStop()\r\n    } else {\r\n      this.uploadLoop(duration)\r\n    }\r\n  }\r\n\r\n  uploadLoop = duration => {\r\n    this.setState({ uploadingLock: true })\r\n    const iv = setInterval(() => {\r\n      if (this.recorded && !this.audioBlob) {\r\n        return\r\n      }\r\n      clearInterval(iv)\r\n      this.recorded = false\r\n      this.uploadFile(this.audioBlob, duration, () => {\r\n        window.URL.revokeObjectURL(this.state.src) // 清除 dataUrl\r\n        if (this.state.wordIndex >= this.state.words.length - 1) {\r\n          this.props.history.push('/finish')\r\n          return\r\n        }\r\n        this.audioBlob = null\r\n        this.setState(\r\n          {\r\n            wordIndex: this.state.wordIndex + 1,\r\n            reRenderTimer: true,\r\n            src: '',\r\n            input: '',\r\n            uploadingLock: false,\r\n            buttonDisabled: true\r\n          },\r\n          () => {\r\n            this.beginTime = moment() // 用于计算每道题耗时\r\n            this.setState({ reRenderTimer: false })\r\n          }\r\n        )\r\n        setTimeout(() => {\r\n          this.setState({ buttonDisabled: false })\r\n        }, 999)\r\n      })\r\n    }, 250)\r\n  }\r\n\r\n  updateAudioConf = (sampleRate, bitRate) => {\r\n    this.setState({ audioConf: { sampleRate: sampleRate, bitRate: bitRate } })\r\n  }\r\n\r\n  renderCountDown = wordIndex => {\r\n    return (\r\n      <CountdownCircleTimer\r\n        isPlaying={!this.state.uploadingLock}\r\n        duration={this.state.paper_info.interval}\r\n        size={60}\r\n        strokeWidth={8}\r\n        colors={[\r\n          [green.A200, 0.33],\r\n          [blue['300'], 0.33],\r\n          [red['500'], 0.34]\r\n        ]}\r\n        onComplete={totalElapsedTime => {\r\n          console.log(totalElapsedTime, wordIndex, 'on complete')\r\n          this.onNext(true)()\r\n        }}\r\n      >\r\n        {({ remainingTime }) => {\r\n          if (remainingTime === 1) {\r\n            setTimeout(() => {\r\n              this.setState({ buttonDisabled: true })\r\n            }, 888) // 最后0.1秒不给点击\r\n          }\r\n          return <div style={{ fontSize: 'xx-large' }}>{remainingTime}</div>\r\n        }}\r\n      </CountdownCircleTimer>\r\n    )\r\n  }\r\n\r\n  renderWarningPopUp = () => {\r\n    return (\r\n      <Snackbar open={this.state.warningPopUp} anchorOrigin={{ vertical: 'top', horizontal: 'center' }}>\r\n        <Alert severity=\"warning\">Sorry, time's up! Release button to enter the next word...</Alert>\r\n      </Snackbar>\r\n    )\r\n  }\r\n\r\n  render() {\r\n    const { begin, status, src, words, wordIndex, reRenderTimer, uploadingLock, buttonDisabled } = this.state\r\n    const currentWord = words[wordIndex]\r\n    const recording = status === 'recording'\r\n\r\n    return (\r\n      <Container maxWidth=\"sm\" className=\"demo-page\">\r\n        <Backdrop open={!begin || uploadingLock} style={{ zIndex: 1201 }}>\r\n          <CircularProgress color=\"inherit\" size={150} thickness={2} />\r\n        </Backdrop>\r\n        {this.renderWarningPopUp()}\r\n        <Grid container spacing={2} alignItems={'center'}>\r\n          <Grid item xs={12}>\r\n            <span style={{ color: 'red' }}>DEBUG: Is current device mobile: </span>\r\n            <span style={{ color: 'red', fontSize: 'large' }}>{isMobile ? 'yes' : 'no'}</span>\r\n          </Grid>\r\n          <Grid item xs={12} style={{ display: 'flex', justifyContent: 'center' }}>\r\n            {!reRenderTimer && this.renderCountDown(wordIndex)}\r\n          </Grid>\r\n          <Grid item xs={12}>\r\n            <div>\r\n              <Word>{currentWord}</Word>\r\n            </div>\r\n          </Grid>\r\n          <Grid item xs={10}>\r\n            {this.renderVisualization()}\r\n          </Grid>\r\n          <Grid item xs={2}>\r\n            <IconButton color=\"primary\" variant=\"outlined\" onClick={this.playAndStop} style={{ float: 'right' }}>\r\n              <PlayCircleOutlineIcon style={{ fontSize: 50 }} />\r\n            </IconButton>\r\n          </Grid>\r\n          <audio ref={this.audioPlayRef} src={src} />\r\n          <Grid item xs={12}>\r\n            <ValidationTextField\r\n              ref={this.translationRef}\r\n              label=\"Input translation here\"\r\n              fullWidth\r\n              required\r\n              autoComplete=\"off\"\r\n              variant=\"outlined\"\r\n              id=\"validation-outlined-input\"\r\n              value={this.state.input}\r\n              onChange={e => {\r\n                this.setState({ input: e.currentTarget.value })\r\n              }}\r\n            />\r\n          </Grid>\r\n          <Grid item xs={12} style={{ display: 'flex', justifyContent: 'center' }}>\r\n            <IconButton\r\n              variant=\"round\"\r\n              ref={this.recordButtonRef}\r\n              className=\"nocopy\"\r\n              onMouseDown={isMobile ? undefined : this.mouseDown}\r\n              onTouchStart={this.touchDown}\r\n              onTouchEnd={this.touchUp}\r\n              onContextMenu={e => {\r\n                e.preventDefault()\r\n              }}\r\n              onMouseMove={e => {\r\n                e.preventDefault()\r\n              }}\r\n              size=\"medium\"\r\n              color={recording ? 'default' : 'primary'}\r\n              style={{ position: 'absolute', bottom: 50, border: 'thick solid' }}\r\n            >\r\n              <MicNone style={{ fontSize: 80 }} />\r\n            </IconButton>\r\n          </Grid>\r\n          <Grid item xs={12} style={{ display: 'flex', justifyContent: 'center' }}>\r\n            {/*MuiContainer-maxWidthSm 复用container的CSS， @media 以及 maxWidth：600px*/}\r\n            <Box position=\"absolute\" bottom={0} className=\"MuiContainer-maxWidthSm\" width=\"100%\">\r\n              <Progress\r\n                variant=\"progress\"\r\n                steps={words.length}\r\n                position=\"static\"\r\n                activeStep={wordIndex}\r\n                nextButton={\r\n                  <Button size=\"small\" onClick={this.onNext()} disabled={buttonDisabled}>\r\n                    {wordIndex < words.length - 1 ? 'Next' : 'Finish'}\r\n                    {ThemeProvider.direction === 'rtl' ? <KeyboardArrowLeft /> : <KeyboardArrowRight />}\r\n                  </Button>\r\n                }\r\n                // backButton={\r\n                //   <Button size=\"small\" onClick={this.onClickBack} disabled>\r\n                //     {ThemeProvider.direction === 'rtl' ? <KeyboardArrowRight /> : <KeyboardArrowLeft />}\r\n                //     Back\r\n                //   </Button>\r\n                // }\r\n              />\r\n            </Box>\r\n          </Grid>\r\n        </Grid>\r\n      </Container>\r\n    )\r\n  }\r\n}\r\n","import React from 'react'\r\nimport { Container, Typography } from '@material-ui/core'\r\n\r\nconst Finish = () => {\r\n  return (\r\n    <Container>\r\n      <Typography component=\"h1\" variant=\"h1\">\r\n        The End, Thank you !\r\n      </Typography>\r\n    </Container>\r\n  )\r\n}\r\n\r\nexport default Finish\r\n","import React from 'react'\r\nimport { NavLink as RouterLink } from 'react-router-dom'\r\nimport clsx from 'clsx'\r\nimport PropTypes from 'prop-types'\r\nimport { Button, ListItem, makeStyles } from '@material-ui/core'\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n  item: {\r\n    display: 'flex',\r\n    paddingTop: 0,\r\n    paddingBottom: 0\r\n  },\r\n  button: {\r\n    color: theme.palette.text.secondary,\r\n    fontWeight: theme.typography.fontWeightMedium,\r\n    justifyContent: 'flex-start',\r\n    letterSpacing: 0,\r\n    padding: '10px 8px',\r\n    textTransform: 'none',\r\n    width: '100%'\r\n  },\r\n  icon: {\r\n    marginRight: theme.spacing(1)\r\n  },\r\n  title: {\r\n    marginRight: 'auto'\r\n  },\r\n  active: {\r\n    color: theme.palette.primary.main,\r\n    '& $title': {\r\n      fontWeight: theme.typography.fontWeightMedium\r\n    },\r\n    '& $icon': {\r\n      color: theme.palette.primary.main\r\n    }\r\n  }\r\n}))\r\n\r\nconst NavItem = ({ className, href, icon: Icon, title, ...rest }) => {\r\n  const classes = useStyles()\r\n\r\n  return (\r\n    <ListItem className={clsx(classes.item, className)} disableGutters {...rest}>\r\n      <Button activeClassName={classes.active} className={classes.button} component={RouterLink} to={href}>\r\n        {Icon && <Icon className={classes.icon} size=\"20\" />}\r\n        <span className={classes.title}>{title}</span>\r\n      </Button>\r\n    </ListItem>\r\n  )\r\n}\r\n\r\nNavItem.propTypes = {\r\n  className: PropTypes.string,\r\n  href: PropTypes.string,\r\n  icon: PropTypes.elementType,\r\n  title: PropTypes.string\r\n}\r\n\r\nexport default NavItem\r\n","import React, { useEffect } from 'react'\r\nimport { Link as RouterLink } from 'react-router-dom'\r\nimport PropTypes from 'prop-types'\r\nimport { Avatar, Box, Divider, Drawer, Hidden, List, Typography, makeStyles } from '@material-ui/core'\r\nimport {\r\n  BarChart as BarChartIcon,\r\n  Settings as SettingsIcon,\r\n  Users as UsersIcon,\r\n  BookOpen as BookIcon\r\n} from 'react-feather'\r\nimport NavItem from './NavItem'\r\nimport { useLocation } from 'react-router'\r\n\r\nconst user = {\r\n  avatar: '/static/images/avatars/avatar_6.png',\r\n  jobTitle: \"yep, that's me\",\r\n  name: 'The Admin'\r\n}\r\n\r\nconst items = [\r\n  {\r\n    href: '/admin/dashboard',\r\n    icon: BarChartIcon,\r\n    title: 'Dashboard'\r\n  },\r\n  {\r\n    href: '/admin/users',\r\n    icon: UsersIcon,\r\n    title: 'Users'\r\n  },\r\n  {\r\n    href: '/admin/papers',\r\n    icon: BookIcon,\r\n    title: 'Papers'\r\n  },\r\n  {\r\n    href: '/admin/settings',\r\n    icon: SettingsIcon,\r\n    title: 'Settings'\r\n  }\r\n]\r\n\r\nconst useStyles = makeStyles(() => ({\r\n  mobileDrawer: {\r\n    width: 256\r\n  },\r\n  desktopDrawer: {\r\n    width: 256,\r\n    top: 64,\r\n    height: 'calc(100% - 64px)'\r\n  },\r\n  avatar: {\r\n    cursor: 'pointer',\r\n    width: 64,\r\n    height: 64\r\n  }\r\n}))\r\n\r\nconst NavBar = ({ onMobileClose, openMobile }) => {\r\n  const classes = useStyles()\r\n  const location = useLocation()\r\n\r\n  useEffect(() => {\r\n    if (openMobile && onMobileClose) {\r\n      onMobileClose()\r\n    }\r\n    // eslint-disable-next-line react-hooks/exhaustive-deps\r\n  }, [location.pathname])\r\n\r\n  const content = (\r\n    <Box height=\"100%\" display=\"flex\" flexDirection=\"column\">\r\n      <Box alignItems=\"center\" display=\"flex\" flexDirection=\"column\" p={2}>\r\n        <Avatar className={classes.avatar} component={RouterLink} src={user.avatar} to=\"/admin/dashboard\" />\r\n        <Typography className={classes.name} color=\"textPrimary\" variant=\"h5\">\r\n          {user.name}\r\n        </Typography>\r\n        <Typography color=\"textSecondary\" variant=\"body2\">\r\n          {user.jobTitle}\r\n        </Typography>\r\n      </Box>\r\n      <Divider />\r\n      <Box p={2}>\r\n        <List>\r\n          {items.map(item => (\r\n            <NavItem href={item.href} key={item.title} title={item.title} icon={item.icon} />\r\n          ))}\r\n        </List>\r\n      </Box>\r\n      <Box flexGrow={1} />\r\n    </Box>\r\n  )\r\n\r\n  return (\r\n    <>\r\n      <Hidden lgUp>\r\n        <Drawer\r\n          anchor=\"left\"\r\n          classes={{ paper: classes.mobileDrawer }}\r\n          onClose={onMobileClose}\r\n          open={openMobile}\r\n          variant=\"temporary\"\r\n        >\r\n          {content}\r\n        </Drawer>\r\n      </Hidden>\r\n      <Hidden mdDown>\r\n        <Drawer anchor=\"left\" classes={{ paper: classes.desktopDrawer }} open variant=\"persistent\">\r\n          {content}\r\n        </Drawer>\r\n      </Hidden>\r\n    </>\r\n  )\r\n}\r\n\r\nNavBar.propTypes = {\r\n  onMobileClose: PropTypes.func,\r\n  openMobile: PropTypes.bool\r\n}\r\n\r\nNavBar.defaultProps = {\r\n  onMobileClose: () => {},\r\n  openMobile: false\r\n}\r\n\r\nexport default NavBar\r\n","import React from 'react'\r\n\r\nconst Logo = props => {\r\n  return <img alt=\"Logo\" src=\"/static/logo.svg\" {...props} />\r\n}\r\n\r\nexport default Logo\r\n","import React, { useState } from 'react'\r\nimport { Link as RouterLink } from 'react-router-dom'\r\nimport clsx from 'clsx'\r\nimport PropTypes from 'prop-types'\r\nimport { AppBar, Badge, Box, Hidden, IconButton, Toolbar, makeStyles } from '@material-ui/core'\r\nimport MenuIcon from '@material-ui/icons/Menu'\r\nimport NotificationsIcon from '@material-ui/icons/NotificationsOutlined'\r\nimport InputIcon from '@material-ui/icons/Input'\r\nimport Logo from 'components/Logo'\r\n\r\nconst useStyles = makeStyles(() => ({\r\n  root: {},\r\n  avatar: {\r\n    width: 60,\r\n    height: 60\r\n  }\r\n}))\r\n\r\nconst TopBar = ({ className, onMobileNavOpen, ...rest }) => {\r\n  const classes = useStyles()\r\n  const [notifications] = useState([])\r\n\r\n  return (\r\n    <AppBar className={clsx(classes.root, className)} elevation={0} {...rest}>\r\n      <Toolbar>\r\n        <RouterLink to=\"/\">\r\n          <Logo />\r\n        </RouterLink>\r\n        <Box flexGrow={1} />\r\n        <Hidden mdDown>\r\n          <IconButton color=\"inherit\">\r\n            <Badge badgeContent={notifications.length} color=\"primary\" variant=\"dot\">\r\n              <NotificationsIcon />\r\n            </Badge>\r\n          </IconButton>\r\n          <IconButton color=\"inherit\">\r\n            <InputIcon />\r\n          </IconButton>\r\n        </Hidden>\r\n        <Hidden lgUp>\r\n          <IconButton color=\"inherit\" onClick={onMobileNavOpen}>\r\n            <MenuIcon />\r\n          </IconButton>\r\n        </Hidden>\r\n      </Toolbar>\r\n    </AppBar>\r\n  )\r\n}\r\n\r\nTopBar.propTypes = {\r\n  className: PropTypes.string,\r\n  onMobileNavOpen: PropTypes.func\r\n}\r\n\r\nexport default TopBar\r\n","import React, { useState } from 'react'\r\nimport { makeStyles } from '@material-ui/core'\r\nimport NavBar from './NavBar'\r\nimport TopBar from './TopBar'\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n  root: {\r\n    backgroundColor: theme.palette.background.dark,\r\n    display: 'flex',\r\n    height: '100%',\r\n    overflow: 'hidden',\r\n    width: '100%'\r\n  },\r\n  wrapper: {\r\n    display: 'flex',\r\n    flex: '1 1 auto',\r\n    overflow: 'hidden',\r\n    paddingTop: 64,\r\n    [theme.breakpoints.up('lg')]: {\r\n      paddingLeft: 256\r\n    }\r\n  },\r\n  contentContainer: {\r\n    display: 'flex',\r\n    flex: '1 1 auto',\r\n    overflow: 'hidden'\r\n  },\r\n  content: {\r\n    flex: '1 1 auto',\r\n    height: '100%',\r\n    overflow: 'auto'\r\n  }\r\n}))\r\n\r\nconst DashboardLayout = props => {\r\n  const classes = useStyles()\r\n  const [isMobileNavOpen, setMobileNavOpen] = useState(false)\r\n\r\n  return (\r\n    <div className={classes.root}>\r\n      <TopBar onMobileNavOpen={() => setMobileNavOpen(true)} />\r\n      <NavBar onMobileClose={() => setMobileNavOpen(false)} openMobile={isMobileNavOpen} />\r\n      <div className={classes.wrapper}>\r\n        <div className={classes.contentContainer}>\r\n          <div className={classes.content}>\r\n            <props.components {...props} />\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default DashboardLayout\r\n","import React, { forwardRef } from 'react'\r\nimport { Helmet } from 'react-helmet'\r\nimport PropTypes from 'prop-types'\r\n\r\nconst Page = forwardRef(({ children, title = '', ...rest }, ref) => {\r\n  return (\r\n    <div ref={ref} {...rest}>\r\n      <Helmet>\r\n        <title>{title}</title>\r\n      </Helmet>\r\n      {children}\r\n    </div>\r\n  )\r\n})\r\n\r\nPage.propTypes = {\r\n  children: PropTypes.node.isRequired,\r\n  title: PropTypes.string\r\n}\r\n\r\nexport default Page\r\n","import React from 'react'\r\nimport { Bar } from 'react-chartjs-2'\r\nimport { Box, Button, Card, CardContent, CardHeader, Divider, useTheme, makeStyles, colors } from '@material-ui/core'\r\nimport ArrowDropDownIcon from '@material-ui/icons/ArrowDropDown'\r\nimport ArrowRightIcon from '@material-ui/icons/ArrowRight'\r\n\r\nconst useStyles = makeStyles(() => ({\r\n  root: {}\r\n}))\r\n\r\nconst Sales = props => {\r\n  const classes = useStyles()\r\n  const theme = useTheme()\r\n\r\n  const data = {\r\n    datasets: [\r\n      {\r\n        backgroundColor: colors.indigo[500],\r\n        data: [18, 5, 19, 27, 29, 19, 20],\r\n        label: 'This year'\r\n      },\r\n      {\r\n        backgroundColor: colors.grey[200],\r\n        data: [11, 20, 12, 29, 30, 25, 13],\r\n        label: 'Last year'\r\n      }\r\n    ],\r\n    labels: ['1 Aug', '2 Aug', '3 Aug', '4 Aug', '5 Aug', '6 Aug']\r\n  }\r\n\r\n  const options = {\r\n    animation: false,\r\n    cornerRadius: 20,\r\n    layout: { padding: 0 },\r\n    legend: { display: false },\r\n    maintainAspectRatio: false,\r\n    responsive: true,\r\n    scales: {\r\n      xAxes: [\r\n        {\r\n          barThickness: 12,\r\n          maxBarThickness: 10,\r\n          barPercentage: 0.5,\r\n          categoryPercentage: 0.5,\r\n          ticks: {\r\n            fontColor: theme.palette.text.secondary\r\n          },\r\n          gridLines: {\r\n            display: false,\r\n            drawBorder: false\r\n          }\r\n        }\r\n      ],\r\n      yAxes: [\r\n        {\r\n          ticks: {\r\n            fontColor: theme.palette.text.secondary,\r\n            beginAtZero: true,\r\n            min: 0\r\n          },\r\n          gridLines: {\r\n            borderDash: [2],\r\n            borderDashOffset: [2],\r\n            color: theme.palette.divider,\r\n            drawBorder: false,\r\n            zeroLineBorderDash: [2],\r\n            zeroLineBorderDashOffset: [2],\r\n            zeroLineColor: theme.palette.divider\r\n          }\r\n        }\r\n      ]\r\n    },\r\n    tooltips: {\r\n      backgroundColor: theme.palette.background.default,\r\n      bodyFontColor: theme.palette.text.secondary,\r\n      borderColor: theme.palette.divider,\r\n      borderWidth: 1,\r\n      enabled: true,\r\n      footerFontColor: theme.palette.text.secondary,\r\n      intersect: false,\r\n      mode: 'index',\r\n      titleFontColor: theme.palette.text.primary\r\n    }\r\n  }\r\n\r\n  return (\r\n    <Card className={classes.root}>\r\n      <CardHeader\r\n        action={\r\n          <Button endIcon={<ArrowDropDownIcon />} size=\"small\" variant=\"text\">\r\n            Last 7 days\r\n          </Button>\r\n        }\r\n        title=\"Latest Sales\"\r\n      />\r\n      <Divider />\r\n      <CardContent>\r\n        <Box height={400} position=\"relative\">\r\n          <Bar data={data} options={options} />\r\n        </Box>\r\n      </CardContent>\r\n      <Divider />\r\n      <Box display=\"flex\" justifyContent=\"flex-end\" p={2}>\r\n        <Button\r\n          color=\"primary\"\r\n          endIcon={<ArrowRightIcon />}\r\n          size=\"small\"\r\n          variant=\"text\"\r\n          onClick={() => {\r\n            props.history.push('/admin/papers')\r\n          }}\r\n        >\r\n          Overview\r\n        </Button>\r\n      </Box>\r\n    </Card>\r\n  )\r\n}\r\n\r\n// Sales.propTypes = {\r\n//   className: PropTypes.string\r\n// }\r\n\r\nexport default Sales\r\n","import React from 'react'\r\nimport clsx from 'clsx'\r\nimport PropTypes from 'prop-types'\r\nimport { Avatar, Box, Card, CardContent, Grid, LinearProgress, Typography, makeStyles, colors } from '@material-ui/core'\r\nimport InsertChartIcon from '@material-ui/icons/InsertChartOutlined'\r\n\r\nconst useStyles = makeStyles(() => ({\r\n  root: {\r\n    height: '100%'\r\n  },\r\n  avatar: {\r\n    backgroundColor: colors.orange[600],\r\n    height: 56,\r\n    width: 56\r\n  }\r\n}))\r\n\r\nconst TasksProgress = ({ className, ...rest }) => {\r\n  const classes = useStyles()\r\n\r\n  return (\r\n    <Card className={clsx(classes.root, className)} {...rest}>\r\n      <CardContent>\r\n        <Grid container justify=\"space-between\" spacing={3}>\r\n          <Grid item>\r\n            <Typography color=\"textSecondary\" gutterBottom variant=\"h6\">\r\n              TASKS PROGRESS\r\n            </Typography>\r\n            <Typography color=\"textPrimary\" variant=\"h3\">\r\n              75.5%\r\n            </Typography>\r\n          </Grid>\r\n          <Grid item>\r\n            <Avatar className={classes.avatar}>\r\n              <InsertChartIcon />\r\n            </Avatar>\r\n          </Grid>\r\n        </Grid>\r\n        <Box mt={3}>\r\n          <LinearProgress value={75.5} variant=\"determinate\" />\r\n        </Box>\r\n      </CardContent>\r\n    </Card>\r\n  )\r\n}\r\n\r\nTasksProgress.propTypes = {\r\n  className: PropTypes.string\r\n}\r\n\r\nexport default TasksProgress\r\n","import React from 'react'\r\nimport clsx from 'clsx'\r\nimport PropTypes from 'prop-types'\r\nimport { Avatar, Box, Card, CardContent, Grid, Typography, colors, makeStyles } from '@material-ui/core'\r\nimport ArrowUpwardIcon from '@material-ui/icons/ArrowUpward'\r\nimport PeopleIcon from '@material-ui/icons/PeopleOutlined'\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n  root: {\r\n    height: '100%'\r\n  },\r\n  avatar: {\r\n    backgroundColor: colors.green[600],\r\n    height: 56,\r\n    width: 56\r\n  },\r\n  differenceIcon: {\r\n    color: colors.green[900]\r\n  },\r\n  differenceValue: {\r\n    color: colors.green[900],\r\n    marginRight: theme.spacing(1)\r\n  }\r\n}))\r\n\r\nconst TotalCustomers = ({ className, ...rest }) => {\r\n  const classes = useStyles()\r\n\r\n  return (\r\n    <Card className={clsx(classes.root, className)} {...rest}>\r\n      <CardContent>\r\n        <Grid container justify=\"space-between\" spacing={3}>\r\n          <Grid item>\r\n            <Typography color=\"textSecondary\" gutterBottom variant=\"h6\">\r\n              TOTAL CUSTOMERS\r\n            </Typography>\r\n            <Typography color=\"textPrimary\" variant=\"h3\">\r\n              1,600\r\n            </Typography>\r\n          </Grid>\r\n          <Grid item>\r\n            <Avatar className={classes.avatar}>\r\n              <PeopleIcon />\r\n            </Avatar>\r\n          </Grid>\r\n        </Grid>\r\n        <Box mt={2} display=\"flex\" alignItems=\"center\">\r\n          <ArrowUpwardIcon className={classes.differenceIcon} />\r\n          <Typography className={classes.differenceValue} variant=\"body2\">\r\n            16%\r\n          </Typography>\r\n          <Typography color=\"textSecondary\" variant=\"caption\">\r\n            Since last month\r\n          </Typography>\r\n        </Box>\r\n      </CardContent>\r\n    </Card>\r\n  )\r\n}\r\n\r\nTotalCustomers.propTypes = {\r\n  className: PropTypes.string\r\n}\r\n\r\nexport default TotalCustomers\r\n","import React from 'react'\r\nimport clsx from 'clsx'\r\nimport PropTypes from 'prop-types'\r\nimport { Avatar, Card, CardContent, Grid, Typography, makeStyles, colors } from '@material-ui/core'\r\nimport AttachMoneyIcon from '@material-ui/icons/AttachMoney'\r\n\r\nconst useStyles = makeStyles(() => ({\r\n  root: {\r\n    height: '100%'\r\n  },\r\n  avatar: {\r\n    backgroundColor: colors.indigo[600],\r\n    height: 56,\r\n    width: 56\r\n  }\r\n}))\r\n\r\nconst TotalProfit = ({ className, ...rest }) => {\r\n  const classes = useStyles()\r\n\r\n  return (\r\n    <Card className={clsx(classes.root, className)} {...rest}>\r\n      <CardContent>\r\n        <Grid container justify=\"space-between\" spacing={3}>\r\n          <Grid item>\r\n            <Typography color=\"textSecondary\" gutterBottom variant=\"h6\">\r\n              TOTAL PROFIT\r\n            </Typography>\r\n            <Typography color=\"textPrimary\" variant=\"h3\">\r\n              $23,200\r\n            </Typography>\r\n          </Grid>\r\n          <Grid item>\r\n            <Avatar className={classes.avatar}>\r\n              <AttachMoneyIcon />\r\n            </Avatar>\r\n          </Grid>\r\n        </Grid>\r\n      </CardContent>\r\n    </Card>\r\n  )\r\n}\r\n\r\nTotalProfit.propTypes = {\r\n  className: PropTypes.string\r\n}\r\n\r\nexport default TotalProfit\r\n","import React from 'react'\r\nimport clsx from 'clsx'\r\nimport PropTypes from 'prop-types'\r\nimport { Doughnut } from 'react-chartjs-2'\r\nimport {\r\n  Box,\r\n  Card,\r\n  CardContent,\r\n  CardHeader,\r\n  Divider,\r\n  Typography,\r\n  colors,\r\n  makeStyles,\r\n  useTheme\r\n} from '@material-ui/core'\r\nimport LaptopMacIcon from '@material-ui/icons/LaptopMac'\r\nimport PhoneIcon from '@material-ui/icons/Phone'\r\nimport TabletIcon from '@material-ui/icons/Tablet'\r\n\r\nconst useStyles = makeStyles(() => ({\r\n  root: {\r\n    height: '100%'\r\n  }\r\n}))\r\n\r\nconst TrafficByDevice = ({ className, ...rest }) => {\r\n  const classes = useStyles()\r\n  const theme = useTheme()\r\n\r\n  const data = {\r\n    datasets: [\r\n      {\r\n        data: [63, 15, 22],\r\n        backgroundColor: [colors.indigo[500], colors.red[600], colors.orange[600]],\r\n        borderWidth: 8,\r\n        borderColor: colors.common.white,\r\n        hoverBorderColor: colors.common.white\r\n      }\r\n    ],\r\n    labels: ['Desktop', 'Tablet', 'Mobile']\r\n  }\r\n\r\n  const options = {\r\n    animation: false,\r\n    cutoutPercentage: 80,\r\n    layout: { padding: 0 },\r\n    legend: {\r\n      display: false\r\n    },\r\n    maintainAspectRatio: false,\r\n    responsive: true,\r\n    tooltips: {\r\n      backgroundColor: theme.palette.background.default,\r\n      bodyFontColor: theme.palette.text.secondary,\r\n      borderColor: theme.palette.divider,\r\n      borderWidth: 1,\r\n      enabled: true,\r\n      footerFontColor: theme.palette.text.secondary,\r\n      intersect: false,\r\n      mode: 'index',\r\n      titleFontColor: theme.palette.text.primary\r\n    }\r\n  }\r\n\r\n  const devices = [\r\n    {\r\n      title: 'Desktop',\r\n      value: 63,\r\n      icon: LaptopMacIcon,\r\n      color: colors.indigo[500]\r\n    },\r\n    {\r\n      title: 'Tablet',\r\n      value: 15,\r\n      icon: TabletIcon,\r\n      color: colors.red[600]\r\n    },\r\n    {\r\n      title: 'Mobile',\r\n      value: 23,\r\n      icon: PhoneIcon,\r\n      color: colors.orange[600]\r\n    }\r\n  ]\r\n\r\n  return (\r\n    <Card className={clsx(classes.root, className)} {...rest}>\r\n      <CardHeader title=\"Traffic by Device\" />\r\n      <Divider />\r\n      <CardContent>\r\n        <Box height={300} position=\"relative\">\r\n          <Doughnut data={data} options={options} />\r\n        </Box>\r\n        <Box display=\"flex\" justifyContent=\"center\" mt={2}>\r\n          {devices.map(({ color, icon: Icon, title, value }) => (\r\n            <Box key={title} p={1} textAlign=\"center\">\r\n              <Icon color=\"action\" />\r\n              <Typography color=\"textPrimary\" variant=\"body1\">\r\n                {title}\r\n              </Typography>\r\n              <Typography style={{ color }} variant=\"h2\">\r\n                {value}%\r\n              </Typography>\r\n            </Box>\r\n          ))}\r\n        </Box>\r\n      </CardContent>\r\n    </Card>\r\n  )\r\n}\r\n\r\nTrafficByDevice.propTypes = {\r\n  className: PropTypes.string\r\n}\r\n\r\nexport default TrafficByDevice\r\n","import React from 'react'\r\nimport { Container, Grid, makeStyles } from '@material-ui/core'\r\nimport Page from 'components/Page'\r\nimport Sales from './Sales'\r\nimport TasksProgress from './TasksProgress'\r\nimport TotalCustomers from './TotalCustomers'\r\nimport TotalProfit from './TotalProfit'\r\nimport TrafficByDevice from './TrafficByDevice'\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n  root: {\r\n    backgroundColor: theme.palette.background.dark,\r\n    minHeight: '100%',\r\n    paddingBottom: theme.spacing(3),\r\n    paddingTop: theme.spacing(3)\r\n  }\r\n}))\r\n\r\nconst Dashboard = props => {\r\n  const classes = useStyles()\r\n\r\n  return (\r\n    <Page className={classes.root} title=\"Dashboard\">\r\n      <Container maxWidth={false}>\r\n        <Grid container spacing={3}>\r\n          <Grid item lg={4} sm={6} xl={4} xs={12}>\r\n            <TotalCustomers />\r\n          </Grid>\r\n          <Grid item lg={4} sm={6} xl={4} xs={12}>\r\n            <TasksProgress />\r\n          </Grid>\r\n          <Grid item lg={4} sm={6} xl={4} xs={12}>\r\n            <TotalProfit />\r\n          </Grid>\r\n          <Grid item lg={8} md={12} xl={9} xs={12}>\r\n            <Sales {...props} />\r\n          </Grid>\r\n          <Grid item lg={4} md={6} xl={3} xs={12}>\r\n            <TrafficByDevice />\r\n          </Grid>\r\n        </Grid>\r\n      </Container>\r\n    </Page>\r\n  )\r\n}\r\n\r\nexport default Dashboard\r\n","import React, { useState } from 'react'\r\nimport clsx from 'clsx'\r\nimport PropTypes from 'prop-types'\r\nimport moment from 'moment'\r\nimport Avatar from '@material-ui/core/Avatar'\r\nimport Box from '@material-ui/core/Box'\r\nimport Card from '@material-ui/core/Card'\r\nimport Typography from '@material-ui/core/Typography'\r\nimport { makeStyles } from '@material-ui/core/styles'\r\nimport ButtonGroup from '@material-ui/core/ButtonGroup'\r\nimport Button from '@material-ui/core/Button'\r\nimport DialogTitle from '@material-ui/core/DialogTitle'\r\nimport DialogContent from '@material-ui/core/DialogContent'\r\nimport DialogContentText from '@material-ui/core/DialogContentText'\r\nimport DialogActions from '@material-ui/core/DialogActions'\r\nimport Dialog from '@material-ui/core/Dialog'\r\nimport getInitials from 'utils/getInitials'\r\nimport { Table } from 'antd'\r\nimport api from 'api'\r\nimport { toast } from 'react-toastify'\r\nimport { CardContent, InputAdornment, SvgIcon, TextField } from '@material-ui/core'\r\nimport { Search as SearchIcon } from 'react-feather'\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n  root: {},\r\n  avatar: {\r\n    marginRight: theme.spacing(2)\r\n  },\r\n  toolBar: {\r\n    marginBottom: theme.spacing(2)\r\n  }\r\n}))\r\n\r\nconst columns = [\r\n  { title: 'Name', dataIndex: 'name', render: undefined },\r\n  { title: 'Email', dataIndex: 'email' },\r\n  { title: 'Chinese Class', dataIndex: 'chinese_class' },\r\n  { title: 'HSK Level', dataIndex: 'hks_level' },\r\n  { title: 'Ethnic Background', dataIndex: 'ethnic_background' },\r\n  {\r\n    title: 'Exam Result',\r\n    render: () => {\r\n      return '这里展示做过哪些试卷？'\r\n    }\r\n  },\r\n  {\r\n    title: 'RegisteredAt',\r\n    dataIndex: 'created_at',\r\n    render: time => {\r\n      return moment(time).format('YYYY-MM-DD hh:mm:ss')\r\n    }\r\n  },\r\n  { title: 'Operation', dataIndex: 'id', render: undefined }\r\n]\r\nconst rowSelection = {\r\n  getCheckboxProps: user => ({\r\n    uid: user.id\r\n  })\r\n}\r\n\r\nconst Results = ({ className, users, reload, history, ...rest }) => {\r\n  const classes = useStyles()\r\n  const [filterUserName, setFilterUserName] = useState('')\r\n  const [deletePopInfo, setDeletePopInfo] = useState(0) // 只需要uid就可以了\r\n\r\n  const handleReview = e => {\r\n    history.push('/admin/users/' + e.currentTarget.value)\r\n  }\r\n\r\n  const handleOpen = user => () => {\r\n    setDeletePopInfo(user)\r\n  }\r\n\r\n  columns[0].render = name => {\r\n    return (\r\n      <Box alignItems=\"center\" display=\"flex\">\r\n        <Avatar className={classes.avatar}>{getInitials(name)}</Avatar>\r\n        <Typography color=\"textPrimary\" variant=\"body1\">\r\n          {name}\r\n        </Typography>\r\n      </Box>\r\n    )\r\n  }\r\n  columns[7].render = uid => {\r\n    return (\r\n      <ButtonGroup size=\"small\">\r\n        <Button color=\"primary\" onClick={handleReview} value={uid}>\r\n          review\r\n        </Button>\r\n        <Button color=\"secondary\" onClick={handleOpen(uid)}>\r\n          delete\r\n        </Button>\r\n      </ButtonGroup>\r\n    )\r\n  }\r\n\r\n  const handleClose = () => {\r\n    setDeletePopInfo(0)\r\n  }\r\n\r\n  const deleteUser = () => {\r\n    api.deleteUser({ uid: deletePopInfo }).then(res => {\r\n      if (!res.success) {\r\n        toast.error(res.info)\r\n      } else {\r\n        toast.warning('😢 you actually deleted somebody!')\r\n        reload()\r\n        handleClose()\r\n      }\r\n    })\r\n  }\r\n\r\n  const deleteAnswers = () => {\r\n    api.deleteAnswers({ uid: deletePopInfo }).then(res => {\r\n      if (!res.success) {\r\n        toast.error(res.info)\r\n      } else {\r\n        toast.warning(\"😢 you actually deleted somebody's progress!\")\r\n        handleClose()\r\n      }\r\n    })\r\n  }\r\n\r\n  const onSearchUser = e => {\r\n    setFilterUserName(e.currentTarget.value)\r\n  }\r\n\r\n  const toolBar = () => {\r\n    return (\r\n      <div className={classes.toolBar}>\r\n        <Box display=\"flex\" justifyContent=\"flex-end\">\r\n          <Button color=\"primary\" variant=\"contained\">\r\n            Export Data\r\n          </Button>\r\n        </Box>\r\n        <Box mt={3}>\r\n          <Card>\r\n            <CardContent>\r\n              <Box maxWidth={500}>\r\n                <TextField\r\n                  fullWidth\r\n                  InputProps={{\r\n                    startAdornment: (\r\n                      <InputAdornment position=\"start\">\r\n                        <SvgIcon fontSize=\"small\" color=\"action\">\r\n                          <SearchIcon />\r\n                        </SvgIcon>\r\n                      </InputAdornment>\r\n                    )\r\n                  }}\r\n                  placeholder=\"Search user\"\r\n                  variant=\"outlined\"\r\n                  value={filterUserName}\r\n                  onChange={onSearchUser}\r\n                />\r\n              </Box>\r\n            </CardContent>\r\n          </Card>\r\n        </Box>\r\n      </div>\r\n    )\r\n  }\r\n\r\n  return (\r\n    <>\r\n      {toolBar()}\r\n      <Card className={clsx(classes.root, className)} {...rest}>\r\n        <Box minWidth={1050}>\r\n          <Table\r\n            rowSelection={{\r\n              type: 'checkbox',\r\n              ...rowSelection\r\n            }}\r\n            columns={columns}\r\n            dataSource={users.filter(value => {\r\n              return value.name.search(filterUserName) !== -1\r\n            })}\r\n          />\r\n          <Dialog open={!!deletePopInfo} onClose={handleClose}>\r\n            <DialogTitle>Are you sure to delete?</DialogTitle>\r\n            <DialogContent>\r\n              <DialogContentText>it's a dangerous move!</DialogContentText>\r\n              <DialogContentText>If you delete an User, then all of he's progress is wiped off too!</DialogContentText>\r\n              <DialogContentText>DeleteAnswers will only clear the user's progress...</DialogContentText>\r\n            </DialogContent>\r\n            <DialogActions>\r\n              <Button onClick={deleteAnswers} color=\"secondary\">\r\n                Delete Answers\r\n              </Button>\r\n              <Button onClick={deleteUser} color=\"secondary\">\r\n                Delete User\r\n              </Button>\r\n              <Button onClick={handleClose} color=\"primary\">\r\n                Cancel\r\n              </Button>\r\n            </DialogActions>\r\n          </Dialog>\r\n        </Box>\r\n      </Card>\r\n    </>\r\n  )\r\n}\r\n\r\nResults.propTypes = {\r\n  className: PropTypes.string,\r\n  users: PropTypes.array.isRequired,\r\n  history: PropTypes.any\r\n}\r\n\r\nexport default Results\r\n","export default (name = '') =>\r\n  name\r\n    .replace(/\\s+/, ' ')\r\n    .split(' ')\r\n    .slice(0, 2)\r\n    .map(v => v && v[0].toUpperCase())\r\n    .join('')\r\n","import React, { useEffect, useState } from 'react'\r\nimport { Box, Container, makeStyles } from '@material-ui/core'\r\nimport Page from 'components/Page'\r\nimport Results from './Results'\r\nimport api from '../../../api'\r\nimport { toast } from 'react-toastify'\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n  root: {\r\n    backgroundColor: theme.palette.background.dark,\r\n    minHeight: '100%',\r\n    paddingBottom: theme.spacing(3),\r\n    paddingTop: theme.spacing(3)\r\n  }\r\n}))\r\n\r\nconst Users = props => {\r\n  const classes = useStyles()\r\n  const [users, setUsers] = useState([])\r\n\r\n  const getUsers = () => {\r\n    api.QueryUsers().then(res => {\r\n      if (!res.success) {\r\n        toast.error(res.info)\r\n      } else {\r\n        setUsers(res.data)\r\n      }\r\n    })\r\n  }\r\n\r\n  useEffect(() => {\r\n    getUsers()\r\n  }, [])\r\n\r\n  return (\r\n    <Page className={classes.root} title=\"Customers\">\r\n      <Container maxWidth={false}>\r\n        <Box mt={3} style={{ minWidth: 1099 }}>\r\n          {/*// todo dont use another page, use sub component */}\r\n          <Results users={users} reload={getUsers} history={props.history} />\r\n        </Box>\r\n      </Container>\r\n    </Page>\r\n  )\r\n}\r\n\r\nexport default Users\r\n","import React, { useState, useEffect } from 'react'\r\nimport PropTypes from 'prop-types'\r\nimport clsx from 'clsx'\r\nimport {\r\n  Box,\r\n  Button,\r\n  Card,\r\n  CardContent,\r\n  CardHeader,\r\n  Divider,\r\n  TextField,\r\n  makeStyles,\r\n  Grid,\r\n  InputLabel,\r\n  Select,\r\n  MenuItem,\r\n  Dialog,\r\n  DialogTitle,\r\n  DialogContent,\r\n  DialogContentText,\r\n  DialogActions\r\n} from '@material-ui/core'\r\nimport api from '../../../api'\r\nimport { toast } from 'react-toastify'\r\n\r\nconst useStyles = makeStyles({\r\n  root: {}\r\n})\r\n\r\nconst defaultSettings = {\r\n  BitRate: 128,\r\n  SampleRate: 16000\r\n}\r\n\r\nconst SettingsContent = ({ className, ...rest }) => {\r\n  const classes = useStyles()\r\n  const [settings, setSettings] = useState(defaultSettings)\r\n  const [updated, setUpdated] = useState(false)\r\n  const [popOpen, setPopOpen] = useState(false)\r\n\r\n  const handleOpen = () => {\r\n    setPopOpen(true)\r\n  }\r\n  const handleClose = () => {\r\n    setPopOpen(false)\r\n  }\r\n\r\n  const handleChange = event => {\r\n    setSettings({\r\n      ...settings,\r\n      [event.target.name]: event.target.value\r\n    })\r\n  }\r\n\r\n  const getSetting = () => {\r\n    api.querySettings().then(res => {\r\n      if (!res.success) {\r\n        toast.error(res.info)\r\n      } else {\r\n        setSettings(res.data)\r\n      }\r\n    })\r\n  }\r\n\r\n  const updateSetting = () => {\r\n    api.updateSetting(settings).then(res => {\r\n      if (!res.success) {\r\n        toast.error(res.info)\r\n      } else {\r\n        toast.success('🎉 YAY, you did it! ✨')\r\n        setUpdated(prevState => !prevState)\r\n      }\r\n    })\r\n  }\r\n\r\n  const resetSetting = () => {\r\n    api.updateSetting(defaultSettings).then(res => {\r\n      if (!res.success) {\r\n        toast.error(res.info)\r\n      } else {\r\n        toast.success('🎉 YAY, you did it! ✨')\r\n        setUpdated(prevState => !prevState)\r\n        handleClose()\r\n      }\r\n    })\r\n  }\r\n\r\n  useEffect(() => {\r\n    getSetting()\r\n  }, [updated])\r\n\r\n  return (\r\n    <form className={clsx(classes.root, className)} {...rest}>\r\n      <Card>\r\n        <CardHeader subheader=\"tune audio config\" title=\"Audio Config\" />\r\n        <Divider />\r\n        <CardContent>\r\n          <Grid container>\r\n            <Grid item xs={4}>\r\n              <InputLabel>SampleRate</InputLabel>\r\n              <Select\r\n                labelId=\"demo-simple-select-label\"\r\n                id=\"demo-simple-select\"\r\n                name=\"SampleRate\"\r\n                fullWidth\r\n                value={settings.SampleRate}\r\n                onChange={handleChange}\r\n              >\r\n                <MenuItem value={8000}>8000</MenuItem>\r\n                <MenuItem value={11025}>11025</MenuItem>\r\n                <MenuItem value={16000}>16000</MenuItem>\r\n                <MenuItem value={22050}>22050</MenuItem>\r\n                <MenuItem value={24000}>24000</MenuItem>\r\n                <MenuItem value={44100}>44100</MenuItem>\r\n                <MenuItem value={48000}>44100</MenuItem>\r\n                <MenuItem value={50000}>50000</MenuItem>\r\n                <MenuItem value={96000}>96000</MenuItem>\r\n              </Select>\r\n            </Grid>\r\n            <Grid item xs={4} />\r\n            <Grid item xs={4}>\r\n              <InputLabel>BitRate</InputLabel>\r\n              <TextField\r\n                name=\"BitRate\"\r\n                type=\"number\"\r\n                InputLabelProps={{\r\n                  shrink: true\r\n                }}\r\n                fullWidth\r\n                variant=\"standard\"\r\n                value={settings.BitRate}\r\n                onChange={handleChange}\r\n              />\r\n            </Grid>\r\n          </Grid>\r\n        </CardContent>\r\n        <Divider />\r\n        {/*justifyContent=\"flex-end\"*/}\r\n        <Box display=\"flex\" justifyContent=\"space-between\" p={2}>\r\n          <Button color=\"secondary\" variant=\"contained\" onClick={handleOpen}>\r\n            Reset\r\n          </Button>\r\n          <Button color=\"primary\" variant=\"contained\" onClick={updateSetting}>\r\n            Update\r\n          </Button>\r\n          <Dialog\r\n            open={popOpen}\r\n            onClose={handleClose}\r\n            aria-labelledby=\"alert-dialog-title\"\r\n            aria-describedby=\"alert-dialog-description\"\r\n          >\r\n            <DialogTitle id=\"alert-dialog-title\">Do you confirm to proceed the reset?</DialogTitle>\r\n            <DialogContent>\r\n              <DialogContentText id=\"alert-dialog-description\">\r\n                The default value of SampleRate is 16000, BitRate is 128.\r\n              </DialogContentText>\r\n            </DialogContent>\r\n            <DialogActions>\r\n              <Button onClick={resetSetting} color=\"primary\">\r\n                Ok\r\n              </Button>\r\n              <Button onClick={handleClose} color=\"primary\">\r\n                Cancel\r\n              </Button>\r\n            </DialogActions>\r\n          </Dialog>\r\n        </Box>\r\n      </Card>\r\n    </form>\r\n  )\r\n}\r\n\r\nSettingsContent.propTypes = {\r\n  className: PropTypes.string\r\n}\r\n\r\nexport default SettingsContent\r\n","import React from 'react'\r\nimport { Box, Container, makeStyles } from '@material-ui/core'\r\nimport Page from 'components/Page'\r\nimport SettingsContent from './Settings'\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n  root: {\r\n    backgroundColor: theme.palette.background.dark,\r\n    minHeight: '100%',\r\n    paddingBottom: theme.spacing(3),\r\n    paddingTop: theme.spacing(3)\r\n  }\r\n}))\r\n\r\nconst Settings = () => {\r\n  const classes = useStyles()\r\n\r\n  return (\r\n    <Page className={classes.root} title=\"Settings\">\r\n      <Container maxWidth=\"lg\">\r\n        <Box mt={3}>\r\n          <SettingsContent />\r\n        </Box>\r\n      </Container>\r\n    </Page>\r\n  )\r\n}\r\n\r\nexport default Settings\r\n","export const columns = [\r\n  { field: 'id', sortable: false, width: 80 },\r\n  { field: 'createdAt', sortable: false, width: 100 },\r\n  { field: 'name', sortable: false, flex: 0.3 },\r\n  { field: 'words', sortable: false, flex: 1 }\r\n]\r\n\r\nexport const data = [\r\n  {\r\n    id: 1,\r\n    created_at: 1555016400000,\r\n    name: 'Paper for test',\r\n    words: '字1 字2 字3 字4 字5 字6'\r\n  },\r\n  {\r\n    id: 2,\r\n    created_at: 1555016400000,\r\n    name: 'Paper 1',\r\n    words: '字6 字5 字4 字3 字2 字1'\r\n  }\r\n]\r\n","import React, { useState } from 'react'\r\nimport {\r\n  Button,\r\n  Dialog,\r\n  DialogActions,\r\n  DialogContent,\r\n  DialogTitle,\r\n  Grid,\r\n  InputLabel,\r\n  makeStyles,\r\n  TextField\r\n} from '@material-ui/core'\r\nimport { toast } from 'react-toastify'\r\nimport api from 'api'\r\nimport { Input } from 'antd'\r\n\r\nconst { TextArea } = Input\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n  root: {\r\n    display: 'flex',\r\n    justifyContent: 'center',\r\n    flexWrap: 'wrap',\r\n    '& > *': {\r\n      margin: theme.spacing(0.5)\r\n    }\r\n  },\r\n  chip: {\r\n    margin: theme.spacing(0.5)\r\n  },\r\n  input: {\r\n    marginLeft: theme.spacing(1),\r\n    flex: 1\r\n  }\r\n}))\r\n\r\nconst Editor = props => {\r\n  const classes = useStyles()\r\n  const [words, setWords] = useState('') // {key:index, label:word}\r\n  const [interval, setInterval] = useState(0)\r\n\r\n  const onUpdateWords = () => {\r\n    api.editPaper({ ...props.data, words: words, interval: interval }).then(res => {\r\n      if (!res.success) {\r\n        toast.error(res.info)\r\n      } else {\r\n        toast.success('updated!')\r\n        props.refreshPaper()\r\n        props.onClickExit()\r\n      }\r\n    })\r\n  }\r\n\r\n  const onUpdateInterval = e => {\r\n    setInterval(parseInt(e.currentTarget.value))\r\n  }\r\n\r\n  // useEffect(() => {\r\n  //   if (props.data) {\r\n  //     setWords(props.data.words)\r\n  //   }\r\n  // }, [props.data])\r\n\r\n  const editWords = e => {\r\n    setWords(e.currentTarget.value)\r\n  }\r\n\r\n  // const handleAddWord = e => {\r\n  //   setWords(e.currentTarget.value)\r\n  // }\r\n  //\r\n  // const handleDeleteWord = chipToDelete => () => {\r\n  //   // setWords(words => words.filter((word, i) => i !== chipToDelete))\r\n  //   setWords(words =>\r\n  //     words\r\n  //       .split(' ')\r\n  //       .filter((word, i) => i !== chipToDelete)\r\n  //       .join(' ')\r\n  //   )\r\n  // }\r\n\r\n  return (\r\n    <Grid container>\r\n      <Grid item xs={12}>\r\n        <Dialog\r\n          maxWidth=\"md\"\r\n          fullWidth\r\n          open={props.open}\r\n          onClose={props.onClickExit}\r\n          aria-labelledby=\"alert-dialog-title\"\r\n          aria-describedby=\"alert-dialog-description\"\r\n        >\r\n          <DialogTitle id=\"alert-dialog-title\">\r\n            Id: {(props.data && props.data.id) || 0}; PaperName: {(props.data && props.data.name) || ''}\r\n          </DialogTitle>\r\n          <DialogContent className={classes.root}>\r\n            <Grid container>\r\n              <Grid item xs={2}>\r\n                <InputLabel>Interval (per/s)</InputLabel>\r\n              </Grid>\r\n              <Grid item xs={10} style={{ marginBottom: 20 }}>\r\n                <TextField\r\n                  type=\"number\"\r\n                  variant=\"standard\"\r\n                  defaultValue={props.data && props.data.interval}\r\n                  onChange={onUpdateInterval}\r\n                />\r\n              </Grid>\r\n              <Grid item xs={2}>\r\n                <InputLabel>Words</InputLabel>\r\n              </Grid>\r\n              <Grid item xs={10}>\r\n                <TextArea\r\n                  placeholder=\"you can edit words here\"\r\n                  autoSize\r\n                  defaultValue={props.data && props.data.words}\r\n                  onChange={editWords}\r\n                />\r\n              </Grid>\r\n            </Grid>\r\n\r\n            {/*{words.split(' ').map((word, i) => {*/}\r\n            {/*  return (*/}\r\n            {/*    <li key={i}>*/}\r\n            {/*      <Chip label={word} onDelete={handleDeleteWord(i)} className={classes.chip} />*/}\r\n            {/*    </li>*/}\r\n            {/*  )*/}\r\n            {/*})}*/}\r\n            {/*<li>*/}\r\n            {/*  <OutlinedInput className={classes.input} placeholder=\"Add here\" />*/}\r\n            {/*  <IconButton type=\"submit\">*/}\r\n            {/*    <Plus />*/}\r\n            {/*  </IconButton>*/}\r\n            {/*</li>*/}\r\n          </DialogContent>\r\n          <DialogActions>\r\n            <Button onClick={onUpdateWords} color=\"primary\">\r\n              Ok\r\n            </Button>\r\n            <Button onClick={props.onClickExit} color=\"primary\">\r\n              Cancel\r\n            </Button>\r\n          </DialogActions>\r\n        </Dialog>\r\n      </Grid>\r\n    </Grid>\r\n  )\r\n}\r\n\r\nexport default Editor\r\n","import React, { useState } from 'react'\r\nimport clsx from 'clsx'\r\nimport PropTypes from 'prop-types'\r\nimport moment from 'moment'\r\nimport PerfectScrollbar from 'react-perfect-scrollbar'\r\nimport {\r\n  Box,\r\n  Card,\r\n  Checkbox,\r\n  Table,\r\n  TableBody,\r\n  TableCell,\r\n  TableHead,\r\n  TablePagination,\r\n  TableRow,\r\n  makeStyles,\r\n  ButtonGroup,\r\n  Button\r\n} from '@material-ui/core'\r\nimport Editor from './editor/editor'\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n  root: {},\r\n  avatar: {\r\n    marginRight: theme.spacing(2)\r\n  }\r\n}))\r\n\r\nconst Results = ({ className, datas, refreshPaper, ...rest }) => {\r\n  const classes = useStyles()\r\n  const [selectedCustomerIds, setSelectedCustomerIds] = useState([])\r\n  const [limit, setLimit] = useState(10)\r\n  const [page, setPage] = useState(0)\r\n  const [editProps, setEditProps] = useState({ open: false, refreshPaper: refreshPaper })\r\n\r\n  const handleSelectAll = event => {\r\n    let newSelectedCustomerIds\r\n\r\n    if (event.target.checked) {\r\n      newSelectedCustomerIds = datas.map(customer => customer.id)\r\n    } else {\r\n      newSelectedCustomerIds = []\r\n    }\r\n\r\n    setSelectedCustomerIds(newSelectedCustomerIds)\r\n  }\r\n\r\n  const handleSelectOne = (event, id) => {\r\n    const selectedIndex = selectedCustomerIds.indexOf(id)\r\n    let newSelectedCustomerIds = []\r\n\r\n    if (selectedIndex === -1) {\r\n      newSelectedCustomerIds = newSelectedCustomerIds.concat(selectedCustomerIds, id)\r\n    } else if (selectedIndex === 0) {\r\n      newSelectedCustomerIds = newSelectedCustomerIds.concat(selectedCustomerIds.slice(1))\r\n    } else if (selectedIndex === selectedCustomerIds.length - 1) {\r\n      newSelectedCustomerIds = newSelectedCustomerIds.concat(selectedCustomerIds.slice(0, -1))\r\n    } else if (selectedIndex > 0) {\r\n      newSelectedCustomerIds = newSelectedCustomerIds.concat(\r\n        selectedCustomerIds.slice(0, selectedIndex),\r\n        selectedCustomerIds.slice(selectedIndex + 1)\r\n      )\r\n    }\r\n\r\n    setSelectedCustomerIds(newSelectedCustomerIds)\r\n  }\r\n\r\n  const handleLimitChange = event => {\r\n    setLimit(event.target.value)\r\n  }\r\n\r\n  const handlePageChange = (event, newPage) => {\r\n    setPage(newPage)\r\n  }\r\n\r\n  const onClickEditExit = () => {\r\n    setEditProps({ open: false })\r\n  }\r\n\r\n  const handleEditClicked = e => {\r\n    const dataIndex = e.currentTarget.value\r\n    setEditProps({ open: true, onClickExit: onClickEditExit, data: datas[dataIndex], refreshPaper: refreshPaper })\r\n  }\r\n\r\n  return (\r\n    <Card className={clsx(classes.root, className)} {...rest}>\r\n      <Editor {...editProps} />\r\n      <PerfectScrollbar>\r\n        <Box minWidth={1050}>\r\n          <Table>\r\n            <TableHead>\r\n              <TableRow>\r\n                <TableCell padding=\"checkbox\">\r\n                  <Checkbox\r\n                    checked={selectedCustomerIds.length === datas.length}\r\n                    color=\"primary\"\r\n                    indeterminate={selectedCustomerIds.length > 0 && selectedCustomerIds.length < datas.length}\r\n                    onChange={handleSelectAll}\r\n                  />\r\n                </TableCell>\r\n                <TableCell>Id</TableCell>\r\n                <TableCell>CreatedAt</TableCell>\r\n                <TableCell>Name</TableCell>\r\n                <TableCell>Interval(/s)</TableCell>\r\n                <TableCell>Words</TableCell>\r\n                <TableCell align=\"center\">Operation</TableCell>\r\n              </TableRow>\r\n            </TableHead>\r\n            <TableBody>\r\n              {datas.slice(0, limit).map((data, index) => (\r\n                <TableRow hover key={data.id} selected={selectedCustomerIds.indexOf(data.id) !== -1}>\r\n                  <TableCell padding=\"checkbox\">\r\n                    <Checkbox\r\n                      checked={selectedCustomerIds.indexOf(data.id) !== -1}\r\n                      onChange={event => handleSelectOne(event, data.id)}\r\n                      value=\"true\"\r\n                    />\r\n                  </TableCell>\r\n                  <TableCell>{data.id}</TableCell>\r\n                  <TableCell>{moment(data.created_at).format('YYYY-MM-DD hh:mm:ss')}</TableCell>\r\n                  <TableCell>{data.name}</TableCell>\r\n                  <TableCell>{data.interval}</TableCell>\r\n                  <TableCell>{data.words}</TableCell>\r\n                  <TableCell align=\"center\">\r\n                    <ButtonGroup size=\"small\">\r\n                      <Button color=\"primary\" onClick={handleEditClicked} value={index}>\r\n                        edit\r\n                      </Button>\r\n                      <Button color=\"primary\">publish</Button>\r\n                      <Button color=\"secondary\">delete</Button>\r\n                    </ButtonGroup>\r\n                  </TableCell>\r\n                </TableRow>\r\n              ))}\r\n            </TableBody>\r\n          </Table>\r\n        </Box>\r\n      </PerfectScrollbar>\r\n      <TablePagination\r\n        component=\"div\"\r\n        count={datas.length}\r\n        onChangePage={handlePageChange}\r\n        onChangeRowsPerPage={handleLimitChange}\r\n        page={page}\r\n        rowsPerPage={limit}\r\n        rowsPerPageOptions={[5, 10, 25]}\r\n      />\r\n    </Card>\r\n  )\r\n}\r\n\r\nResults.propTypes = {\r\n  className: PropTypes.string,\r\n  datas: PropTypes.array.isRequired\r\n}\r\n\r\nexport default Results\r\n","import React, { useState, useEffect } from 'react'\r\nimport { Box, Button, Container, makeStyles, Typography } from '@material-ui/core'\r\nimport { data } from './data'\r\nimport Page from 'components/Page'\r\nimport Result from './result'\r\nimport Editor from './editor/editor'\r\nimport api from 'api'\r\nimport { toast } from 'react-toastify'\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n  root: {\r\n    backgroundColor: theme.palette.background.dark,\r\n    minHeight: '100%',\r\n    paddingBottom: theme.spacing(3),\r\n    paddingTop: theme.spacing(3)\r\n  }\r\n}))\r\n\r\nconst Papers = () => {\r\n  const classes = useStyles()\r\n  const [papers, setPapers] = useState(data)\r\n  const [activePaper, setActivePaper] = useState(data[0])\r\n  const [addNew, setAddNew] = useState(false)\r\n\r\n  const getPapers = () => {\r\n    api.queryPapers().then(res => {\r\n      if (!res.success) {\r\n        toast.error(res.info)\r\n      } else {\r\n        setPapers(res.data.papers)\r\n        setActivePaper(res.data.active_paper)\r\n      }\r\n    })\r\n  }\r\n\r\n  useEffect(getPapers, [])\r\n\r\n  const Add = () => {\r\n    setAddNew(true)\r\n  }\r\n\r\n  const onClickX = () => {\r\n    setAddNew(false)\r\n  }\r\n\r\n  return (\r\n    <Page className={classes.root} title=\"Papers\">\r\n      <Container maxWidth={false}>\r\n        <Editor open={addNew} onClickExit={onClickX} />\r\n        <Box display=\"flex\" justifyContent=\"flex-end\">\r\n          <Button color=\"primary\" variant=\"contained\" onClick={Add}>\r\n            Add New Paper\r\n          </Button>\r\n        </Box>\r\n        <Box>\r\n          <Typography color=\"textPrimary\" variant=\"h5\">\r\n            Active Paper: id({activePaper.id}): {activePaper.name}\r\n          </Typography>\r\n        </Box>\r\n        <Box mt={3}>\r\n          <Result datas={papers} refreshPaper={getPapers} />\r\n        </Box>\r\n      </Container>\r\n    </Page>\r\n  )\r\n}\r\n\r\nexport default Papers\r\n","import React from 'react'\r\n\r\nconst p = { style: { margin: 8 } }\r\n\r\nexport const columns = [\r\n  {\r\n    title: 'Word',\r\n    dataIndex: 'word',\r\n    key: 'word',\r\n    render: text => <span>{text}</span>\r\n  },\r\n  {\r\n    title: 'Audio',\r\n    dataIndex: 'audio_url',\r\n    key: 'audio_url',\r\n    render: url => <span>{url ? 'yes' : 'no'}</span>\r\n  },\r\n  {\r\n    title: 'Translation',\r\n    dataIndex: 'translation',\r\n    key: 'translation'\r\n  },\r\n  {\r\n    title: 'Duration',\r\n    dataIndex: 'duration',\r\n    key: 'duration',\r\n    render: duration => <span>{duration / 1000}秒</span>\r\n  },\r\n  {\r\n    title: 'Action',\r\n    dataIndex: 'audio_url',\r\n    key: 'audio_url',\r\n    render: url => {\r\n      return <audio controls src={'/file/' + url} {...p} />\r\n    }\r\n  }\r\n]\r\n","import React, { useEffect, useState } from 'react'\r\nimport { Table } from 'antd'\r\nimport { columns } from './const'\r\nimport { toast } from 'react-toastify'\r\nimport api from 'api'\r\n\r\nconst Detail = props => {\r\n  const path = props.location.pathname.split('/')\r\n  const req = {\r\n    uid: parseInt(path.pop()),\r\n    paper_id: 1 // todo\r\n  }\r\n\r\n  const [answers, setAnswers] = useState([])\r\n\r\n  const getAnswers = () => {\r\n    api.QueryAnswers(req).then(res => {\r\n      if (!res.success) {\r\n        toast.error(res.info)\r\n      } else {\r\n        setAnswers(res.data)\r\n      }\r\n    })\r\n  }\r\n  // eslint-disable-next-line react-hooks/exhaustive-deps\r\n  useEffect(getAnswers, [])\r\n\r\n  return (\r\n    <>\r\n      <Table columns={columns} dataSource={answers} />\r\n    </>\r\n  )\r\n}\r\n\r\nexport default Detail\r\n","import React, { useEffect, useState } from 'react'\r\nimport Container from '@material-ui/core/Container'\r\nimport Typography from '@material-ui/core/Typography'\r\nimport Recorder from 'recorder-core'\r\nimport Button from '@material-ui/core/Button'\r\n\r\nconst defaultAudioConf = {\r\n  bitRate: 128, // kbps\r\n  sampleRate: 16000 // hz\r\n}\r\n\r\nconst InstructionPage = props => {\r\n  const [recordable, setRecordable] = useState(false)\r\n\r\n  const rec = Recorder({\r\n    type: 'mp3',\r\n    bitRate: defaultAudioConf.bitRate,\r\n    sampleRate: defaultAudioConf.sampleRate,\r\n    disableEnvInFix: false\r\n  })\r\n\r\n  useEffect(() => {\r\n    console.log('正在打开录音，请求麦克风权限...', props)\r\n    rec.open(\r\n      () => {\r\n        console.log('已打开录音，可以点击开始了')\r\n        rec.close()\r\n        setRecordable(true)\r\n      },\r\n      (msg, isUserNotAllow) => {\r\n        // 用户拒绝未授权或不支持\r\n        console.log((isUserNotAllow ? 'UserNotAllow，' : '') + '无法录音:' + msg)\r\n      }\r\n    )\r\n    // eslint-disable-next-line react-hooks/exhaustive-deps\r\n  }, [])\r\n\r\n  return (\r\n    <Container maxWidth=\"xs\">\r\n      <Typography component=\"h1\" variant=\"h5\">\r\n        Instructions:\r\n      </Typography>\r\n      <Typography component=\"span\" variant=\"body1\">\r\n        Please enable recording permission\r\n      </Typography>\r\n      <Button\r\n        fullWidth\r\n        disabled={!recordable}\r\n        variant=\"outlined\"\r\n        onClick={() => {\r\n          props.history.push('/demo')\r\n        }}\r\n      >\r\n        Agree And Proceed\r\n      </Button>\r\n    </Container>\r\n  )\r\n}\r\n\r\nexport default InstructionPage\r\n","import React, { lazy } from 'react'\r\nimport { Redirect, Route, Switch } from 'react-router-dom'\r\nimport InfoPage from 'containers/info'\r\nimport DemoPage from 'containers/demo'\r\nimport FinishPage from 'containers/finish'\r\nimport DashboardLayout from 'components/layouts/DashboardLayout'\r\nimport Dashboard from 'containers/admin/dashboard'\r\nimport Users from 'containers/admin/users'\r\nimport Settings from 'containers/admin/settings'\r\nimport Papers from 'containers/admin/papers'\r\nimport Detail from 'containers/admin/users/detail'\r\nimport InstructionPage from 'containers/instruction'\r\n\r\n// const LoginContainer = lazy(() => import('containers/login'))\r\nconst AdminLogin = lazy(() => import('containers/admin/login'))\r\n\r\nexport class Routes extends React.Component<any> {\r\n  render() {\r\n    return (\r\n      <>\r\n        <Switch>\r\n          <Redirect exact={true} from=\"/\" to=\"/info\" />\r\n          <Route path=\"/info\">\r\n            <InfoPage {...this.props} />\r\n          </Route>\r\n          <Route path=\"/instruction\">\r\n            <InstructionPage {...this.props} />\r\n          </Route>\r\n          <Route path=\"/demo\" component={DemoPage} />\r\n          <Route path=\"/finish\" component={FinishPage} />\r\n          <Redirect exact={true} from=\"/admin\" to=\"/admin/login\" />\r\n          <Route path=\"/admin/login\" component={AdminLogin} />\r\n          <Route path=\"/admin/dashboard\">\r\n            <DashboardLayout components={Dashboard} {...this.props} />\r\n          </Route>\r\n          <Route path=\"/admin/users\" exact>\r\n            <DashboardLayout components={Users} {...this.props} />\r\n          </Route>\r\n          <Route path=\"/admin/users/:uid\">\r\n            <DashboardLayout components={Detail} {...this.props} />\r\n          </Route>\r\n          <Route path=\"/admin/papers\">\r\n            <DashboardLayout components={Papers} {...this.props} />\r\n          </Route>\r\n          <Route path=\"/admin/settings\">\r\n            <DashboardLayout components={Settings} {...this.props} />\r\n          </Route>\r\n        </Switch>\r\n      </>\r\n    )\r\n  }\r\n}\r\n\r\nexport default Routes\r\n","import React, { Suspense } from 'react'\r\nimport { createBrowserHistory } from 'history'\r\nimport { Provider } from 'mobx-react'\r\nimport { RouterStore, syncHistoryWithStore } from 'mobx-react-router'\r\nimport RootStore from './stores/root'\r\nimport { Route, Router } from 'react-router-dom'\r\nimport Routes from './routes'\r\nimport CssBaseline from '@material-ui/core/CssBaseline'\r\nimport { ToastContainer } from 'react-toastify'\r\nimport 'react-toastify/dist/ReactToastify.css'\r\n\r\nconst browserHistory = createBrowserHistory()\r\nconst routingStore = new RouterStore()\r\nconst history = syncHistoryWithStore(browserHistory, routingStore)\r\n\r\nclass App extends React.Component {\r\n  public render() {\r\n    return (\r\n      <Suspense fallback={<div>Loading...</div>}>\r\n        <CssBaseline />\r\n        <ToastContainer\r\n          position=\"top-center\"\r\n          autoClose={5000}\r\n          hideProgressBar={false}\r\n          newestOnTop={false}\r\n          closeOnClick\r\n          rtl={false}\r\n          pauseOnFocusLoss\r\n          draggable\r\n          pauseOnHover\r\n        />\r\n        <Provider {...RootStore}>\r\n          <Router history={history}>\r\n            <Route component={Routes} />\r\n          </Router>\r\n        </Provider>\r\n      </Suspense>\r\n    )\r\n  }\r\n}\r\n\r\nexport default App\r\n","import React from 'react'\r\nimport ReactDOM from 'react-dom'\r\nimport './index.scss'\r\nimport './normalize.css'\r\nimport App from './App'\r\n\r\nReactDOM.render(<App />, document.getElementById('root'))\r\n"],"sourceRoot":""}