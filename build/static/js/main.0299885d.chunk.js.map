{"version":3,"sources":["api/index.ts","api/req.ts","stores/root.ts","global/storage.tsx","containers/info/index.tsx","utils/emailCheck.js","containers/examination/index.js","containers/finish/index.jsx","components/layouts/DashboardLayout/NavBar/NavItem.js","components/layouts/DashboardLayout/NavBar/index.js","components/Logo.js","components/layouts/DashboardLayout/TopBar.js","components/layouts/DashboardLayout/index.js","components/Page.js","containers/admin/dashboard/Statistics.js","containers/admin/dashboard/TasksProgress.js","containers/admin/dashboard/TotalUsers.js","containers/admin/dashboard/TotalAnswers.js","containers/admin/dashboard/TrafficByDevice.js","utils/spinIcon.js","containers/admin/dashboard/index.js","containers/admin/users/Results.js","utils/getInitials.js","utils/download.js","containers/admin/users/index.js","containers/admin/settings/Settings.js","containers/admin/settings/index.js","containers/admin/papers/editor/editor.js","containers/admin/papers/result.js","utils/duplicate.js","containers/admin/papers/index.js","containers/admin/users/detail/const.js","containers/admin/users/detail/index.js","containers/instruction/data.js","containers/instruction/index.js","routes/index.tsx","App.tsx","index.tsx"],"names":["request","createRequest","common","baseURL","headers","Token","sessionStorage","getItem","http","axios","create","down","responseType","wrapSend","requestFunc","type","a","res","data","response","success","status","info","setTimeout","clear","window","location","replace","statusText","Api","download","url","body","post","refreshRequest","changeRequest","req","signUp","payload","signIn","getBasicInfo","uploadAudio","adminLogin","resCb","nextCb","then","queryPapers","addPaper","publishPaper","editPaper","QueryUsers","deleteUser","QueryAnswers","deleteAnswers","querySettings","updateSetting","queryStatistics","exportData","this","getAPI","storageSet","key","obj","setItem","JSON","stringify","Copyright","Typography","variant","color","align","Link","href","Date","getFullYear","useStyles","makeStyles","theme","createStyles","paper","marginTop","spacing","display","flexDirection","alignItems","avatar","margin","backgroundColor","palette","primary","light","form","width","submit","InfoPage","props","classes","useState","email","name","chinese_class","hks_level","ethnic_background","has_chinese_acquaintance","acquaintance_detail","userInfo","setUserInfo","emailInvalid","setEmailInvalid","needSignUp","setNeedSignUp","onEdit","l","e","newUserInfo","value","currentTarget","toLowerCase","test","Container","component","maxWidth","CssBaseline","className","Avatar","Box","Grid","container","item","xs","TextField","error","helperText","required","fullWidth","id","label","autoComplete","autoFocus","onChange","FormControlLabel","control","Checkbox","checked","labelPlacement","Collapse","in","Button","onClick","toast","api","resp","user","history","push","user_not_exist","autoClose","mt","Word","styled","Paper","fontSize","fontFamily","fontWeight","justifyContent","ValidationTextField","withStyles","root","borderColor","borderWidth","borderLeftWidth","padding","Progress","MobileStepper","flexGrow","defaultAudioConf","bitRate","sampleRate","Examination","renderVisualization","style","height","uid","words","current_paper","split","RegExp","progress_index","length","setState","audioConf","global_setting","wordIndex","paper_info","paper_name","paper_version","version","paper_id","interval","begin","reRenderTimer","disableBodyScroll","recordButtonRef","current","wave","Recorder","WaveView","elem","beginTime","moment","uploadFile","blob","duration","next","formData","FormData","append","state","input","isTablet","isMobile","isDesktop","recStart","rec","disableEnvInFix","onProcess","buffers","powerLevel","bufferDuration","bufferSampleRate","open","start","set","console","log","msg","isUserNotAllow","onClickStart","recorded","onClickStop","recStop","warningPopUp","uploadLoop","translationRef","lastChild","firstChild","focus","playAndStop","audioPlayRef","play","onNext","timesUp","diff","uploadingLock","iv","setInterval","audioBlob","clearInterval","URL","revokeObjectURL","src","buttonDisabled","renderCountDown","isPlaying","size","strokeWidth","colors","green","A200","blue","red","onComplete","totalElapsedTime","remainingTime","renderWarningPopUp","Snackbar","anchorOrigin","vertical","horizontal","Alert","severity","createRef","flattenedObj","parse","storageGet","close","stop","createObjectURL","currentWord","recording","steps","position","activeStep","Backdrop","zIndex","CircularProgress","thickness","IconButton","disabled","float","ref","bottom","border","Component","Finish","paddingTop","paddingBottom","button","text","secondary","typography","fontWeightMedium","letterSpacing","textTransform","icon","marginRight","title","active","main","NavItem","Icon","rest","ListItem","clsx","disableGutters","activeClassName","RouterLink","to","items","BarChartIcon","UsersIcon","BookIcon","SettingsIcon","mobileDrawer","desktopDrawer","top","cursor","NavBar","onMobileClose","openMobile","useLocation","useEffect","pathname","content","p","Divider","List","map","Hidden","lgUp","Drawer","anchor","onClose","mdDown","defaultProps","Logo","alt","TopBar","onMobileNavOpen","AppBar","elevation","Toolbar","Tooltip","aria-label","removeItem","background","dark","overflow","wrapper","flex","breakpoints","up","paddingLeft","contentContainer","DashboardLayout","isMobileNavOpen","setMobileNavOpen","components","Page","forwardRef","children","Helmet","defaultCount","new_user","new_answer","labels","defaultChart","daily","monthly","styleOptions","barThickness","maxBarThickness","barPercentage","categoryPercentage","Statistics","useTheme","setDaily","chart","statistics","chartOptions","animation","cornerRadius","layout","legend","maintainAspectRatio","responsive","scales","xAxes","ticks","fontColor","gridLines","drawBorder","yAxes","beginAtZero","min","borderDash","borderDashOffset","divider","zeroLineBorderDash","zeroLineBorderDashOffset","zeroLineColor","tooltips","default","bodyFontColor","enabled","footerFontColor","intersect","mode","titleFontColor","Card","CardHeader","action","endIcon","CardContent","datasets","indigo","options","orange","TasksProgress","progress","Number","total_progress","toFixed","justify","gutterBottom","LinearProgress","differenceIcon","differenceValue","TotalUsers","total_users","current_month_users","TotalAnswers","total_answers","EditOutlined","defaultDevice","desktop","tablet","mobile","unknown","TrafficByDevice","device","sum","cutoutPercentage","devices","LaptopMacIcon","TabletIcon","PhoneIcon","QuestionIcon","grey","white","hoverBorderColor","textAlign","antIcon","LoadingOutlined","spin","minHeight","Dashboard","setStatistics","setSpin","indicator","spinning","lg","sm","xl","md","toolBar","marginBottom","columns","dataIndex","render","undefined","has","time","format","fixed","rowSelection","getCheckboxProps","Results","users","papers","reload","filterUserName","setFilterUserName","deletePopInfo","setDeletePopInfo","reviewPopInfo","setReviewPopInfo","reviewPapers","setReviewPapers","exportPopup","setExportPopup","selectedUsers","setSelectedUsers","exportPaperId","setExportPaperId","ext","setExt","selectedOnly","setSelectedOnly","handleReviewOpen","handleOpen","slice","v","toUpperCase","join","getInitials","ButtonGroup","handleClose","onSearchUser","onClickExport","table","fileName","match","contentType","downloadFile","marginLeft","InputProps","startAdornment","InputAdornment","SvgIcon","placeholder","scroll","x","rowKey","onSelect","record","selected","selectedRows","onSelectAll","dataSource","filter","search","pagination","query","page","setPage","defaultPageSize","showSizeChanger","showQuickJumper","showTotal","total","Dialog","DialogTitle","DialogContent","DialogContentText","InputLabel","Select","native","DialogActions","warning","disableBackdropClick","disableEscapeKeyDown","pid","target","p_name","Users","setUsers","setPapers","getAllInfo","minWidth","defaultSettings","BitRate","SampleRate","SettingsContent","settings","setSettings","updated","setUpdated","popOpen","setPopOpen","handleChange","event","subheader","labelId","MenuItem","InputLabelProps","shrink","prevState","aria-labelledby","aria-describedby","Settings","TextArea","flexWrap","chip","Editor","setWords","setName","onClickExit","defaultValue","parseInt","autoSize","refreshPaper","sorter","b","sortDirections","createdAt","inuse","hashMap","markedItems","word","index","dup","markDuplicates","Chip","editProps","setEditProps","onClickEditExit","Papers","activePaper","setActivePaper","addNew","setAddNew","getPapers","active_paper","controls","Detail","path","pop","answers","setAnswers","dataSets","lang","abbr","endings","select","select_icon","button_focused","InstructionPage","buttonFocused","setButtonFocused","recordable","setRecordable","langIndex","setLangIndex","unFocus","listStyle","langSelect","renderValue","TranslationOutlined","onMouseEnter","onMouseLeave","onFocus","onBlur","AdminLogin","lazy","Routes","exact","from","ExamPage","FinishPage","React","browserHistory","createBrowserHistory","routingStore","RouterStore","syncHistoryWithStore","App","fallback","hideProgressBar","newestOnTop","closeOnClick","rtl","pauseOnFocusLoss","draggable","pauseOnHover","RootStore","ReactDOM","document","getElementById"],"mappings":"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","file":"static/js/main.0299885d.chunk.js","sourcesContent":["// 放所有 http 请求\r\nimport { AxiosInstance } from 'axios'\r\nimport { createRequest, ReqType, Response, Res, wrapSend } from './req'\r\n\r\ntype callbackFunc = (res: Res<any>) => void\r\n\r\nexport class Api {\r\n  request: AxiosInstance // 普通请求\r\n  down: AxiosInstance // 下载请求\r\n\r\n  constructor(request: ReqType) {\r\n    this.request = request.http\r\n    this.down = request.down\r\n  }\r\n\r\n  private download = async <T = any>(url = '', body: any = {}) => {\r\n    return await wrapSend<T>(() => {\r\n      return this.down.post<Response>(url, body)\r\n    }, 'down')\r\n  }\r\n\r\n  private post = async <T = any>(url = '', body?: any) => {\r\n    return await wrapSend<T>(() => {\r\n      return this.request.post<Response>(url, body)\r\n    })\r\n  }\r\n\r\n  // 用于重新登陆的时候重置\r\n  refreshRequest = () => {\r\n    this.changeRequest(createRequest())\r\n  }\r\n  changeRequest = (req: ReqType) => {\r\n    this.request = req.http\r\n    this.down = req.down\r\n  }\r\n\r\n  // 用户注册\r\n  signUp = (payload: any) => {\r\n    return this.post(`/api/v1/sign_up`, payload)\r\n  }\r\n\r\n  // 用户登录\r\n  signIn = (payload: any) => {\r\n    return this.post(`/api/v1/sign_in`, payload)\r\n  }\r\n\r\n  // 获取做题基本信息\r\n  getBasicInfo = (payload: any) => {\r\n    return this.post(`/api/v1/get_basic_info`, payload)\r\n  }\r\n\r\n  // 上传音频文件\r\n  uploadAudio = (payload: any) => {\r\n    return this.post(`/api/v1/upload`, payload)\r\n  }\r\n\r\n  // =====  admin  =====\r\n  adminLogin = (payload: any, resCb: callbackFunc, nextCb: () => void): void => {\r\n    this.post(`/api/v1/admin/login`, payload).then(res => {\r\n      resCb(res)\r\n      this.refreshRequest()\r\n      nextCb()\r\n    })\r\n  }\r\n\r\n  queryPapers = () => {\r\n    return this.post(`/api/v1/admin/query_papers`)\r\n  }\r\n\r\n  addPaper = (payload: any) => {\r\n    return this.post(`/api/v1/admin/add_paper`, payload)\r\n  }\r\n\r\n  publishPaper = (payload: any) => {\r\n    return this.post(`/api/v1/admin/publish_paper`, payload)\r\n  }\r\n\r\n  editPaper = (payload: any) => {\r\n    return this.post(`/api/v1/admin/edit_paper`, payload)\r\n  }\r\n\r\n  QueryUsers = () => {\r\n    return this.post(`/api/v1/admin/query_users`)\r\n  }\r\n\r\n  deleteUser = (payload: any) => {\r\n    return this.post(`/api/v1/admin/delete_user`, payload)\r\n  }\r\n\r\n  QueryAnswers = (payload: any) => {\r\n    return this.post(`/api/v1/admin/query_answers`, payload)\r\n  }\r\n\r\n  deleteAnswers = (payload: any) => {\r\n    return this.post(`/api/v1/admin/clear_answers`, payload)\r\n  }\r\n\r\n  querySettings = () => {\r\n    return this.post(`/api/v1/admin/query_settings`)\r\n  }\r\n\r\n  updateSetting = (payload: any) => {\r\n    return this.post(`/api/v1/admin/update_setting`, payload)\r\n  }\r\n\r\n  queryStatistics = () => {\r\n    return this.post('/api/v1/admin/statistics')\r\n  }\r\n\r\n  // exporter\r\n  exportData = (payload?: any) => {\r\n    return this.download('/api/v1/admin/export', payload)\r\n  }\r\n}\r\n\r\nconst getAPI = (request: ReqType) => new Api(request)\r\n\r\nexport default getAPI(createRequest())\r\n","import axios, { AxiosInstance, AxiosPromise } from 'axios'\r\n\r\nexport interface ReqType {\r\n  http: AxiosInstance\r\n  down: AxiosInstance\r\n}\r\n\r\nexport interface Response {\r\n  success: boolean\r\n  info?: string\r\n  data: any\r\n  headers: any\r\n  status: number\r\n}\r\n\r\nexport interface Res<T> {\r\n  success: boolean\r\n  info?: string\r\n  data?: T\r\n  headers?: any\r\n}\r\n\r\ntype requestFun = () => AxiosPromise<Response>\r\n\r\nexport const createRequest = (): ReqType => {\r\n  const common = {\r\n    baseURL: '',\r\n    headers: {\r\n      'Content-Type': 'application/json',\r\n      Token: sessionStorage.getItem('token')\r\n    }\r\n  }\r\n  return {\r\n    http: axios.create(common),\r\n    down: axios.create({ ...common, responseType: 'blob' })\r\n  }\r\n}\r\n\r\nexport const wrapSend = async <T>(requestFunc: requestFun, type?: string): Promise<Res<T>> => {\r\n  let response\r\n  try {\r\n    const res = await requestFunc()\r\n    const { data, headers } = res\r\n    response = {\r\n      success: type ? res.status === 200 : data.success,\r\n      info: data.info,\r\n      data: type ? data : data.data,\r\n      headers: headers\r\n    }\r\n  } catch (err) {\r\n    const { data } = err.response\r\n    if (err.response.status === 403) {\r\n      setTimeout(() => {\r\n        sessionStorage.clear()\r\n        window.location.replace('/admin/login')\r\n      }, 2000)\r\n      return {\r\n        info: 'Your login information is invalid, please login again!',\r\n        success: false\r\n      }\r\n    }\r\n    if (err.response.status === 400) {\r\n      return {\r\n        success: data.success,\r\n        info: data.info,\r\n        data: data\r\n      }\r\n    }\r\n    response = {\r\n      success: data.success,\r\n      info: err.response.status + ' ' + err.response.statusText,\r\n      data: data\r\n    }\r\n  }\r\n  return response\r\n}\r\n","class Root {}\r\n\r\nexport default new Root()\r\n","export const KeyUserInfo = 'user_info'\r\nexport const KeyAdminToken = 'token'\r\n\r\nexport const storageSet = (key: string, obj: object) => {\r\n  sessionStorage.setItem(key, JSON.stringify(obj))\r\n}\r\n\r\nexport const storageGet = (key: string): object | null => {\r\n  const flattenedObj = sessionStorage.getItem(key)\r\n  if (!flattenedObj) {\r\n    return null\r\n  }\r\n  return JSON.parse(flattenedObj)\r\n}\r\n","import React, { ChangeEvent, useState } from 'react'\r\nimport Avatar from '@material-ui/core/Avatar'\r\nimport Button from '@material-ui/core/Button'\r\nimport CssBaseline from '@material-ui/core/CssBaseline'\r\nimport TextField from '@material-ui/core/TextField'\r\nimport Link from '@material-ui/core/Link'\r\nimport Grid from '@material-ui/core/Grid'\r\nimport Box from '@material-ui/core/Box'\r\nimport HeadsetMicOutlinedIcon from '@material-ui/icons/HeadsetMicOutlined'\r\nimport Typography from '@material-ui/core/Typography'\r\nimport { createStyles, makeStyles, Theme } from '@material-ui/core/styles'\r\nimport Container from '@material-ui/core/Container'\r\nimport api from 'api'\r\nimport { toast } from 'react-toastify'\r\nimport { KeyUserInfo, storageSet } from 'global/storage'\r\nimport { IsValidEmail } from 'utils/emailCheck'\r\nimport Checkbox from '@material-ui/core/Checkbox'\r\nimport FormControlLabel from '@material-ui/core/FormControlLabel'\r\nimport Collapse from '@material-ui/core/Collapse'\r\n\r\n// 本页面逻辑, 先登录(只用填email), 如果账户不存在则展示注册逻辑\r\n\r\nfunction Copyright() {\r\n  return (\r\n    <Typography variant=\"body2\" color=\"textSecondary\" align=\"center\">\r\n      {'Copyright © '}\r\n      <Link color=\"inherit\" href=\"https://www.hanzi-readingtest.top/\">\r\n        www.hanzi-readingtest.top\r\n      </Link>{' '}\r\n      {new Date().getFullYear()}\r\n      {'.'}\r\n    </Typography>\r\n  )\r\n}\r\n\r\nconst useStyles = makeStyles((theme: Theme) =>\r\n  createStyles({\r\n    paper: {\r\n      marginTop: theme.spacing(8),\r\n      display: 'flex',\r\n      flexDirection: 'column',\r\n      alignItems: 'center'\r\n    },\r\n    avatar: {\r\n      margin: theme.spacing(1),\r\n      backgroundColor: theme.palette.primary.light\r\n    },\r\n    form: {\r\n      width: '100%', // Fix IE 11 issue.\r\n      marginTop: theme.spacing(3)\r\n    },\r\n    submit: {\r\n      margin: theme.spacing(3, 0, 2)\r\n    }\r\n  })\r\n)\r\n\r\ninterface UserInfo {\r\n  email: string\r\n  name: string\r\n  chinese_class: string\r\n  hks_level: string\r\n  ethnic_background: string\r\n  has_chinese_acquaintance: boolean\r\n  acquaintance_detail: string\r\n}\r\n\r\ntype label =\r\n  | 'email'\r\n  | 'name'\r\n  | 'chinese_class'\r\n  | 'hks_level'\r\n  | 'ethnic_background'\r\n  | 'has_chinese_acquaintance'\r\n  | 'acquaintance_detail'\r\n\r\nexport default function InfoPage(props: any) {\r\n  const classes = useStyles()\r\n  const [userInfo, setUserInfo] = useState({\r\n    email: '',\r\n    name: '',\r\n    chinese_class: '',\r\n    hks_level: '',\r\n    ethnic_background: '',\r\n    has_chinese_acquaintance: false,\r\n    acquaintance_detail: ''\r\n  })\r\n  const [emailInvalid, setEmailInvalid] = useState(false)\r\n  const [needSignUp, setNeedSignUp] = useState(false)\r\n\r\n  const onEdit = (l: label) => (e: ChangeEvent<HTMLInputElement>) => {\r\n    const newUserInfo: UserInfo = userInfo\r\n    if (l === 'email') {\r\n      const value = e.currentTarget.value.toLowerCase()\r\n      newUserInfo[l] = value\r\n      setUserInfo(newUserInfo)\r\n      setEmailInvalid(!IsValidEmail(value))\r\n    } else if (l !== 'has_chinese_acquaintance') {\r\n      newUserInfo[l] = e.currentTarget.value\r\n      setUserInfo(newUserInfo)\r\n    }\r\n  }\r\n\r\n  const onChecked = () => {\r\n    setUserInfo({ ...userInfo, has_chinese_acquaintance: !userInfo.has_chinese_acquaintance })\r\n  }\r\n\r\n  const signUp = () => {\r\n    if (emailInvalid) {\r\n      toast.error('incorrect email address')\r\n      return\r\n    }\r\n    api.signUp(userInfo).then(resp => {\r\n      if (!resp.success) {\r\n        toast.error('🚀 ' + resp.info)\r\n      } else {\r\n        storageSet(KeyUserInfo, resp.data.user) // 这里后端直接回传完整用户信息\r\n        props.history.push('/instruction')\r\n      }\r\n    })\r\n  }\r\n\r\n  const signIn = () => {\r\n    if (emailInvalid) {\r\n      toast.error('incorrect email address')\r\n      return\r\n    }\r\n    api.signIn({ email: userInfo.email }).then(resp => {\r\n      if (!resp.success) {\r\n        // 根据返回值判断, 如果是用户不存在, 则转为注册页面\r\n        toast.error('🚀 ' + resp.info)\r\n      } else {\r\n        if (resp.data.user_not_exist) {\r\n          setNeedSignUp(true)\r\n        } else {\r\n          toast.info('🦄 welcome ' + resp.data.user.name, { autoClose: 999 })\r\n          storageSet(KeyUserInfo, resp.data.user) // 这里后端直接回传完整用户信息\r\n          props.history.push('/instruction')\r\n        }\r\n      }\r\n    })\r\n  }\r\n\r\n  return (\r\n    <Container component=\"main\" maxWidth=\"xs\">\r\n      <CssBaseline />\r\n      <div className={classes.paper}>\r\n        <Avatar className={classes.avatar}>\r\n          <HeadsetMicOutlinedIcon />\r\n        </Avatar>\r\n        <Typography component=\"h1\" variant=\"h5\">\r\n          Chinese Character Reading Test\r\n        </Typography>\r\n        {/*<Typography component=\"h3\" variant=\"subtitle1\" style={{ color: 'grey' }}>*/}\r\n        {/*  Instructions: xxxx*/}\r\n        {/*</Typography>*/}\r\n        <Box className={classes.form}>\r\n          <Grid container spacing={2}>\r\n            <Grid item xs={12}>\r\n              <TextField\r\n                error={emailInvalid}\r\n                helperText={emailInvalid ? 'Invalid Email Address' : null}\r\n                variant=\"outlined\"\r\n                required\r\n                fullWidth\r\n                id=\"email\"\r\n                label=\"Email Address\"\r\n                name=\"email\"\r\n                autoComplete=\"email\"\r\n                autoFocus\r\n                onChange={onEdit('email')}\r\n              >\r\n                {userInfo.email}\r\n              </TextField>\r\n            </Grid>\r\n            {needSignUp && (\r\n              <>\r\n                <Grid item xs={12}>\r\n                  <TextField\r\n                    name=\"name\"\r\n                    variant=\"outlined\"\r\n                    required\r\n                    fullWidth\r\n                    id=\"name\"\r\n                    label=\"Name\"\r\n                    autoComplete=\"name\"\r\n                    onChange={onEdit('name')}\r\n                  >\r\n                    {userInfo.name}\r\n                  </TextField>\r\n                </Grid>\r\n                <Grid item xs={12}>\r\n                  <TextField\r\n                    variant=\"outlined\"\r\n                    required\r\n                    fullWidth\r\n                    id=\"chineseClass\"\r\n                    label=\"Chinese Class\"\r\n                    name=\"chineseClass\"\r\n                    onChange={onEdit('chinese_class')}\r\n                  >\r\n                    {userInfo.chinese_class}\r\n                  </TextField>\r\n                </Grid>\r\n                <Grid item xs={12}>\r\n                  <TextField\r\n                    variant=\"outlined\"\r\n                    required\r\n                    fullWidth\r\n                    id=\"hksLevel\"\r\n                    label=\"HSK Level\"\r\n                    name=\"hksLevel\"\r\n                    onChange={onEdit('hks_level')}\r\n                  >\r\n                    {userInfo.hks_level}\r\n                  </TextField>\r\n                </Grid>\r\n                <Grid item xs={12}>\r\n                  <TextField\r\n                    variant=\"outlined\"\r\n                    required\r\n                    fullWidth\r\n                    id=\"ethnicBackground\"\r\n                    label=\"Ethnic Background\"\r\n                    name=\"ethnicBackground\"\r\n                    onChange={onEdit('ethnic_background')}\r\n                  >\r\n                    {userInfo.ethnic_background}\r\n                  </TextField>\r\n                </Grid>\r\n                <Grid item xs={12}>\r\n                  <FormControlLabel\r\n                    control={\r\n                      <Checkbox onChange={onChecked} checked={userInfo.has_chinese_acquaintance} color=\"primary\" />\r\n                    }\r\n                    label=\"Do you have any Chinese family members or relatives?\"\r\n                    labelPlacement=\"end\"\r\n                  />\r\n                </Grid>\r\n                <Grid item xs={12}>\r\n                  <Collapse in={userInfo.has_chinese_acquaintance}>\r\n                    <TextField\r\n                      variant=\"outlined\"\r\n                      fullWidth\r\n                      id=\"acquaintanceDetail\"\r\n                      label=\"Acquaintance Detail\"\r\n                      name=\"acquaintanceDetail\"\r\n                      onChange={onEdit('acquaintance_detail')}\r\n                    >\r\n                      {userInfo.acquaintance_detail}\r\n                    </TextField>\r\n                  </Collapse>\r\n                </Grid>\r\n              </>\r\n            )}\r\n          </Grid>\r\n          <Button\r\n            type=\"submit\"\r\n            fullWidth\r\n            variant=\"contained\"\r\n            color=\"primary\"\r\n            className={classes.submit}\r\n            onClick={needSignUp ? signUp : signIn}\r\n          >\r\n            {needSignUp ? 'sign up' : 'sign in'}\r\n          </Button>\r\n          {/*<Grid container justify=\"flex-end\">*/}\r\n          {/*  <Grid item>*/}\r\n          {/*    <Link*/}\r\n          {/*      href=\"/instruction\"*/}\r\n          {/*      variant=\"body2\"*/}\r\n          {/*      onClick={() => {*/}\r\n          {/*        storageSet(KeyUserInfo, userInfo)*/}\r\n          {/*      }}*/}\r\n          {/*    >*/}\r\n          {/*      临时转到instruction页面*/}\r\n          {/*    </Link>*/}\r\n          {/*  </Grid>*/}\r\n          {/*</Grid>*/}\r\n        </Box>\r\n      </div>\r\n      <Box mt={5}>\r\n        <Copyright />\r\n      </Box>\r\n    </Container>\r\n  )\r\n}\r\n","export const IsValidEmail = email => {\r\n  const reg = /^([a-z0-9_.-]+)@([\\da-z.]+)\\.([a-z.]{2,6})$/\r\n  return reg.test(email)\r\n}\r\n","import React, { Component, createRef } from 'react'\r\nimport { isDesktop, isMobile, isTablet } from 'react-device-detect'\r\nimport './index.css'\r\nimport api from '../../api'\r\nimport Recorder from 'recorder-core'\r\nimport 'recorder-core/src/engine/mp3'\r\nimport 'recorder-core/src/engine/mp3-engine'\r\nimport 'recorder-core/src/extensions/waveview'\r\nimport { styled, withStyles } from '@material-ui/core/styles'\r\nimport { blue, green, red } from '@material-ui/core/colors'\r\nimport { CountdownCircleTimer } from 'react-countdown-circle-timer'\r\nimport Button from '@material-ui/core/Button'\r\nimport Container from '@material-ui/core/Container'\r\nimport Grid from '@material-ui/core/Grid'\r\nimport Paper from '@material-ui/core/Paper'\r\nimport MobileStepper from '@material-ui/core/MobileStepper'\r\nimport TextField from '@material-ui/core/TextField'\r\nimport IconButton from '@material-ui/core/IconButton'\r\nimport Snackbar from '@material-ui/core/Snackbar'\r\nimport Backdrop from '@material-ui/core/Backdrop'\r\nimport CircularProgress from '@material-ui/core/CircularProgress'\r\nimport MicNone from '@material-ui/icons/MicNone'\r\nimport PauseIcon from '@material-ui/icons/Pause'\r\nimport PlayCircleOutlineIcon from '@material-ui/icons/PlayCircleOutline'\r\nimport { KeyUserInfo, storageGet } from '../../global/storage'\r\nimport { toast } from 'react-toastify'\r\nimport moment from 'moment'\r\nimport Alert from '@material-ui/lab/Alert'\r\nimport { disableBodyScroll } from 'body-scroll-lock'\r\n// import KeyboardArrowLeft from '@material-ui/icons/KeyboardArrowLeft'\r\n// import KeyboardArrowRight from '@material-ui/icons/KeyboardArrowRight'\r\n// import Box from '@material-ui/core/Box'\r\n// import InputBase from '@material-ui/core/InputBase'\r\n// import Divider from '@material-ui/core/Divider'\r\n\r\nconst Word = styled(Paper)({\r\n  fontSize: 'xxx-large',\r\n  fontFamily: 'cursive',\r\n  fontWeight: 'bold',\r\n  display: 'flex',\r\n  alignItems: 'center',\r\n  justifyContent: 'center'\r\n})\r\n\r\nconst ValidationTextField = withStyles({\r\n  root: {\r\n    marginTop: 15,\r\n    '& input:valid + fieldset': {\r\n      borderColor: 'green',\r\n      borderWidth: 2\r\n    },\r\n    '& input:invalid + fieldset': {\r\n      borderColor: 'lightBlue',\r\n      borderWidth: 2\r\n    },\r\n    '& input:valid:focus + fieldset': {\r\n      borderLeftWidth: 6,\r\n      padding: '4px !important' // override inline-style\r\n    }\r\n  }\r\n})(TextField)\r\n\r\nconst Progress = styled(MobileStepper)({\r\n  root: {\r\n    maxWidth: 400,\r\n    flexGrow: 1\r\n  }\r\n})\r\n\r\nconst defaultAudioConf = {\r\n  bitRate: 128, // kbps\r\n  sampleRate: 16000 // hz\r\n}\r\n\r\nexport default class Examination extends Component {\r\n  constructor(props) {\r\n    super(props)\r\n    this.state = {\r\n      begin: false, // 测试开始标识， 在获取BasicInfo后置为true\r\n      status: 'init', // 录音状态\r\n      src: '', // 用于在当前字词 播放音频，给用户听\r\n      input: '', // 当前字词的翻译\r\n      audioConf: defaultAudioConf,\r\n      wordIndex: 0,\r\n      reRenderTimer: false,\r\n      words: [' '],\r\n      warningPopUp: false, // 如果长按不放到时间结束， 需要弹出提醒\r\n      uploadingLock: false, // 上传时锁定页面\r\n      buttonDisabled: false, // 用户按键防抖\r\n      paper_info: {\r\n        paper_name: '',\r\n        paper_version: '',\r\n        paper_id: 0,\r\n        interval: 10 // 秒\r\n      }\r\n    }\r\n    this.recorded = false // 用户标识当前字有没有录音过， 如果没有， 就不用了interval等待blob了\r\n    this.audioBlob = null // 因为音频生成有一定延时， 需要用interval轮询， 避免在低配机器上发生漏传\r\n    this.translationRef = createRef()\r\n    this.audioPlayRef = createRef()\r\n    this.recordButtonRef = createRef()\r\n    this.rec = Recorder({\r\n      type: 'mp3',\r\n      bitRate: defaultAudioConf.bitRate,\r\n      sampleRate: defaultAudioConf.sampleRate,\r\n      disableEnvInFix: false,\r\n      onProcess: (buffers, powerLevel, bufferDuration, bufferSampleRate) => {\r\n        this.wave.input(buffers[buffers.length - 1], powerLevel, bufferSampleRate) //输入音频数据，更新显示波形\r\n      }\r\n    })\r\n    this.userInfo = storageGet(KeyUserInfo)\r\n  }\r\n\r\n  renderVisualization = () => {\r\n    return <div style={{ height: '50px' }} className=\"wave-box\" />\r\n  }\r\n\r\n  getBasicInfo = () => {\r\n    api.getBasicInfo({ uid: this.userInfo.id }).then(res => {\r\n      if (!res.success) {\r\n        toast.error(res.info)\r\n      } else {\r\n        // eslint-disable-next-line no-control-regex\r\n        const words = res.data.current_paper.words.split(RegExp('[ \\t\\n]+'))\r\n        if (res.data.progress_index >= words.length - 1) {\r\n          toast.info(\r\n            \"you've already finished current test, please wait util the next test released, \" +\r\n              \"if there's any issue, please contact your teacher\"\r\n          )\r\n          this.props.history.push('/finish')\r\n          return\r\n        }\r\n        this.setState(\r\n          {\r\n            audioConf: {\r\n              bitRate: res.data.global_setting['BitRate'], // kbps\r\n              sampleRate: res.data.global_setting['SampleRate'] // hz\r\n            },\r\n            wordIndex: res.data.progress_index + 1,\r\n            words: words,\r\n            paper_info: {\r\n              paper_name: res.data.current_paper.name,\r\n              paper_version: res.data.current_paper.version,\r\n              paper_id: res.data.current_paper.id,\r\n              interval: res.data.current_paper.interval\r\n            },\r\n            begin: true,\r\n            reRenderTimer: true\r\n          },\r\n          () => {\r\n            this.setState({ reRenderTimer: false })\r\n            disableBodyScroll(this.recordButtonRef.current)\r\n            this.wave = Recorder.WaveView({ elem: '.wave-box' })\r\n          }\r\n        )\r\n        this.beginTime = moment() // 用于计算每道题耗时\r\n      }\r\n    })\r\n  }\r\n\r\n  componentDidMount() {\r\n    if (this.userInfo == null) {\r\n      this.props.history.push('/info')\r\n      return\r\n    }\r\n    this.getBasicInfo()\r\n    this.rec.open(\r\n      () => {\r\n        this.wave = Recorder.WaveView({ elem: '.wave-box' }) // 创建wave对象\r\n        this.rec.close()\r\n      },\r\n      (msg, isUserNotAllow) => {\r\n        isUserNotAllow //用户拒绝未授权或不支持\r\n          ? toast.error('please allow the mic permission, refresh or restart the browser')\r\n          : toast.error('your device or web browser do not support audio recording, msg:' + msg)\r\n      }\r\n    )\r\n  }\r\n\r\n  uploadFile = (blob, duration, next) => {\r\n    const formData = new FormData()\r\n    if (blob) {\r\n      formData.append('record', blob, duration + '.mp3') // fileName 不重要,服务端自己设置文件名\r\n    }\r\n    formData.append('file_ext', 'mp3')\r\n    formData.append('paper_name', this.state.paper_info.paper_name)\r\n    formData.append('paper_version', this.state.paper_info.paper_version)\r\n    formData.append('paper_id', this.state.paper_info.paper_id + '')\r\n    formData.append('uid', this.userInfo.id)\r\n    formData.append('word_index', this.state.wordIndex)\r\n    formData.append('word', this.state.words[this.state.wordIndex])\r\n    formData.append('translation', this.state.input)\r\n    formData.append('duration', duration)\r\n    formData.append('device', isTablet ? 'tablet' : isMobile ? 'mobile' : isDesktop ? 'desktop' : 'unknown')\r\n    api.uploadAudio(formData).then(resp => {\r\n      if (!resp.success) {\r\n        toast.error(resp.info + \" -- if you can't go to next word, try refresh the page\")\r\n      } else {\r\n        next()\r\n      }\r\n    })\r\n  }\r\n\r\n  recStart = () => {\r\n    this.rec = Recorder({\r\n      type: 'mp3',\r\n      bitRate: this.state.audioConf.bitRate,\r\n      sampleRate: this.state.audioConf.sampleRate,\r\n      disableEnvInFix: false,\r\n      onProcess: (buffers, powerLevel, bufferDuration, bufferSampleRate) => {\r\n        this.wave.input(buffers[buffers.length - 1], powerLevel, bufferSampleRate) //输入音频数据，更新显示波形\r\n      }\r\n    })\r\n    this.rec.open(\r\n      () => {\r\n        this.rec.start()\r\n        const set = this.rec.set\r\n        console.log('录制中：' + set.type + ' ' + set.sampleRate + 'hz ' + set.bitRate + 'kbps')\r\n      },\r\n      (msg, isUserNotAllow) => {\r\n        console.log((isUserNotAllow ? 'UserNotAllow，' : '') + '无法录音:' + msg, 1)\r\n      }\r\n    )\r\n  }\r\n\r\n  recStop() {\r\n    this.rec.stop(\r\n      (blob, duration) => {\r\n        this.rec.close() // 释放录音资源，当然可以不释放，后面可以连续调用start；但不释放时手机端播放音频有杂音\r\n        console.log('audio duration: ', duration)\r\n        this.audioBlob = blob\r\n        this.setState({ src: window.URL.createObjectURL(blob) })\r\n      },\r\n      msg => {\r\n        console.log('录音失败:' + msg, 1)\r\n        this.rec.close() //可以通过stop方法的第3个参数来自动调用close\r\n      }\r\n    )\r\n  }\r\n\r\n  onClickStart = () => {\r\n    this.recorded = true\r\n    this.setState({ status: 'recording' })\r\n    this.recStart()\r\n  }\r\n\r\n  onClickStop = () => {\r\n    this.recStop()\r\n    // 说明长按且超时了\r\n    if (this.state.warningPopUp) {\r\n      this.uploadLoop(this.state.paper_info.interval * 1000)\r\n    } else {\r\n      this.translationRef.current.lastChild.firstChild.focus()\r\n    }\r\n    this.setState({ status: 'stopped', warningPopUp: false })\r\n  }\r\n\r\n  playAndStop = () => {\r\n    this.audioPlayRef.current.play()\r\n  }\r\n\r\n  onNext = timesUp => () => {\r\n    const duration = timesUp ? this.state.paper_info.interval * 1000 : moment().diff(this.beginTime, 'milliseconds')\r\n    if (timesUp && this.state.status === 'recording') {\r\n      this.setState({ warningPopUp: true })\r\n      this.recStop()\r\n    } else {\r\n      this.uploadLoop(duration)\r\n    }\r\n  }\r\n\r\n  uploadLoop = duration => {\r\n    this.setState({ uploadingLock: true })\r\n    const iv = setInterval(() => {\r\n      if (this.recorded && !this.audioBlob) {\r\n        return\r\n      }\r\n      clearInterval(iv)\r\n      this.recorded = false\r\n      this.uploadFile(this.audioBlob, duration, () => {\r\n        window.URL.revokeObjectURL(this.state.src) // 清除 dataUrl\r\n        if (this.state.wordIndex >= this.state.words.length - 1) {\r\n          this.props.history.push('/finish')\r\n          return\r\n        }\r\n        this.audioBlob = null\r\n        this.setState(\r\n          {\r\n            wordIndex: this.state.wordIndex + 1,\r\n            reRenderTimer: true,\r\n            src: '',\r\n            input: '',\r\n            uploadingLock: false,\r\n            buttonDisabled: true\r\n          },\r\n          () => {\r\n            this.beginTime = moment() // 用于计算每道题耗时\r\n            this.setState({ reRenderTimer: false })\r\n          }\r\n        )\r\n        setTimeout(() => {\r\n          this.setState({ buttonDisabled: false })\r\n        }, 999)\r\n      })\r\n    }, 250)\r\n  }\r\n\r\n  renderCountDown = wordIndex => {\r\n    return (\r\n      <CountdownCircleTimer\r\n        isPlaying={this.state.begin && !this.state.uploadingLock}\r\n        duration={this.state.paper_info.interval}\r\n        size={60}\r\n        strokeWidth={8}\r\n        colors={[\r\n          [green.A200, 0.33],\r\n          [blue['300'], 0.33],\r\n          [red['500'], 0.34]\r\n        ]}\r\n        onComplete={totalElapsedTime => {\r\n          console.log(totalElapsedTime, wordIndex, 'on complete')\r\n          this.onNext(true)()\r\n        }}\r\n      >\r\n        {({ remainingTime }) => {\r\n          if (remainingTime === 1) {\r\n            setTimeout(() => {\r\n              this.setState({ buttonDisabled: true })\r\n            }, 888) // 最后0.1秒不给点击\r\n          }\r\n          return <div style={{ fontSize: 'xx-large' }}>{remainingTime}</div>\r\n        }}\r\n      </CountdownCircleTimer>\r\n    )\r\n  }\r\n\r\n  renderWarningPopUp = () => {\r\n    return (\r\n      <Snackbar open={this.state.warningPopUp} anchorOrigin={{ vertical: 'top', horizontal: 'center' }}>\r\n        <Alert severity=\"warning\">Sorry, time's up! Click bottom button to enter the next word...</Alert>\r\n      </Snackbar>\r\n    )\r\n  }\r\n\r\n  render() {\r\n    const {\r\n      begin,\r\n      status,\r\n      src,\r\n      words,\r\n      wordIndex,\r\n      reRenderTimer,\r\n      uploadingLock,\r\n      buttonDisabled,\r\n      warningPopUp\r\n    } = this.state\r\n    const currentWord = words[wordIndex]\r\n    const recording = status === 'recording'\r\n\r\n    return (\r\n      <Container maxWidth=\"sm\" className=\"exam-page\">\r\n        <Progress variant=\"progress\" steps={words.length} position=\"static\" activeStep={wordIndex} />\r\n        <Backdrop open={!begin || uploadingLock} style={{ zIndex: 1201 }}>\r\n          <CircularProgress color=\"inherit\" size={150} thickness={2} />\r\n        </Backdrop>\r\n        {this.renderWarningPopUp()}\r\n        <Grid container spacing={2} alignItems={'center'}>\r\n          <Grid item xs={12} style={{ display: 'flex', justifyContent: 'center' }}>\r\n            {!reRenderTimer && this.renderCountDown(wordIndex)}\r\n          </Grid>\r\n          <Grid item xs={12}>\r\n            <div>\r\n              <Word>{currentWord}</Word>\r\n            </div>\r\n          </Grid>\r\n          <Grid item xs={10}>\r\n            {this.renderVisualization()}\r\n          </Grid>\r\n          <Grid item xs={2}>\r\n            <IconButton\r\n              color=\"primary\"\r\n              variant=\"outlined\"\r\n              onClick={this.playAndStop}\r\n              disabled={recording}\r\n              style={{ float: 'right' }}\r\n            >\r\n              <PlayCircleOutlineIcon style={{ fontSize: 50 }} />\r\n            </IconButton>\r\n          </Grid>\r\n          <audio ref={this.audioPlayRef} src={src} />\r\n          <Grid item xs={12}>\r\n            <ValidationTextField\r\n              ref={this.translationRef}\r\n              label=\"Input translation here\"\r\n              required\r\n              fullWidth\r\n              autoComplete=\"off\"\r\n              variant=\"outlined\"\r\n              id=\"validation-outlined-input\"\r\n              value={this.state.input}\r\n              onChange={e => {\r\n                this.setState({ input: e.currentTarget.value })\r\n              }}\r\n              disabled={warningPopUp}\r\n            />\r\n          </Grid>\r\n          <Grid item xs={12}>\r\n            <Button\r\n              color=\"primary\"\r\n              variant=\"outlined\"\r\n              style={{ marginTop: 15, float: 'right' }}\r\n              onClick={this.onNext()}\r\n              disabled={buttonDisabled || recording}\r\n            >\r\n              NEXT\r\n            </Button>\r\n          </Grid>\r\n          <Grid item xs={12} style={{ display: 'flex', justifyContent: 'center' }}>\r\n            <IconButton\r\n              variant=\"round\"\r\n              ref={this.recordButtonRef}\r\n              className=\"nocopy\"\r\n              onClick={recording ? this.onClickStop : this.onClickStart}\r\n              size=\"medium\"\r\n              color={recording ? 'default' : 'primary'}\r\n              style={{ position: 'absolute', bottom: 50, border: 'thick solid' }}\r\n            >\r\n              {recording ? <PauseIcon style={{ fontSize: 80 }} /> : <MicNone style={{ fontSize: 80 }} />}\r\n            </IconButton>\r\n          </Grid>\r\n          {/*纪念一下, 绝对位置导致 grid 长度无法继承: 解决方案如下*/}\r\n          {/*<Grid item xs={12} style={{ display: 'flex', justifyContent: 'center' }}>*/}\r\n          {/*  /!*MuiContainer-maxWidthSm 复用container的CSS， @media 以及 maxWidth：600px*!/*/}\r\n          {/*  <Box position=\"absolute\" bottom={0} className=\"MuiContainer-maxWidthSm\" width=\"100%\">*/}\r\n          {/*    <Progress*/}\r\n          {/*      variant=\"progress\"*/}\r\n          {/*      steps={words.length}*/}\r\n          {/*      position=\"static\"*/}\r\n          {/*      activeStep={wordIndex}*/}\r\n          {/*      nextButton={*/}\r\n          {/*        <Button size=\"small\" onClick={this.onNext()} disabled={buttonDisabled}>*/}\r\n          {/*          {wordIndex < words.length - 1 ? 'Next' : 'Finish'}*/}\r\n          {/*          {ThemeProvider.direction === 'rtl' ? <KeyboardArrowLeft /> : <KeyboardArrowRight />}*/}\r\n          {/*        </Button>*/}\r\n          {/*      }*/}\r\n          {/*      // backButton={*/}\r\n          {/*      //   <Button size=\"small\" onClick={this.onClickBack} disabled>*/}\r\n          {/*      //     {ThemeProvider.direction === 'rtl' ? <KeyboardArrowRight /> : <KeyboardArrowLeft />}*/}\r\n          {/*      //     Back*/}\r\n          {/*      //   </Button>*/}\r\n          {/*      // }*/}\r\n          {/*    />*/}\r\n          {/*  </Box>*/}\r\n          {/*</Grid>*/}\r\n        </Grid>\r\n      </Container>\r\n    )\r\n  }\r\n}\r\n","import React from 'react'\r\nimport { Container, Typography } from '@material-ui/core'\r\n\r\nconst Finish = () => {\r\n  return (\r\n    <Container>\r\n      <Typography component=\"h1\" variant=\"h1\">\r\n        The End, Thank you !\r\n      </Typography>\r\n    </Container>\r\n  )\r\n}\r\n\r\nexport default Finish\r\n","import React from 'react'\r\nimport { NavLink as RouterLink } from 'react-router-dom'\r\nimport clsx from 'clsx'\r\nimport PropTypes from 'prop-types'\r\nimport { Button, ListItem, makeStyles } from '@material-ui/core'\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n  item: {\r\n    display: 'flex',\r\n    paddingTop: 0,\r\n    paddingBottom: 0\r\n  },\r\n  button: {\r\n    color: theme.palette.text.secondary,\r\n    fontWeight: theme.typography.fontWeightMedium,\r\n    justifyContent: 'flex-start',\r\n    letterSpacing: 0,\r\n    padding: '10px 8px',\r\n    textTransform: 'none',\r\n    width: '100%'\r\n  },\r\n  icon: {\r\n    marginRight: theme.spacing(1)\r\n  },\r\n  title: {\r\n    marginRight: 'auto'\r\n  },\r\n  active: {\r\n    color: theme.palette.primary.main,\r\n    '& $title': {\r\n      fontWeight: theme.typography.fontWeightMedium\r\n    },\r\n    '& $icon': {\r\n      color: theme.palette.primary.main\r\n    }\r\n  }\r\n}))\r\n\r\nconst NavItem = ({ className, href, icon: Icon, title, ...rest }) => {\r\n  const classes = useStyles()\r\n\r\n  return (\r\n    <ListItem className={clsx(classes.item, className)} disableGutters {...rest}>\r\n      <Button activeClassName={classes.active} className={classes.button} component={RouterLink} to={href}>\r\n        {Icon && <Icon className={classes.icon} size=\"20\" />}\r\n        <span className={classes.title}>{title}</span>\r\n      </Button>\r\n    </ListItem>\r\n  )\r\n}\r\n\r\nNavItem.propTypes = {\r\n  className: PropTypes.string,\r\n  href: PropTypes.string,\r\n  icon: PropTypes.elementType,\r\n  title: PropTypes.string\r\n}\r\n\r\nexport default NavItem\r\n","import React, { useEffect } from 'react'\r\nimport { Link as RouterLink } from 'react-router-dom'\r\nimport PropTypes from 'prop-types'\r\nimport { Avatar, Box, Divider, Drawer, Hidden, List, Typography, makeStyles } from '@material-ui/core'\r\nimport {\r\n  BarChart as BarChartIcon,\r\n  Settings as SettingsIcon,\r\n  Users as UsersIcon,\r\n  BookOpen as BookIcon\r\n} from 'react-feather'\r\nimport NavItem from './NavItem'\r\nimport { useLocation } from 'react-router'\r\n\r\nconst user = {\r\n  avatar: '/static/images/avatars/avatar_6.png',\r\n  jobTitle: \"yep, that's me\",\r\n  name: 'The Admin'\r\n}\r\n\r\nconst items = [\r\n  {\r\n    href: '/admin/dashboard',\r\n    icon: BarChartIcon,\r\n    title: 'Dashboard'\r\n  },\r\n  {\r\n    href: '/admin/users',\r\n    icon: UsersIcon,\r\n    title: 'Users'\r\n  },\r\n  {\r\n    href: '/admin/papers',\r\n    icon: BookIcon,\r\n    title: 'Papers'\r\n  },\r\n  {\r\n    href: '/admin/settings',\r\n    icon: SettingsIcon,\r\n    title: 'Settings'\r\n  }\r\n]\r\n\r\nconst useStyles = makeStyles(() => ({\r\n  mobileDrawer: {\r\n    width: 256\r\n  },\r\n  desktopDrawer: {\r\n    width: 256,\r\n    top: 64,\r\n    height: 'calc(100% - 64px)'\r\n  },\r\n  avatar: {\r\n    cursor: 'pointer',\r\n    width: 64,\r\n    height: 64\r\n  }\r\n}))\r\n\r\nconst NavBar = ({ onMobileClose, openMobile }) => {\r\n  const classes = useStyles()\r\n  const location = useLocation()\r\n\r\n  useEffect(() => {\r\n    if (openMobile && onMobileClose) {\r\n      onMobileClose()\r\n    }\r\n    // eslint-disable-next-line react-hooks/exhaustive-deps\r\n  }, [location.pathname])\r\n\r\n  const content = (\r\n    <Box height=\"100%\" display=\"flex\" flexDirection=\"column\">\r\n      <Box alignItems=\"center\" display=\"flex\" flexDirection=\"column\" p={2}>\r\n        <Avatar className={classes.avatar} component={RouterLink} src={user.avatar} to=\"/admin/dashboard\" />\r\n        <Typography className={classes.name} color=\"textPrimary\" variant=\"h5\">\r\n          {user.name}\r\n        </Typography>\r\n        <Typography color=\"textSecondary\" variant=\"body2\">\r\n          {user.jobTitle}\r\n        </Typography>\r\n      </Box>\r\n      <Divider />\r\n      <Box p={2}>\r\n        <List>\r\n          {items.map(item => (\r\n            <NavItem href={item.href} key={item.title} title={item.title} icon={item.icon} />\r\n          ))}\r\n        </List>\r\n      </Box>\r\n      <Box flexGrow={1} />\r\n    </Box>\r\n  )\r\n\r\n  return (\r\n    <>\r\n      <Hidden lgUp>\r\n        <Drawer\r\n          anchor=\"left\"\r\n          classes={{ paper: classes.mobileDrawer }}\r\n          onClose={onMobileClose}\r\n          open={openMobile}\r\n          variant=\"temporary\"\r\n        >\r\n          {content}\r\n        </Drawer>\r\n      </Hidden>\r\n      <Hidden mdDown>\r\n        <Drawer anchor=\"left\" classes={{ paper: classes.desktopDrawer }} open variant=\"persistent\">\r\n          {content}\r\n        </Drawer>\r\n      </Hidden>\r\n    </>\r\n  )\r\n}\r\n\r\nNavBar.propTypes = {\r\n  onMobileClose: PropTypes.func,\r\n  openMobile: PropTypes.bool\r\n}\r\n\r\nNavBar.defaultProps = {\r\n  onMobileClose: () => {},\r\n  openMobile: false\r\n}\r\n\r\nexport default NavBar\r\n","import React from 'react'\r\n\r\nconst Logo = props => {\r\n  return <img alt=\"Logo\" src=\"/static/logo.svg\" {...props} />\r\n}\r\n\r\nexport default Logo\r\n","import React from 'react'\r\nimport { Link as RouterLink } from 'react-router-dom'\r\nimport clsx from 'clsx'\r\nimport PropTypes from 'prop-types'\r\nimport { AppBar, Box, Hidden, IconButton, Toolbar, makeStyles, Tooltip } from '@material-ui/core'\r\nimport MenuIcon from '@material-ui/icons/Menu'\r\nimport InputIcon from '@material-ui/icons/Input'\r\nimport Logo from 'components/Logo'\r\n\r\nconst useStyles = makeStyles(() => ({\r\n  root: {},\r\n  avatar: {\r\n    width: 60,\r\n    height: 60\r\n  }\r\n}))\r\n\r\nconst TopBar = ({ className, onMobileNavOpen, history, ...rest }) => {\r\n  const classes = useStyles()\r\n\r\n  const logout = () => {\r\n    sessionStorage.removeItem('token')\r\n    history.push('/admin/login')\r\n  }\r\n\r\n  return (\r\n    <AppBar className={clsx(classes.root, className)} elevation={0} {...rest}>\r\n      <Toolbar>\r\n        <RouterLink to=\"/\">\r\n          <Logo />\r\n        </RouterLink>\r\n        <Box flexGrow={1} />\r\n        <Tooltip title=\"Logout\" aria-label=\"logout\">\r\n          <IconButton color=\"inherit\" onClick={logout}>\r\n            <InputIcon />\r\n          </IconButton>\r\n        </Tooltip>\r\n        <Hidden lgUp>\r\n          <IconButton color=\"inherit\" onClick={onMobileNavOpen}>\r\n            <MenuIcon />\r\n          </IconButton>\r\n        </Hidden>\r\n      </Toolbar>\r\n    </AppBar>\r\n  )\r\n}\r\n\r\nTopBar.propTypes = {\r\n  className: PropTypes.string,\r\n  onMobileNavOpen: PropTypes.func\r\n}\r\n\r\nexport default TopBar\r\n","import React, { useState } from 'react'\r\nimport { makeStyles } from '@material-ui/core'\r\nimport NavBar from './NavBar'\r\nimport TopBar from './TopBar'\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n  root: {\r\n    backgroundColor: theme.palette.background.dark,\r\n    display: 'flex',\r\n    height: '100%',\r\n    overflow: 'hidden',\r\n    width: '100%'\r\n  },\r\n  wrapper: {\r\n    display: 'flex',\r\n    flex: '1 1 auto',\r\n    overflow: 'hidden',\r\n    paddingTop: 64,\r\n    [theme.breakpoints.up('lg')]: {\r\n      paddingLeft: 256\r\n    }\r\n  },\r\n  contentContainer: {\r\n    display: 'flex',\r\n    flex: '1 1 auto',\r\n    overflow: 'hidden'\r\n  },\r\n  content: {\r\n    flex: '1 1 auto',\r\n    height: '100%',\r\n    overflow: 'auto'\r\n  }\r\n}))\r\n\r\nconst DashboardLayout = props => {\r\n  const classes = useStyles()\r\n  const [isMobileNavOpen, setMobileNavOpen] = useState(false)\r\n\r\n  return (\r\n    <div className={classes.root}>\r\n      <TopBar onMobileNavOpen={() => setMobileNavOpen(true)} history={props.history} />\r\n      <NavBar onMobileClose={() => setMobileNavOpen(false)} openMobile={isMobileNavOpen} />\r\n      <div className={classes.wrapper}>\r\n        <div className={classes.contentContainer}>\r\n          <div className={classes.content}>\r\n            <props.components {...props} />\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default DashboardLayout\r\n","import React, { forwardRef } from 'react'\r\nimport { Helmet } from 'react-helmet'\r\nimport PropTypes from 'prop-types'\r\n\r\nconst Page = forwardRef(({ children, title = '', ...rest }, ref) => {\r\n  return (\r\n    <div ref={ref} {...rest}>\r\n      <Helmet>\r\n        <title>{title}</title>\r\n      </Helmet>\r\n      {children}\r\n    </div>\r\n  )\r\n})\r\n\r\nPage.propTypes = {\r\n  children: PropTypes.node.isRequired,\r\n  title: PropTypes.string\r\n}\r\n\r\nexport default Page\r\n","import React, { useState } from 'react'\r\nimport { Bar } from 'react-chartjs-2'\r\nimport { Box, Button, Card, CardContent, CardHeader, Divider, useTheme, makeStyles, colors } from '@material-ui/core'\r\nimport ArrowDropDownIcon from '@material-ui/icons/ArrowDropDown'\r\nimport ArrowRightIcon from '@material-ui/icons/ArrowRight'\r\nimport PropTypes from 'prop-types'\r\n\r\nconst useStyles = makeStyles(() => ({\r\n  root: {}\r\n}))\r\n\r\nconst defaultCount = {\r\n  new_user: [],\r\n  new_answer: [],\r\n  labels: []\r\n}\r\n\r\nconst defaultChart = {\r\n  daily: defaultCount,\r\n  monthly: defaultCount\r\n}\r\n\r\nconst styleOptions = {\r\n  barThickness: 15,\r\n  maxBarThickness: 15,\r\n  barPercentage: 0.5,\r\n  categoryPercentage: 0.5\r\n}\r\n\r\nconst Statistics = props => {\r\n  const classes = useStyles()\r\n  const theme = useTheme()\r\n  const [daily, setDaily] = useState(true)\r\n\r\n  const chart = !!props.statistics ? props.statistics.chart : defaultChart\r\n\r\n  const data = () => {\r\n    return {\r\n      datasets: [\r\n        {\r\n          ...styleOptions,\r\n          backgroundColor: colors.indigo[500],\r\n          data: daily ? chart.daily.new_answer : chart.monthly.new_answer,\r\n          label: 'New Answer'\r\n        },\r\n        {\r\n          ...styleOptions,\r\n          backgroundColor: colors.green[100],\r\n          data: daily ? chart.daily.new_user : chart.monthly.new_user,\r\n          label: 'New user'\r\n        }\r\n      ],\r\n      labels: daily ? chart.daily.labels : chart.monthly.labels\r\n    }\r\n  }\r\n\r\n  const toggleDailyOrMonthly = () => {\r\n    setDaily(!daily)\r\n  }\r\n\r\n  const chartOptions = {\r\n    animation: false,\r\n    cornerRadius: 20,\r\n    layout: { padding: 0 },\r\n    legend: { display: false },\r\n    maintainAspectRatio: false,\r\n    responsive: true,\r\n    scales: {\r\n      xAxes: [\r\n        {\r\n          ticks: {\r\n            fontColor: theme.palette.text.secondary\r\n          },\r\n          gridLines: {\r\n            display: false,\r\n            drawBorder: false\r\n          }\r\n        }\r\n      ],\r\n      yAxes: [\r\n        {\r\n          ticks: {\r\n            fontColor: theme.palette.text.secondary,\r\n            beginAtZero: true,\r\n            min: 0\r\n          },\r\n          gridLines: {\r\n            borderDash: [2],\r\n            borderDashOffset: [2],\r\n            color: theme.palette.divider,\r\n            drawBorder: false,\r\n            zeroLineBorderDash: [2],\r\n            zeroLineBorderDashOffset: [2],\r\n            zeroLineColor: theme.palette.divider\r\n          }\r\n        }\r\n      ]\r\n    },\r\n    tooltips: {\r\n      backgroundColor: theme.palette.background.default,\r\n      bodyFontColor: theme.palette.text.secondary,\r\n      borderColor: theme.palette.divider,\r\n      borderWidth: 1,\r\n      enabled: true,\r\n      footerFontColor: theme.palette.text.secondary,\r\n      intersect: false,\r\n      mode: 'index',\r\n      titleFontColor: theme.palette.text.primary\r\n    }\r\n  }\r\n\r\n  return (\r\n    <Card className={classes.root}>\r\n      <CardHeader\r\n        action={\r\n          <Button endIcon={<ArrowDropDownIcon />} size=\"small\" variant=\"text\" onClick={toggleDailyOrMonthly}>\r\n            Switch to {daily ? 'Last 7 months' : 'Last 7 days'}\r\n          </Button>\r\n        }\r\n        title=\"Latest Statistics\"\r\n      />\r\n      <Divider />\r\n      <CardContent>\r\n        <Box height={400} position=\"relative\">\r\n          <Bar data={data()} options={chartOptions} />\r\n        </Box>\r\n      </CardContent>\r\n      <Divider />\r\n      <Box display=\"flex\" justifyContent=\"flex-end\" p={2}>\r\n        <Button\r\n          color=\"primary\"\r\n          endIcon={<ArrowRightIcon />}\r\n          size=\"small\"\r\n          variant=\"text\"\r\n          onClick={() => {\r\n            props.history.push('/admin/users')\r\n          }}\r\n        >\r\n          Overview\r\n        </Button>\r\n      </Box>\r\n    </Card>\r\n  )\r\n}\r\n\r\nStatistics.propTypes = {\r\n  className: PropTypes.string,\r\n  statistics: PropTypes.object\r\n}\r\n\r\nexport default Statistics\r\n","import React from 'react'\r\nimport clsx from 'clsx'\r\nimport PropTypes from 'prop-types'\r\nimport { Avatar, Box, Card, CardContent, Grid, LinearProgress, Typography, makeStyles, colors } from '@material-ui/core'\r\nimport InsertChartIcon from '@material-ui/icons/InsertChartOutlined'\r\n\r\nconst useStyles = makeStyles(() => ({\r\n  root: {\r\n    height: '100%'\r\n  },\r\n  avatar: {\r\n    backgroundColor: colors.orange[600],\r\n    height: 56,\r\n    width: 56\r\n  }\r\n}))\r\n\r\nconst TasksProgress = ({ className, statistics, ...rest }) => {\r\n  const classes = useStyles()\r\n\r\n  const progress = () => {\r\n    return !!statistics ? (Number(statistics.total_progress) * 100).toFixed(2) : 0\r\n  }\r\n  return (\r\n    <Card className={clsx(classes.root, className)} {...rest}>\r\n      <CardContent>\r\n        <Grid container justify=\"space-between\" spacing={3}>\r\n          <Grid item>\r\n            <Typography color=\"textSecondary\" gutterBottom variant=\"h6\">\r\n              ACTIVE PAPER's PROGRESS\r\n            </Typography>\r\n            <Typography color=\"textPrimary\" variant=\"h3\">\r\n              {progress()}%\r\n            </Typography>\r\n          </Grid>\r\n          <Grid item>\r\n            <Avatar className={classes.avatar}>\r\n              <InsertChartIcon />\r\n            </Avatar>\r\n          </Grid>\r\n        </Grid>\r\n        <Box mt={3}>\r\n          <LinearProgress value={Number(progress())} variant=\"determinate\" />\r\n        </Box>\r\n      </CardContent>\r\n    </Card>\r\n  )\r\n}\r\n\r\nTasksProgress.propTypes = {\r\n  className: PropTypes.string,\r\n  statistics: PropTypes.object\r\n}\r\n\r\nexport default TasksProgress\r\n","import React from 'react'\r\nimport clsx from 'clsx'\r\nimport PropTypes from 'prop-types'\r\nimport { Avatar, Box, Card, CardContent, Grid, Typography, colors, makeStyles } from '@material-ui/core'\r\nimport ArrowUpwardIcon from '@material-ui/icons/ArrowUpward'\r\nimport PeopleIcon from '@material-ui/icons/PeopleOutlined'\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n  root: {\r\n    height: '100%'\r\n  },\r\n  avatar: {\r\n    backgroundColor: colors.green[600],\r\n    height: 56,\r\n    width: 56\r\n  },\r\n  differenceIcon: {\r\n    color: colors.green[900]\r\n  },\r\n  differenceValue: {\r\n    color: colors.green[900],\r\n    marginRight: theme.spacing(1)\r\n  }\r\n}))\r\n\r\nconst TotalUsers = ({ className, statistics, ...rest }) => {\r\n  const classes = useStyles()\r\n\r\n  return (\r\n    <Card className={clsx(classes.root, className)} {...rest}>\r\n      <CardContent>\r\n        <Grid container justify=\"space-between\" spacing={3}>\r\n          <Grid item>\r\n            <Typography color=\"textSecondary\" gutterBottom variant=\"h6\">\r\n              TOTAL USERS\r\n            </Typography>\r\n            <Typography color=\"textPrimary\" variant=\"h3\">\r\n              {!!statistics ? statistics.total_users : 'loading...'}\r\n            </Typography>\r\n          </Grid>\r\n          <Grid item>\r\n            <Avatar className={classes.avatar}>\r\n              <PeopleIcon />\r\n            </Avatar>\r\n          </Grid>\r\n        </Grid>\r\n        <Box mt={2} display=\"flex\" alignItems=\"center\">\r\n          <ArrowUpwardIcon className={classes.differenceIcon} />\r\n          <Typography className={classes.differenceValue} variant=\"body2\">\r\n            {!!statistics ? ((statistics.current_month_users / statistics.total_users) * 100).toFixed(2) : 0}%\r\n          </Typography>\r\n          <Typography color=\"textSecondary\" variant=\"caption\">\r\n            Since last month\r\n          </Typography>\r\n        </Box>\r\n      </CardContent>\r\n    </Card>\r\n  )\r\n}\r\n\r\nTotalUsers.propTypes = {\r\n  className: PropTypes.string,\r\n  statistics: PropTypes.object\r\n}\r\n\r\nexport default TotalUsers\r\n","import React from 'react'\r\nimport clsx from 'clsx'\r\nimport PropTypes from 'prop-types'\r\nimport { Avatar, Card, CardContent, Grid, Typography, makeStyles, colors } from '@material-ui/core'\r\nimport { EditOutlined } from '@ant-design/icons'\r\n\r\nconst useStyles = makeStyles(() => ({\r\n  root: {\r\n    height: '100%'\r\n  },\r\n  avatar: {\r\n    backgroundColor: colors.indigo[600],\r\n    height: 56,\r\n    width: 56\r\n  }\r\n}))\r\n\r\nconst TotalAnswers = ({ className, statistics, ...rest }) => {\r\n  const classes = useStyles()\r\n\r\n  return (\r\n    <Card className={clsx(classes.root, className)} {...rest}>\r\n      <CardContent>\r\n        <Grid container justify=\"space-between\" spacing={3}>\r\n          <Grid item>\r\n            <Typography color=\"textSecondary\" gutterBottom variant=\"h6\">\r\n              TOTAL ANSWERS\r\n            </Typography>\r\n            <Typography color=\"textPrimary\" variant=\"h3\">\r\n              {!!statistics ? statistics.total_answers : 'loading...'}\r\n            </Typography>\r\n          </Grid>\r\n          <Grid item>\r\n            <Avatar className={classes.avatar}>\r\n              <EditOutlined />\r\n            </Avatar>\r\n          </Grid>\r\n        </Grid>\r\n      </CardContent>\r\n    </Card>\r\n  )\r\n}\r\n\r\nTotalAnswers.propTypes = {\r\n  className: PropTypes.string,\r\n  statistics: PropTypes.object\r\n}\r\n\r\nexport default TotalAnswers\r\n","import React from 'react'\r\nimport clsx from 'clsx'\r\nimport PropTypes from 'prop-types'\r\nimport { Doughnut } from 'react-chartjs-2'\r\nimport {\r\n  Box,\r\n  Card,\r\n  CardContent,\r\n  CardHeader,\r\n  Divider,\r\n  Typography,\r\n  colors,\r\n  makeStyles,\r\n  useTheme\r\n} from '@material-ui/core'\r\nimport LaptopMacIcon from '@material-ui/icons/LaptopMac'\r\nimport PhoneIcon from '@material-ui/icons/Phone'\r\nimport TabletIcon from '@material-ui/icons/Tablet'\r\nimport QuestionIcon from '@material-ui/icons/Help'\r\n\r\nconst useStyles = makeStyles(() => ({\r\n  root: {\r\n    height: '100%'\r\n  }\r\n}))\r\n\r\nconst defaultDevice = { desktop: 0, tablet: 0, mobile: 0, unknown: 0 }\r\n\r\nconst TrafficByDevice = ({ className, statistics, ...rest }) => {\r\n  const classes = useStyles()\r\n  const theme = useTheme()\r\n\r\n  const device = !!statistics ? statistics.device : defaultDevice\r\n  const sum = device.unknown + device.mobile + device.tablet + device.desktop || 1\r\n\r\n  const data = () => {\r\n    return {\r\n      datasets: [\r\n        {\r\n          data: [device.desktop, device.tablet, device.mobile, device.unknown],\r\n          backgroundColor: [colors.indigo[500], colors.red[600], colors.orange[600], colors.grey[400]],\r\n          borderWidth: 4,\r\n          borderColor: colors.common.white,\r\n          hoverBorderColor: colors.common.white\r\n        }\r\n      ],\r\n      labels: ['Desktop', 'Tablet', 'Mobile', 'Unknown']\r\n    }\r\n  }\r\n  const options = {\r\n    animation: false,\r\n    cutoutPercentage: 82,\r\n    layout: { padding: 0 },\r\n    legend: {\r\n      display: false\r\n    },\r\n    maintainAspectRatio: false,\r\n    responsive: true,\r\n    tooltips: {\r\n      backgroundColor: theme.palette.background.default,\r\n      bodyFontColor: theme.palette.text.secondary,\r\n      borderColor: theme.palette.divider,\r\n      borderWidth: 1,\r\n      enabled: true,\r\n      footerFontColor: theme.palette.text.secondary,\r\n      intersect: false,\r\n      mode: 'index',\r\n      titleFontColor: theme.palette.text.primary\r\n    }\r\n  }\r\n\r\n  const devices = [\r\n    {\r\n      title: 'Desktop',\r\n      value: ((device.desktop / sum) * 100).toFixed(1),\r\n      icon: LaptopMacIcon,\r\n      color: colors.indigo[500]\r\n    },\r\n    {\r\n      title: 'Tablet',\r\n      value: ((device.tablet / sum) * 100).toFixed(1),\r\n      icon: TabletIcon,\r\n      color: colors.red[600]\r\n    },\r\n    {\r\n      title: 'Mobile',\r\n      value: ((device.mobile / sum) * 100).toFixed(1),\r\n      icon: PhoneIcon,\r\n      color: colors.orange[600]\r\n    },\r\n    {\r\n      title: 'Unknown',\r\n      value: ((device.unknown / sum) * 100).toFixed(1),\r\n      icon: QuestionIcon,\r\n      color: colors.grey[600]\r\n    }\r\n  ]\r\n\r\n  return (\r\n    <Card className={clsx(classes.root, className)} {...rest}>\r\n      <CardHeader title=\"Traffic by Device\" />\r\n      <Divider />\r\n      <CardContent>\r\n        <Box height={300} position=\"relative\">\r\n          <Doughnut data={data} options={options} />\r\n        </Box>\r\n        <Box display=\"flex\" justifyContent=\"center\" mt={2}>\r\n          {devices.map(({ color, icon: Icon, title, value }) => (\r\n            <Box key={title} p={0.5} textAlign=\"center\">\r\n              <Icon color=\"action\" />\r\n              <Typography color=\"textPrimary\" variant=\"body1\">\r\n                {title}\r\n              </Typography>\r\n              <Typography style={{ color, fontSize: '1.7rem' }} variant=\"h5\">\r\n                {value}%\r\n              </Typography>\r\n            </Box>\r\n          ))}\r\n        </Box>\r\n      </CardContent>\r\n    </Card>\r\n  )\r\n}\r\n\r\nTrafficByDevice.propTypes = {\r\n  className: PropTypes.string,\r\n  statistics: PropTypes.object\r\n}\r\n\r\nexport default TrafficByDevice\r\n","import React from 'react'\r\nimport { LoadingOutlined } from '@ant-design/icons'\r\n\r\nexport const antIcon = <LoadingOutlined style={{ fontSize: 48 }} spin />\r\n","import React, { useEffect, useState } from 'react'\r\nimport { Container, Grid, makeStyles } from '@material-ui/core'\r\nimport Page from 'components/Page'\r\nimport Statistics from './Statistics'\r\nimport TasksProgress from './TasksProgress'\r\nimport TotalUsers from './TotalUsers'\r\nimport TotalAnswers from './TotalAnswers'\r\nimport TrafficByDevice from './TrafficByDevice'\r\nimport api from 'api'\r\nimport { toast } from 'react-toastify'\r\nimport { Spin } from 'antd'\r\nimport { antIcon } from 'utils/spinIcon'\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n  root: {\r\n    backgroundColor: theme.palette.background.dark,\r\n    minHeight: '100%',\r\n    paddingBottom: theme.spacing(3),\r\n    paddingTop: theme.spacing(3)\r\n  }\r\n}))\r\n\r\nconst Dashboard = props => {\r\n  const classes = useStyles()\r\n  const [statistics, setStatistics] = useState(null)\r\n  const [spin, setSpin] = useState(true)\r\n\r\n  const getStat = () => {\r\n    api.queryStatistics().then(res => {\r\n      if (!res.success) {\r\n        toast.error(res.info)\r\n      } else {\r\n        setSpin(false)\r\n        setStatistics(res.data)\r\n      }\r\n    })\r\n  }\r\n\r\n  useEffect(() => {\r\n    getStat()\r\n  }, [])\r\n\r\n  return (\r\n    <Page className={classes.root} title=\"Dashboard\">\r\n      <Container maxWidth={false}>\r\n        <Spin indicator={antIcon} spinning={spin}>\r\n          <Grid container spacing={3}>\r\n            <Grid item lg={4} sm={6} xl={4} xs={12}>\r\n              <TotalUsers statistics={statistics} />\r\n            </Grid>\r\n            <Grid item lg={4} sm={6} xl={4} xs={12}>\r\n              <TasksProgress statistics={statistics} />\r\n            </Grid>\r\n            <Grid item lg={4} sm={6} xl={4} xs={12}>\r\n              <TotalAnswers statistics={statistics} />\r\n            </Grid>\r\n            <Grid item lg={8} md={12} xl={9} xs={12}>\r\n              <Statistics {...props} statistics={statistics} />\r\n            </Grid>\r\n            <Grid item lg={4} md={6} xl={3} xs={12}>\r\n              <TrafficByDevice statistics={statistics} />\r\n            </Grid>\r\n          </Grid>\r\n        </Spin>\r\n      </Container>\r\n    </Page>\r\n  )\r\n}\r\n\r\nexport default Dashboard\r\n","import React, { useState } from 'react'\r\nimport clsx from 'clsx'\r\nimport PropTypes from 'prop-types'\r\nimport moment from 'moment'\r\nimport Avatar from '@material-ui/core/Avatar'\r\nimport Box from '@material-ui/core/Box'\r\nimport Card from '@material-ui/core/Card'\r\nimport Typography from '@material-ui/core/Typography'\r\nimport { makeStyles } from '@material-ui/core/styles'\r\nimport ButtonGroup from '@material-ui/core/ButtonGroup'\r\nimport Button from '@material-ui/core/Button'\r\nimport DialogTitle from '@material-ui/core/DialogTitle'\r\nimport DialogContent from '@material-ui/core/DialogContent'\r\nimport DialogContentText from '@material-ui/core/DialogContentText'\r\nimport DialogActions from '@material-ui/core/DialogActions'\r\nimport Dialog from '@material-ui/core/Dialog'\r\nimport getInitials from 'utils/getInitials'\r\nimport { Table } from 'antd'\r\nimport api from 'api'\r\nimport { toast } from 'react-toastify'\r\nimport CardContent from '@material-ui/core/CardContent'\r\nimport Input from '@material-ui/core/Input'\r\nimport InputAdornment from '@material-ui/core/InputAdornment'\r\nimport InputLabel from '@material-ui/core/InputLabel'\r\nimport Select from '@material-ui/core/Select'\r\nimport SvgIcon from '@material-ui/core/SvgIcon'\r\nimport TextField from '@material-ui/core/TextField'\r\nimport CheckIcon from '@material-ui/icons/Check'\r\nimport { Search as SearchIcon } from 'react-feather'\r\nimport downloadFile from 'utils/download'\r\nimport url from 'url'\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n  root: {},\r\n  avatar: {\r\n    marginRight: theme.spacing(2)\r\n  },\r\n  toolBar: {\r\n    marginBottom: theme.spacing(1)\r\n  }\r\n}))\r\n\r\nconst columns = [\r\n  { title: 'Name', dataIndex: 'name', render: undefined },\r\n  { title: 'Email', dataIndex: 'email' },\r\n  { title: 'Chinese Class', dataIndex: 'chinese_class' },\r\n  { title: 'HSK Level', dataIndex: 'hks_level' },\r\n  { title: 'Ethnic Background', dataIndex: 'ethnic_background' },\r\n  {\r\n    title: 'CN-relation',\r\n    dataIndex: 'has_chinese_acquaintance',\r\n    render: has => {\r\n      return has ? <CheckIcon style={{ color: 'green' }} /> : ''\r\n    }\r\n  },\r\n  {\r\n    title: 'Acquaintance Detail',\r\n    dataIndex: 'acquaintance_detail'\r\n  },\r\n  {\r\n    title: 'RegisteredAt',\r\n    dataIndex: 'created_at',\r\n    render: time => moment(time).format('YYYY-MM-DD hh:mm:ss')\r\n  },\r\n  { title: 'Operation', dataIndex: 'id', render: undefined, fixed: 'right' }\r\n]\r\nconst rowSelection = {\r\n  getCheckboxProps: user => ({\r\n    uid: user.id\r\n  })\r\n}\r\n\r\nconst Results = ({ className, users, papers, reload, history, ...rest }) => {\r\n  const classes = useStyles()\r\n  const [filterUserName, setFilterUserName] = useState('')\r\n  const [deletePopInfo, setDeletePopInfo] = useState(0) // 只需要uid就可以了\r\n  const [reviewPopInfo, setReviewPopInfo] = useState(null) // {pid:0, uid:0}\r\n  const [reviewPapers, setReviewPapers] = useState([]) // [paper]\r\n  const [exportPopup, setExportPopup] = useState(false)\r\n  const [selectedUsers, setSelectedUsers] = useState([]) // [uid]\r\n  const [exportPaperId, setExportPaperId] = useState(0) // paper_id\r\n  const [ext, setExt] = useState('csv') // csv or xlsx\r\n  const [selectedOnly, setSelectedOnly] = useState(false)\r\n\r\n  const handleReviewOpen = user => () => {\r\n    setReviewPapers(user.papers)\r\n    setReviewPopInfo({ uid: user.id })\r\n  }\r\n\r\n  const handleReview = () => {\r\n    history.push('/admin/users/' + (reviewPopInfo.pid || reviewPapers[0].pid) + '/' + reviewPopInfo.uid)\r\n  }\r\n\r\n  const handleOpen = user => () => {\r\n    setDeletePopInfo(user)\r\n  }\r\n\r\n  columns[0].render = name => {\r\n    return (\r\n      <Box alignItems=\"center\" display=\"flex\">\r\n        <Avatar className={classes.avatar}>{getInitials(name)}</Avatar>\r\n        <Typography color=\"textPrimary\" variant=\"body1\">\r\n          {name}\r\n        </Typography>\r\n      </Box>\r\n    )\r\n  }\r\n  columns[columns.length - 1].render = (uid, user) => (\r\n    <ButtonGroup size=\"small\">\r\n      <Button color=\"primary\" onClick={handleReviewOpen(user)} disabled={!user.papers || user.papers.length <= 0}>\r\n        review\r\n      </Button>\r\n      <Button color=\"secondary\" onClick={handleOpen(uid)}>\r\n        delete\r\n      </Button>\r\n    </ButtonGroup>\r\n  )\r\n\r\n  const handleChange = e => {\r\n    setReviewPopInfo({ uid: reviewPopInfo.uid, pid: e.target.value })\r\n  }\r\n\r\n  const handleClose = () => {\r\n    setDeletePopInfo(0)\r\n    setReviewPopInfo(null)\r\n    setExportPopup(false)\r\n  }\r\n\r\n  const deleteUser = () => {\r\n    api.deleteUser({ uid: deletePopInfo }).then(res => {\r\n      if (!res.success) {\r\n        toast.error(res.info)\r\n      } else {\r\n        toast.warning('😢 you actually deleted somebody!')\r\n        reload()\r\n        handleClose()\r\n      }\r\n    })\r\n  }\r\n\r\n  const deleteAnswers = () => {\r\n    api.deleteAnswers({ uid: deletePopInfo }).then(res => {\r\n      if (!res.success) {\r\n        toast.error(res.info)\r\n      } else {\r\n        toast.warning(\"😢 you actually deleted somebody's progress!\")\r\n        handleClose()\r\n      }\r\n    })\r\n  }\r\n\r\n  const onSearchUser = e => {\r\n    setFilterUserName(e.currentTarget.value)\r\n  }\r\n\r\n  const onClickExport = table => () => {\r\n    const req = { table: table, ext: ext, paper_id: Number(exportPaperId) }\r\n    if (!!selectedUsers && selectedOnly) {\r\n      req['ids'] = selectedUsers\r\n    }\r\n    api.exportData(req).then(res => {\r\n      if (!res.success) {\r\n        toast.error(res.info)\r\n      } else {\r\n        downloadFile(res)\r\n      }\r\n    })\r\n  }\r\n\r\n  const setPage = page => {\r\n    history.push(history.location.pathname + '?page=' + page)\r\n  }\r\n\r\n  const getPage = () => {\r\n    return url.parse(history.location.pathname + history.location.search, true).query.page || 1\r\n  }\r\n\r\n  const renderExportPopup = () => {\r\n    if (exportPaperId === 0 && papers.length > 0) {\r\n      setExportPaperId(papers[papers.length - 1].id)\r\n    }\r\n    return (\r\n      <Dialog open={!!exportPopup} onClose={handleClose}>\r\n        <DialogTitle>Ready to export data?</DialogTitle>\r\n        <DialogContent style={{ marginBottom: 30 }}>\r\n          <DialogContentText>export csv for less network bandwidth consumption...</DialogContentText>\r\n          <Box display=\"flex\">\r\n            <Box marginRight={5} width={'40%'}>\r\n              <InputLabel>select paper</InputLabel>\r\n              <Select\r\n                native\r\n                fullWidth\r\n                value={exportPaperId}\r\n                onChange={e => {\r\n                  setExportPaperId(e.currentTarget.value)\r\n                }}\r\n                input={<Input id=\"export-select-paper\" />}\r\n              >\r\n                {papers.map(paper => (\r\n                  <option key={paper.id} value={paper.id}>\r\n                    {paper.name}\r\n                  </option>\r\n                ))}\r\n              </Select>\r\n            </Box>\r\n            <Box width={'40%'}>\r\n              <InputLabel>select Extension</InputLabel>\r\n              <Select\r\n                native\r\n                fullWidth\r\n                value={ext}\r\n                onChange={e => {\r\n                  setExt(e.currentTarget.value)\r\n                }}\r\n                input={<Input id=\"export-select-paper\" />}\r\n              >\r\n                <option value=\"csv\">csv</option>\r\n                <option value=\"xlsx\">xlsx</option>\r\n              </Select>\r\n            </Box>\r\n          </Box>\r\n        </DialogContent>\r\n        <DialogActions>\r\n          <Button onClick={onClickExport('user')} color=\"primary\">\r\n            Export Users\r\n          </Button>\r\n          <Button onClick={onClickExport('answer')} color=\"primary\">\r\n            Export Answers\r\n          </Button>\r\n          <Button onClick={handleClose} color=\"default\">\r\n            Cancel\r\n          </Button>\r\n        </DialogActions>\r\n      </Dialog>\r\n    )\r\n  }\r\n\r\n  const toolBar = () => {\r\n    return (\r\n      <div className={classes.toolBar}>\r\n        <Box display=\"flex\" justifyContent=\"flex-end\">\r\n          <Button\r\n            color=\"primary\"\r\n            variant=\"contained\"\r\n            onClick={() => {\r\n              setExportPopup(true)\r\n              setSelectedOnly(true)\r\n            }}\r\n            disabled={selectedUsers.length <= 0}\r\n          >\r\n            Export Selected\r\n          </Button>\r\n          <Button\r\n            style={{ marginLeft: 12 }}\r\n            color=\"primary\"\r\n            variant=\"contained\"\r\n            onClick={() => {\r\n              setExportPopup(true)\r\n              setSelectedOnly(false)\r\n            }}\r\n          >\r\n            Export All\r\n          </Button>\r\n        </Box>\r\n        <Box mt={3}>\r\n          <Card>\r\n            <CardContent>\r\n              <Box maxWidth={500}>\r\n                <TextField\r\n                  size=\"small\"\r\n                  fullWidth\r\n                  InputProps={{\r\n                    startAdornment: (\r\n                      <InputAdornment position=\"start\">\r\n                        <SvgIcon fontSize=\"small\" color=\"action\">\r\n                          <SearchIcon />\r\n                        </SvgIcon>\r\n                      </InputAdornment>\r\n                    )\r\n                  }}\r\n                  placeholder=\"Search user\"\r\n                  variant=\"outlined\"\r\n                  value={filterUserName}\r\n                  onChange={onSearchUser}\r\n                />\r\n              </Box>\r\n            </CardContent>\r\n          </Card>\r\n        </Box>\r\n      </div>\r\n    )\r\n  }\r\n\r\n  const onSelect = (record, selected, selectedRows) => {\r\n    setSelectedUsers(selectedRows.map(user => user.id))\r\n  }\r\n\r\n  const onSelectAll = (selected, selectedRows) => {\r\n    setSelectedUsers(selectedRows.map(user => user.id))\r\n  }\r\n\r\n  return (\r\n    <>\r\n      {toolBar()}\r\n      <Card className={clsx(classes.root, className)} {...rest}>\r\n        <Box>\r\n          <Table\r\n            size=\"small\"\r\n            scroll={{ x: true }}\r\n            rowKey=\"id\"\r\n            rowSelection={{\r\n              type: 'checkbox',\r\n              ...rowSelection,\r\n              onSelect: onSelect,\r\n              onSelectAll: onSelectAll\r\n            }}\r\n            columns={columns}\r\n            dataSource={users.filter(value => {\r\n              return value.name.toLowerCase().search(filterUserName.toLowerCase()) !== -1\r\n            })}\r\n            pagination={{\r\n              current: getPage(),\r\n              onChange: page => {\r\n                setPage(page)\r\n              },\r\n              defaultPageSize: 10,\r\n              showSizeChanger: true,\r\n              showQuickJumper: true,\r\n              showTotal: total => `Total ${total} Users`\r\n            }}\r\n          />\r\n          {renderExportPopup()}\r\n          <Dialog open={!!deletePopInfo} onClose={handleClose}>\r\n            <DialogTitle>Are you sure to delete?</DialogTitle>\r\n            <DialogContent>\r\n              <DialogContentText>it's a dangerous move!</DialogContentText>\r\n              <DialogContentText>If you delete an User, then all of his progress is wiped off too!</DialogContentText>\r\n              <DialogContentText>Delete Answers will only clear the user's progress...</DialogContentText>\r\n            </DialogContent>\r\n            <DialogActions>\r\n              <Button onClick={deleteAnswers} color=\"secondary\">\r\n                Delete Answers\r\n              </Button>\r\n              <Button onClick={deleteUser} color=\"secondary\">\r\n                Delete User\r\n              </Button>\r\n              <Button onClick={handleClose} color=\"primary\">\r\n                Cancel\r\n              </Button>\r\n            </DialogActions>\r\n          </Dialog>\r\n          <Dialog disableBackdropClick disableEscapeKeyDown open={!!reviewPopInfo} onClose={handleClose}>\r\n            <DialogTitle>Select Paper</DialogTitle>\r\n            <DialogContent>\r\n              <InputLabel>paper</InputLabel>\r\n              <Select\r\n                native\r\n                fullWidth\r\n                value={!!reviewPopInfo ? reviewPopInfo.pid : 0}\r\n                onChange={handleChange}\r\n                input={<Input id=\"demo-dialog-native\" />}\r\n              >\r\n                {!!reviewPapers ? (\r\n                  reviewPapers.map(paper => (\r\n                    <option key={paper.pid} value={paper.pid}>\r\n                      {paper.p_name}\r\n                    </option>\r\n                  ))\r\n                ) : (\r\n                  <option aria-label=\"None\" value=\"\" />\r\n                )}\r\n              </Select>\r\n            </DialogContent>\r\n            <DialogActions>\r\n              <Button onClick={handleReview} color=\"primary\">\r\n                Ok\r\n              </Button>\r\n              <Button onClick={handleClose} color=\"primary\">\r\n                Cancel\r\n              </Button>\r\n            </DialogActions>\r\n          </Dialog>\r\n        </Box>\r\n      </Card>\r\n    </>\r\n  )\r\n}\r\n\r\nResults.propTypes = {\r\n  className: PropTypes.string,\r\n  users: PropTypes.array.isRequired,\r\n  papers: PropTypes.array.isRequired,\r\n  history: PropTypes.any\r\n}\r\n\r\nexport default Results\r\n","export default (name = '') =>\r\n  name\r\n    .replace(/\\s+/, ' ')\r\n    .split(' ')\r\n    .slice(0, 2)\r\n    .map(v => v && v[0].toUpperCase())\r\n    .join('')\r\n","import download from 'downloadjs'\r\n\r\nexport default function downloadFile(resp) {\r\n  // 提取文件名\r\n  const fileName = resp.headers['content-disposition'].match(/filename=(.*)/)[1]\r\n  const contentType = resp.headers['content-type']\r\n  download(resp.data, fileName, contentType)\r\n}\r\n","import React, { useEffect, useState } from 'react'\r\nimport { Box, Container, makeStyles } from '@material-ui/core'\r\nimport Page from 'components/Page'\r\nimport Results from './Results'\r\nimport api from '../../../api'\r\nimport { toast } from 'react-toastify'\r\nimport { Spin } from 'antd'\r\nimport { antIcon } from 'utils/spinIcon'\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n  root: {\r\n    backgroundColor: theme.palette.background.dark,\r\n    minHeight: '100%',\r\n    paddingBottom: theme.spacing(1),\r\n    paddingTop: theme.spacing(1)\r\n  }\r\n}))\r\n\r\nconst Users = props => {\r\n  const classes = useStyles()\r\n  const [users, setUsers] = useState([])\r\n  const [papers, setPapers] = useState([])\r\n  const [spin, setSpin] = useState(true)\r\n\r\n  const getUsers = () => {\r\n    api.QueryUsers().then(res => {\r\n      setSpin(false)\r\n      if (!res.success) {\r\n        toast.error(res.info)\r\n      } else {\r\n        setUsers(res.data)\r\n      }\r\n    })\r\n  }\r\n\r\n  const getPapers = () => {\r\n    api.queryPapers().then(res => {\r\n      if (!res.success) {\r\n        toast.error(res.info)\r\n      } else {\r\n        setPapers(res.data.papers)\r\n      }\r\n    })\r\n  }\r\n\r\n  const getAllInfo = () => {\r\n    getPapers()\r\n    getUsers()\r\n  }\r\n\r\n  useEffect(() => {\r\n    getAllInfo()\r\n    // eslint-disable-next-line react-hooks/exhaustive-deps\r\n  }, [])\r\n\r\n  return (\r\n    <Page className={classes.root} title=\"Customers\">\r\n      <Container maxWidth={false}>\r\n        <Box mt={3} style={{ minWidth: 600 }}>\r\n          {/*// todo dont use another page, use sub component */}\r\n          <Spin indicator={antIcon} spinning={spin}>\r\n            <Results users={users} papers={papers} reload={getAllInfo} history={props.history} />\r\n          </Spin>\r\n        </Box>\r\n      </Container>\r\n    </Page>\r\n  )\r\n}\r\n\r\nexport default Users\r\n","import React, { useState, useEffect } from 'react'\r\nimport PropTypes from 'prop-types'\r\nimport clsx from 'clsx'\r\nimport {\r\n  Box,\r\n  Button,\r\n  Card,\r\n  CardContent,\r\n  CardHeader,\r\n  Divider,\r\n  TextField,\r\n  makeStyles,\r\n  Grid,\r\n  InputLabel,\r\n  Select,\r\n  MenuItem,\r\n  Dialog,\r\n  DialogTitle,\r\n  DialogContent,\r\n  DialogContentText,\r\n  DialogActions\r\n} from '@material-ui/core'\r\nimport api from '../../../api'\r\nimport { toast } from 'react-toastify'\r\n\r\nconst useStyles = makeStyles({\r\n  root: {}\r\n})\r\n\r\nconst defaultSettings = {\r\n  BitRate: 128,\r\n  SampleRate: 16000\r\n}\r\n\r\nconst SettingsContent = ({ className, ...rest }) => {\r\n  const classes = useStyles()\r\n  const [settings, setSettings] = useState(defaultSettings)\r\n  const [updated, setUpdated] = useState(false)\r\n  const [popOpen, setPopOpen] = useState(false)\r\n\r\n  const handleOpen = () => {\r\n    setPopOpen(true)\r\n  }\r\n  const handleClose = () => {\r\n    setPopOpen(false)\r\n  }\r\n\r\n  const handleChange = event => {\r\n    setSettings({\r\n      ...settings,\r\n      [event.target.name]: event.target.value\r\n    })\r\n  }\r\n\r\n  const getSetting = () => {\r\n    api.querySettings().then(res => {\r\n      if (!res.success) {\r\n        toast.error(res.info)\r\n      } else {\r\n        setSettings(res.data)\r\n      }\r\n    })\r\n  }\r\n\r\n  const updateSetting = () => {\r\n    api.updateSetting(settings).then(res => {\r\n      if (!res.success) {\r\n        toast.error(res.info)\r\n      } else {\r\n        toast.success('🎉 YAY, you did it! ✨')\r\n        setUpdated(prevState => !prevState)\r\n      }\r\n    })\r\n  }\r\n\r\n  const resetSetting = () => {\r\n    api.updateSetting(defaultSettings).then(res => {\r\n      if (!res.success) {\r\n        toast.error(res.info)\r\n      } else {\r\n        toast.success('🎉 YAY, you did it! ✨')\r\n        setUpdated(prevState => !prevState)\r\n        handleClose()\r\n      }\r\n    })\r\n  }\r\n\r\n  useEffect(() => {\r\n    getSetting()\r\n  }, [updated])\r\n\r\n  return (\r\n    <form className={clsx(classes.root, className)} {...rest}>\r\n      <Card>\r\n        <CardHeader subheader=\"tune audio config\" title=\"Audio Config\" />\r\n        <Divider />\r\n        <CardContent>\r\n          <Grid container>\r\n            <Grid item xs={4}>\r\n              <InputLabel>SampleRate</InputLabel>\r\n              <Select\r\n                labelId=\"demo-simple-select-label\"\r\n                id=\"demo-simple-select\"\r\n                name=\"SampleRate\"\r\n                fullWidth\r\n                value={settings.SampleRate}\r\n                onChange={handleChange}\r\n              >\r\n                <MenuItem value={8000}>8000</MenuItem>\r\n                <MenuItem value={11025}>11025</MenuItem>\r\n                <MenuItem value={16000}>16000</MenuItem>\r\n                <MenuItem value={22050}>22050</MenuItem>\r\n                <MenuItem value={24000}>24000</MenuItem>\r\n                <MenuItem value={44100}>44100</MenuItem>\r\n                <MenuItem value={48000}>44100</MenuItem>\r\n                <MenuItem value={50000}>50000</MenuItem>\r\n                <MenuItem value={96000}>96000</MenuItem>\r\n              </Select>\r\n            </Grid>\r\n            <Grid item xs={4} />\r\n            <Grid item xs={4}>\r\n              <InputLabel>BitRate</InputLabel>\r\n              <TextField\r\n                name=\"BitRate\"\r\n                type=\"number\"\r\n                InputLabelProps={{\r\n                  shrink: true\r\n                }}\r\n                fullWidth\r\n                variant=\"standard\"\r\n                value={settings.BitRate}\r\n                onChange={handleChange}\r\n              />\r\n            </Grid>\r\n          </Grid>\r\n        </CardContent>\r\n        <Divider />\r\n        {/*justifyContent=\"flex-end\"*/}\r\n        <Box display=\"flex\" justifyContent=\"space-between\" p={2}>\r\n          <Button color=\"secondary\" variant=\"contained\" onClick={handleOpen}>\r\n            Reset\r\n          </Button>\r\n          <Button color=\"primary\" variant=\"contained\" onClick={updateSetting}>\r\n            Update\r\n          </Button>\r\n          <Dialog\r\n            open={popOpen}\r\n            onClose={handleClose}\r\n            aria-labelledby=\"alert-dialog-title\"\r\n            aria-describedby=\"alert-dialog-description\"\r\n          >\r\n            <DialogTitle id=\"alert-dialog-title\">Do you confirm to proceed the reset?</DialogTitle>\r\n            <DialogContent>\r\n              <DialogContentText id=\"alert-dialog-description\">\r\n                The default value of SampleRate is 16000, BitRate is 128.\r\n              </DialogContentText>\r\n            </DialogContent>\r\n            <DialogActions>\r\n              <Button onClick={resetSetting} color=\"primary\">\r\n                Ok\r\n              </Button>\r\n              <Button onClick={handleClose} color=\"primary\">\r\n                Cancel\r\n              </Button>\r\n            </DialogActions>\r\n          </Dialog>\r\n        </Box>\r\n      </Card>\r\n    </form>\r\n  )\r\n}\r\n\r\nSettingsContent.propTypes = {\r\n  className: PropTypes.string\r\n}\r\n\r\nexport default SettingsContent\r\n","import React from 'react'\r\nimport { Box, Container, makeStyles } from '@material-ui/core'\r\nimport Page from 'components/Page'\r\nimport SettingsContent from './Settings'\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n  root: {\r\n    backgroundColor: theme.palette.background.dark,\r\n    minHeight: '100%',\r\n    paddingBottom: theme.spacing(3),\r\n    paddingTop: theme.spacing(3)\r\n  }\r\n}))\r\n\r\nconst Settings = () => {\r\n  const classes = useStyles()\r\n\r\n  return (\r\n    <Page className={classes.root} title=\"Settings\">\r\n      <Container maxWidth=\"lg\">\r\n        <Box mt={3}>\r\n          <SettingsContent />\r\n        </Box>\r\n      </Container>\r\n    </Page>\r\n  )\r\n}\r\n\r\nexport default Settings\r\n","import React, { useState } from 'react'\r\nimport {\r\n  Button,\r\n  Dialog,\r\n  DialogActions,\r\n  DialogContent,\r\n  DialogTitle,\r\n  Grid,\r\n  InputLabel,\r\n  makeStyles,\r\n  TextField\r\n} from '@material-ui/core'\r\nimport { toast } from 'react-toastify'\r\nimport api from 'api'\r\nimport { Input } from 'antd'\r\n\r\nconst { TextArea } = Input\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n  root: {\r\n    display: 'flex',\r\n    justifyContent: 'center',\r\n    flexWrap: 'wrap',\r\n    '& > *': {\r\n      margin: theme.spacing(0.5)\r\n    }\r\n  },\r\n  chip: {\r\n    margin: theme.spacing(0.5)\r\n  },\r\n  input: {\r\n    marginLeft: theme.spacing(1),\r\n    flex: 1\r\n  }\r\n}))\r\n\r\nconst Editor = props => {\r\n  const classes = useStyles()\r\n  const [words, setWords] = useState('') // {key:index, label:word}\r\n  const [interval, setInterval] = useState(0)\r\n  const [name, setName] = useState('')\r\n\r\n  const onUpdatePaper = () => {\r\n    api.editPaper({ ...props.data, words: words, interval: interval }).then(res => {\r\n      if (!res.success) {\r\n        toast.error(res.info)\r\n      } else {\r\n        toast.success('updated!')\r\n        props.refreshPaper()\r\n        props.onClickExit()\r\n      }\r\n    })\r\n  }\r\n\r\n  const onAddPaper = () => {\r\n    api.addPaper({ name: name, interval: interval, words: words }).then(res => {\r\n      if (!res.success) {\r\n        toast.error(res.info)\r\n      } else {\r\n        toast.success('success!')\r\n        props.refreshPaper()\r\n        props.onClickExit()\r\n      }\r\n    })\r\n  }\r\n\r\n  const onClickOk = () => {\r\n    props.type === 'add' ? onAddPaper() : onUpdatePaper()\r\n  }\r\n\r\n  const onUpdateInterval = e => {\r\n    setInterval(parseInt(e.currentTarget.value))\r\n  }\r\n\r\n  const editWords = e => {\r\n    setWords(e.currentTarget.value)\r\n  }\r\n\r\n  const editName = e => {\r\n    setName(e.currentTarget.value)\r\n  }\r\n\r\n  return (\r\n    <Grid container>\r\n      <Grid item xs={12}>\r\n        <Dialog maxWidth=\"md\" fullWidth open={props.open} onClose={props.onClickExit}>\r\n          {props.type === 'edit' && (\r\n            <DialogTitle>\r\n              Id: {(props.data && props.data.id) || 0}; PaperName: {(props.data && props.data.name) || ''}\r\n            </DialogTitle>\r\n          )}\r\n          <DialogContent className={classes.root}>\r\n            <Grid container>\r\n              {props.type === 'add' && (\r\n                <>\r\n                  <Grid item xs={2}>\r\n                    <InputLabel>Paper Name</InputLabel>\r\n                  </Grid>\r\n                  <Grid item xs={10} style={{ marginBottom: 20 }}>\r\n                    <TextField variant=\"standard\" onChange={editName} />\r\n                  </Grid>\r\n                </>\r\n              )}\r\n              <Grid item xs={2}>\r\n                <InputLabel>Interval (per/s)</InputLabel>\r\n              </Grid>\r\n              <Grid item xs={10} style={{ marginBottom: 20 }}>\r\n                <TextField\r\n                  type=\"number\"\r\n                  variant=\"standard\"\r\n                  defaultValue={props.data && props.data.interval}\r\n                  onChange={onUpdateInterval}\r\n                />\r\n              </Grid>\r\n              <Grid item xs={2}>\r\n                <InputLabel>Words</InputLabel>\r\n              </Grid>\r\n              <Grid item xs={10}>\r\n                <TextArea\r\n                  placeholder=\"you can edit words here\"\r\n                  autoSize\r\n                  defaultValue={props.data && props.data.words}\r\n                  onChange={editWords}\r\n                />\r\n              </Grid>\r\n            </Grid>\r\n          </DialogContent>\r\n          <DialogActions>\r\n            <Button onClick={onClickOk} color=\"primary\">\r\n              Ok\r\n            </Button>\r\n            <Button onClick={props.onClickExit} color=\"primary\">\r\n              Cancel\r\n            </Button>\r\n          </DialogActions>\r\n        </Dialog>\r\n      </Grid>\r\n    </Grid>\r\n  )\r\n}\r\n\r\nexport default Editor\r\n","import React, { useState } from 'react'\r\nimport clsx from 'clsx'\r\nimport PropTypes from 'prop-types'\r\nimport moment from 'moment'\r\nimport Box from '@material-ui/core/Box'\r\nimport Card from '@material-ui/core/Card'\r\nimport ButtonGroup from '@material-ui/core/ButtonGroup'\r\nimport Button from '@material-ui/core/Button'\r\nimport Chip from '@material-ui/core/Chip'\r\nimport { makeStyles } from '@material-ui/core/styles'\r\nimport Editor from './editor/editor'\r\nimport { Table } from 'antd'\r\nimport api from 'api'\r\nimport { toast } from 'react-toastify'\r\nimport { markDuplicates } from '../../../utils/duplicate'\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n  root: {},\r\n  avatar: {\r\n    marginRight: theme.spacing(2)\r\n  }\r\n}))\r\n\r\nconst columns = [\r\n  { title: 'Id', dataIndex: 'id', sorter: (a, b) => a.id - b.id, sortDirections: ['ascend', 'descend', 'ascend'] },\r\n  { title: 'CreatedAt', dataIndex: 'created_at', render: createdAt => moment(createdAt).format('YYYY-MM-DD hh:mm:ss') },\r\n  {\r\n    title: 'Name',\r\n    render: paper =>\r\n      paper.inuse ? (\r\n        <span style={{ color: 'green', fontSize: 'x-large' }}>{paper.name}</span>\r\n      ) : (\r\n        <span>{paper.name}</span>\r\n      )\r\n  },\r\n  { title: 'Interval(/s)', dataIndex: 'interval' },\r\n  {\r\n    title: 'Words',\r\n    dataIndex: 'words',\r\n    render: words =>\r\n      // eslint-disable-next-line no-control-regex\r\n      markDuplicates(words.split(RegExp('[ \\t\\n]+'))).map((item, index) => (\r\n        <Chip\r\n          key={index}\r\n          variant=\"outlined\"\r\n          size=\"small\"\r\n          label={item.word}\r\n          color={item.dup ? 'secondary' : 'primary'}\r\n        />\r\n      ))\r\n  },\r\n  {\r\n    title: 'Operation',\r\n    render: undefined,\r\n    fixed: 'right'\r\n  }\r\n]\r\nconst rowSelection = {\r\n  getCheckboxProps: paper => ({\r\n    paper_id: paper.id\r\n  })\r\n}\r\n\r\nconst Results = ({ className, papers, refreshPaper, ...rest }) => {\r\n  const classes = useStyles()\r\n  const [editProps, setEditProps] = useState({ open: false, refreshPaper: refreshPaper })\r\n\r\n  const onClickEditExit = () => {\r\n    setEditProps({ open: false })\r\n  }\r\n\r\n  const handleEditClicked = data => () => {\r\n    setEditProps({ open: true, onClickExit: onClickEditExit, data: data, refreshPaper: refreshPaper })\r\n  }\r\n\r\n  const onClickPublish = pid => () => {\r\n    api.publishPaper({ pid: pid }).then(res => {\r\n      if (!res.success) {\r\n        toast.error(res.info)\r\n      } else {\r\n        toast.success('success!')\r\n        refreshPaper()\r\n      }\r\n    })\r\n  }\r\n\r\n  columns[5].render = record => (\r\n    <ButtonGroup size=\"small\">\r\n      <Button color=\"primary\" onClick={handleEditClicked(record)}>\r\n        edit\r\n      </Button>\r\n      <Button color=\"primary\" onClick={onClickPublish(record.id)}>\r\n        publish\r\n      </Button>\r\n      <Button color=\"secondary\">delete</Button>\r\n    </ButtonGroup>\r\n  )\r\n\r\n  return (\r\n    <Card className={clsx(classes.root, className)} {...rest}>\r\n      <Editor {...editProps} type=\"edit\" />\r\n      <Box minWidth={600}>\r\n        <Table\r\n          size=\"small\"\r\n          scroll={{ x: true }}\r\n          rowKey=\"id\"\r\n          columns={columns}\r\n          dataSource={papers}\r\n          rowSelection={{ ...rowSelection, type: 'checkbox' }}\r\n          pagination={{\r\n            defaultPageSize: 10,\r\n            showSizeChanger: true,\r\n            showQuickJumper: true,\r\n            showTotal: total => `Total ${total} Papers`\r\n          }}\r\n        />\r\n      </Box>\r\n    </Card>\r\n  )\r\n}\r\n\r\nResults.propTypes = {\r\n  className: PropTypes.string,\r\n  papers: PropTypes.array.isRequired\r\n}\r\n\r\nexport default Results\r\n","export function markDuplicates(items) {\r\n  let hashMap = {}\r\n  let markedItems = []\r\n  items.map((word, index) => {\r\n    markedItems.push({ word: word, dup: false })\r\n    if (!hashMap[word]) {\r\n      hashMap[word] = [1, index]\r\n    } else if (hashMap[word][0] === 1) {\r\n      hashMap[word][0] = 2\r\n      markedItems[hashMap[word][1]].dup = true\r\n      markedItems[index].dup = true\r\n    } else if (hashMap[word][0] === 2) {\r\n      markedItems[index].dup = true\r\n    }\r\n    return null\r\n  })\r\n  return markedItems\r\n}\r\n","import React, { useState, useEffect } from 'react'\r\nimport { Box, Button, Container, makeStyles, Typography } from '@material-ui/core'\r\nimport Page from 'components/Page'\r\nimport Result from './result'\r\nimport Editor from './editor/editor'\r\nimport api from 'api'\r\nimport { toast } from 'react-toastify'\r\nimport { Spin } from 'antd'\r\nimport { antIcon } from 'utils/spinIcon'\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n  root: {\r\n    backgroundColor: theme.palette.background.dark,\r\n    minHeight: '100%',\r\n    paddingBottom: theme.spacing(3),\r\n    paddingTop: theme.spacing(3)\r\n  }\r\n}))\r\n\r\nconst Papers = () => {\r\n  const classes = useStyles()\r\n  const [papers, setPapers] = useState([])\r\n  const [activePaper, setActivePaper] = useState({})\r\n  const [addNew, setAddNew] = useState(false)\r\n  const [spin, setSpin] = useState(true)\r\n\r\n  const getPapers = () => {\r\n    api.queryPapers().then(res => {\r\n      setSpin(false)\r\n      if (!res.success) {\r\n        toast.error(res.info)\r\n      } else {\r\n        setPapers(res.data.papers)\r\n        setActivePaper(res.data.active_paper)\r\n      }\r\n    })\r\n  }\r\n\r\n  useEffect(getPapers, [])\r\n\r\n  const Add = () => {\r\n    setAddNew(true)\r\n  }\r\n\r\n  const onClickX = () => {\r\n    setAddNew(false)\r\n  }\r\n\r\n  return (\r\n    <Page className={classes.root} title=\"Papers\">\r\n      <Container maxWidth={false}>\r\n        <Editor open={addNew} onClickExit={onClickX} refreshPaper={getPapers} type=\"add\" />\r\n        <Box display=\"flex\" justifyContent=\"flex-end\">\r\n          <Button color=\"primary\" variant=\"contained\" onClick={Add}>\r\n            Add New Paper\r\n          </Button>\r\n        </Box>\r\n        <Box>\r\n          <Typography color=\"textPrimary\" variant=\"h5\">\r\n            Active Paper: id({activePaper.id}): {activePaper.name}\r\n          </Typography>\r\n        </Box>\r\n        <Box mt={3}>\r\n          <Spin indicator={antIcon} spinning={spin}>\r\n            <Result papers={papers} refreshPaper={getPapers} />\r\n          </Spin>\r\n        </Box>\r\n      </Container>\r\n    </Page>\r\n  )\r\n}\r\n\r\nexport default Papers\r\n","import React from 'react'\r\nimport moment from 'moment'\r\n\r\nconst p = { style: { margin: 8 } }\r\n\r\nexport const columns = [\r\n  {\r\n    title: 'No.',\r\n    dataIndex: 'word_index',\r\n    key: 'word_index',\r\n    render: index => {\r\n      return index + 1\r\n    }\r\n  },\r\n  {\r\n    title: 'Time',\r\n    dataIndex: 'created_at',\r\n    key: 'created_at',\r\n    render: time => moment(time).format('hh:mm:ss')\r\n  },\r\n  {\r\n    title: 'Word',\r\n    dataIndex: 'word',\r\n    key: 'word',\r\n    render: text => <span>{text}</span>\r\n  },\r\n  {\r\n    title: 'Translation',\r\n    dataIndex: 'translation',\r\n    key: 'translation'\r\n  },\r\n  {\r\n    title: 'Duration',\r\n    dataIndex: 'duration',\r\n    key: 'duration',\r\n    render: duration => <span>{duration / 1000}s</span>\r\n  },\r\n  {\r\n    title: 'Device',\r\n    dataIndex: 'device',\r\n    key: 'device'\r\n  },\r\n  {\r\n    title: 'Action',\r\n    dataIndex: 'audio_url',\r\n    key: 'audio_url',\r\n    fixed: 'right',\r\n    render: url => (url ? <audio controls src={'/file/' + url} {...p} /> : '')\r\n  }\r\n]\r\n","import React, { useEffect, useState } from 'react'\r\nimport { Spin, Table } from 'antd'\r\nimport { columns } from './const'\r\nimport { toast } from 'react-toastify'\r\nimport api from 'api'\r\nimport { antIcon } from 'utils/spinIcon'\r\n\r\nconst Detail = props => {\r\n  const path = props.location.pathname.split('/')\r\n  const req = {\r\n    uid: parseInt(path.pop()),\r\n    paper_id: parseInt(path.pop()) || 1\r\n  }\r\n\r\n  const [answers, setAnswers] = useState([])\r\n  const [spin, setSpin] = useState(true)\r\n\r\n  const getAnswers = () => {\r\n    api.QueryAnswers(req).then(res => {\r\n      setSpin(false)\r\n      if (!res.success) {\r\n        toast.error(res.info)\r\n      } else {\r\n        setAnswers(res.data)\r\n      }\r\n    })\r\n  }\r\n  // eslint-disable-next-line react-hooks/exhaustive-deps\r\n  useEffect(getAnswers, [])\r\n\r\n  return (\r\n    <Spin indicator={antIcon} spinning={spin}>\r\n      <Table\r\n        size=\"small\"\r\n        rowKey=\"id\"\r\n        columns={columns}\r\n        dataSource={answers}\r\n        pagination={{\r\n          defaultPageSize: 10,\r\n          showSizeChanger: true,\r\n          showQuickJumper: true,\r\n          showTotal: total => `Total ${total} Answers`\r\n        }}\r\n      />\r\n    </Spin>\r\n  )\r\n}\r\n\r\nexport default Detail\r\n","export const dataSets = [\r\n  {\r\n    lang: 'English',\r\n    abbr: 'en',\r\n    title: 'Test Instructions',\r\n    content: [\r\n      'Please test in a quiet environment.',\r\n      'Please enable recording permission if you see a relative pop-up.',\r\n      'Please click the record button and read the presented word. After reading the word, click the record button again to end.',\r\n      'Please input the meaning of the word in your native language.',\r\n      'The time limit for each word is 15 seconds.',\r\n      'Please click the “NEXT” button after completing each word.',\r\n      'Please click the “NEXT” button if you do not know the word.',\r\n      'Please do not consult the dictionary & textbooks or search the word online.',\r\n      'Please do not quit before completion.'\r\n    ],\r\n    endings: [\r\n      'Information provided will be treated strictly confidential and will not be disclosed to third parties.',\r\n      'We will not send you any irrelevant information.',\r\n      'Thank you for your participation !'\r\n    ],\r\n    button: 'Agree And Proceed'\r\n  },\r\n  {\r\n    lang: 'ViệtName',\r\n    abbr: 'vi',\r\n    title: 'Hướng dẫn kiểm tra',\r\n    content: [\r\n      'Vui lòng kiểm tra trong môi trường yên tĩnh.',\r\n      'Nếu nhìn thấy cửa sổ bật lên, hãy cho phép sử dụng micrô.',\r\n      'Vui lòng nhấp vào nút ghi âm để đọc từ/chữ, sau khi đọc xong ấn lại vào nút ghi âm để kết thúc.',\r\n      'Sau đó gõ bản dịch tiếng việt tương ứng vào trong khung.',\r\n      'Thời hạn mỗi từ/chữ là 15 giây.',\r\n      'Nếu hoàn thành trước, hãy nhấp vào “Next”.',\r\n      'Nếu gặp chữ/từ k biết đọc hoặc không biết nghĩa, hãy nhấp vào “Next”.',\r\n      'Vui lòng không tra từ điển và bài khóa hoặc tìm trên mạng.',\r\n      'Vui lòng k thoát ra khỏi bài kiểm tra giữa chừng.'\r\n    ],\r\n    endings: [\r\n      'Thông tin bạn cung cấp trong phiếu trả lời sẽ được bảo mật nghiêm, sẽ không tiết lộ cho bên thứ ba.',\r\n      'Và chúng tôi cũng sẽ không gửi cho bạn bất kỳ thông tin không liên quan nào.',\r\n      'Cảm ơn bạn đã tham gia !'\r\n    ],\r\n    button: 'Đồng ý và Tiếp tục'\r\n  },\r\n  {\r\n    lang: '中文',\r\n    abbr: 'zh',\r\n    title: '测试说明',\r\n    content: [\r\n      '请在安静的环境中进行测试；',\r\n      '请允许录音权限（如果有相应的弹窗）；',\r\n      '请点击“录音”按钮并读出当前呈现的单词，读完单词后，再次点击“录音”按钮停止录音。',\r\n      '请用您的母语输入当前单词的意思；',\r\n      '每道题目限时15秒；',\r\n      '完成每道题目后，请点击 “NEXT” 按钮；',\r\n      '如果您不认识当前题目的单词，请直接点击 “NEXT” 按钮；',\r\n      '请不要查阅词典和教科书，也不要在网上搜索题目中的单词；',\r\n      '试卷完成前请勿退出。'\r\n    ],\r\n    endings: ['所提供的信息将严格保密，不会向第三方披露。', '我们不会向您发送任何不相关的信息。', '感谢您的参与！'],\r\n    button: '同意并开始'\r\n  }\r\n]\r\n","import React, { useEffect, useState } from 'react'\r\nimport Container from '@material-ui/core/Container'\r\nimport Typography from '@material-ui/core/Typography'\r\nimport Recorder from 'recorder-core'\r\nimport Button from '@material-ui/core/Button'\r\nimport Divider from '@material-ui/core/Divider'\r\nimport { TranslationOutlined } from '@ant-design/icons'\r\nimport { dataSets } from './data'\r\nimport { makeStyles, MenuItem, Select } from '@material-ui/core'\r\n\r\nconst useStyles = makeStyles(() => ({\r\n  select: { float: 'right', position: 'relative', bottom: 6, width: 43 },\r\n  select_icon: { float: 'right', marginRight: 4 },\r\n  button: { marginTop: 30 },\r\n  button_focused: { marginTop: 30, color: 'green', fontSize: 18, fontWeight: 'bold' }\r\n}))\r\n\r\nconst defaultAudioConf = {\r\n  bitRate: 128, // kbps\r\n  sampleRate: 16000 // hz\r\n}\r\n\r\nconst InstructionPage = props => {\r\n  const classes = useStyles()\r\n  const [buttonFocused, setButtonFocused] = useState(false)\r\n  const [recordable, setRecordable] = useState(false)\r\n  const [langIndex, setLangIndex] = useState(0)\r\n\r\n  const rec = Recorder({\r\n    type: 'mp3',\r\n    bitRate: defaultAudioConf.bitRate,\r\n    sampleRate: defaultAudioConf.sampleRate,\r\n    disableEnvInFix: false\r\n  })\r\n\r\n  const focus = () => {\r\n    setButtonFocused(true)\r\n  }\r\n\r\n  const unFocus = () => {\r\n    setButtonFocused(false)\r\n  }\r\n\r\n  useEffect(() => {\r\n    console.log('正在打开录音，请求麦克风权限...')\r\n    rec.open(\r\n      () => {\r\n        console.log('已打开录音，可以点击开始了')\r\n        rec.close()\r\n        setRecordable(true)\r\n      },\r\n      (msg, isUserNotAllow) => {\r\n        // 用户拒绝未授权或不支持\r\n        console.log((isUserNotAllow ? 'UserNotAllow，' : '') + '无法录音:' + msg)\r\n      }\r\n    )\r\n    // eslint-disable-next-line react-hooks/exhaustive-deps\r\n  }, [])\r\n\r\n  const listStyle = { style: { listStyle: 'disc' } }\r\n\r\n  const langSelect = e => {\r\n    setLangIndex(e.target.value)\r\n  }\r\n\r\n  const renderLangList = () => {\r\n    return (\r\n      <>\r\n        <Select\r\n          onChange={langSelect}\r\n          value={langIndex}\r\n          className={classes.select}\r\n          renderValue={value => dataSets[value].abbr}\r\n        >\r\n          {dataSets.map((content, index) => (\r\n            <MenuItem key={'sel' + index} value={index}>\r\n              {content.lang}\r\n            </MenuItem>\r\n          ))}\r\n        </Select>\r\n        <TranslationOutlined className={classes.select_icon} />\r\n      </>\r\n    )\r\n  }\r\n\r\n  return (\r\n    <Container maxWidth=\"xs\">\r\n      <Typography component=\"h1\" variant=\"h5\" style={{ marginTop: 30 }}>\r\n        {dataSets[langIndex].title}\r\n        {renderLangList()}\r\n      </Typography>\r\n      <Divider />\r\n      <ul style={{ marginTop: 40 }}>\r\n        {dataSets[langIndex].content.map((content, index) => (\r\n          <li {...listStyle} key={'ins' + index}>\r\n            {content}\r\n          </li>\r\n        ))}\r\n      </ul>\r\n      {dataSets[langIndex].endings.map((content, index) => (\r\n        <li key={'end' + index}>\r\n          <Typography component=\"span\" variant=\"body1\">\r\n            {content}\r\n          </Typography>\r\n        </li>\r\n      ))}\r\n      <Button\r\n        className={buttonFocused ? classes.button_focused : classes.button}\r\n        fullWidth\r\n        disabled={!recordable}\r\n        variant=\"outlined\"\r\n        onClick={() => {\r\n          props.history.push('/examination')\r\n        }}\r\n        onMouseEnter={focus}\r\n        onMouseLeave={unFocus}\r\n        onFocus={focus}\r\n        onBlur={unFocus}\r\n      >\r\n        {dataSets[langIndex].button}\r\n      </Button>\r\n    </Container>\r\n  )\r\n}\r\n\r\nexport default InstructionPage\r\n","import React, { lazy } from 'react'\r\nimport { Redirect, Route, Switch } from 'react-router-dom'\r\nimport InfoPage from 'containers/info'\r\nimport ExamPage from 'containers/examination'\r\nimport FinishPage from 'containers/finish'\r\nimport DashboardLayout from 'components/layouts/DashboardLayout'\r\nimport Dashboard from 'containers/admin/dashboard'\r\nimport Users from 'containers/admin/users'\r\nimport Settings from 'containers/admin/settings'\r\nimport Papers from 'containers/admin/papers'\r\nimport Detail from 'containers/admin/users/detail'\r\nimport InstructionPage from 'containers/instruction'\r\n\r\n// const LoginContainer = lazy(() => import('containers/login'))\r\nconst AdminLogin = lazy(() => import('containers/admin/login'))\r\n\r\nexport class Routes extends React.Component<any> {\r\n  render() {\r\n    return (\r\n      <>\r\n        <Switch>\r\n          <Redirect exact={true} from=\"/\" to=\"/info\" />\r\n          <Route path=\"/info\">\r\n            <InfoPage {...this.props} />\r\n          </Route>\r\n          <Route path=\"/instruction\">\r\n            <InstructionPage {...this.props} />\r\n          </Route>\r\n          <Route path=\"/examination\" component={ExamPage} />\r\n          <Route path=\"/finish\" component={FinishPage} />\r\n          <Redirect exact={true} from=\"/admin\" to=\"/admin/login\" />\r\n          <Route path=\"/admin/login\" component={AdminLogin} />\r\n          <Route path=\"/admin/dashboard\">\r\n            <DashboardLayout components={Dashboard} {...this.props} />\r\n          </Route>\r\n          <Route path=\"/admin/users\" exact>\r\n            <DashboardLayout components={Users} {...this.props} />\r\n          </Route>\r\n          <Route path=\"/admin/users/:paper_id/:uid\">\r\n            <DashboardLayout components={Detail} {...this.props} />\r\n          </Route>\r\n          <Route path=\"/admin/papers\">\r\n            <DashboardLayout components={Papers} {...this.props} />\r\n          </Route>\r\n          <Route path=\"/admin/settings\">\r\n            <DashboardLayout components={Settings} {...this.props} />\r\n          </Route>\r\n        </Switch>\r\n      </>\r\n    )\r\n  }\r\n}\r\n\r\nexport default Routes\r\n","import React, { Suspense } from 'react'\r\nimport { createBrowserHistory } from 'history'\r\nimport { Provider } from 'mobx-react'\r\nimport { RouterStore, syncHistoryWithStore } from 'mobx-react-router'\r\nimport RootStore from './stores/root'\r\nimport { Route, Router } from 'react-router-dom'\r\nimport Routes from './routes'\r\nimport CssBaseline from '@material-ui/core/CssBaseline'\r\nimport { ToastContainer } from 'react-toastify'\r\nimport 'react-toastify/dist/ReactToastify.css'\r\n\r\nconst browserHistory = createBrowserHistory()\r\nconst routingStore = new RouterStore()\r\nconst history = syncHistoryWithStore(browserHistory, routingStore)\r\n\r\nclass App extends React.Component {\r\n  public render() {\r\n    return (\r\n      <Suspense fallback={<div>Loading...</div>}>\r\n        <CssBaseline />\r\n        <ToastContainer\r\n          position=\"top-center\"\r\n          autoClose={5000}\r\n          hideProgressBar={false}\r\n          newestOnTop={false}\r\n          closeOnClick\r\n          rtl={false}\r\n          pauseOnFocusLoss\r\n          draggable\r\n          pauseOnHover\r\n        />\r\n        <Provider {...RootStore}>\r\n          <Router history={history}>\r\n            <Route component={Routes} />\r\n          </Router>\r\n        </Provider>\r\n      </Suspense>\r\n    )\r\n  }\r\n}\r\n\r\nexport default App\r\n","import React from 'react'\r\nimport ReactDOM from 'react-dom'\r\nimport './index.scss'\r\nimport './normalize.css'\r\nimport App from './App'\r\n\r\nReactDOM.render(<App />, document.getElementById('root'))\r\n"],"sourceRoot":""}